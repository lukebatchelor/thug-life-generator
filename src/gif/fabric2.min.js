/* eslint-disable */
var fabric = fabric || { version: '3.4.0' };
if (
  ('undefined' != typeof exports
    ? (exports.fabric = fabric)
    : 'function' == typeof define &&
      define.amd &&
      define([], function() {
        return fabric;
      }),
  'undefined' != typeof document && 'undefined' != typeof window)
)
  (fabric.document =
    document instanceof ('undefined' != typeof HTMLDocument ? HTMLDocument : Document)
      ? document
      : document.implementation.createHTMLDocument('')),
    (fabric.window = window);
else {
  var jsdom = require('jsdom'),
    virtualWindow = new jsdom.JSDOM(
      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),
      { features: { FetchExternalResources: ['img'] }, resources: 'usable' }
    ).window;
  (fabric.document = virtualWindow.document),
    (fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper),
    (fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas),
    (fabric.window = virtualWindow),
    (DOMParser = fabric.window.DOMParser);
}
(fabric.isTouchSupported =
  'ontouchstart' in fabric.window ||
  'ontouchstart' in fabric.document ||
  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0)),
  (fabric.isLikelyNode = 'undefined' != typeof Buffer && 'undefined' == typeof window),
  (fabric.DPI = 96),
  (fabric.reNum = '(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:[eE][-+]?\\d+)?)'),
  (fabric.fontPaths = {}),
  (fabric.iMatrix = [1, 0, 0, 1, 0, 0]),
  (fabric.perfLimitSizeTotal = 2097152),
  (fabric.maxCacheSideLimit = 4096),
  (fabric.minCacheSideLimit = 256),
  (fabric.charWidthsCache = {}),
  (fabric.textureSize = 2048),
  (fabric.disableStyleCopyPaste = !1),
  (fabric.enableGLFiltering = !0),
  (fabric.devicePixelRatio =
    fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1),
  (fabric.browserShadowBlurConstant = 1),
  (fabric.arcToSegmentsCache = {}),
  (fabric.boundsOfCurveCache = {}),
  (fabric.cachesBoundsOfCurve = !0),
  (fabric.forceGLPutImageData = !1),
  (fabric.initFilterBackend = function() {
    return fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)
      ? (console.log('max texture size: ' + fabric.maxTextureSize),
        new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }))
      : fabric.Canvas2dFilterBackend
      ? new fabric.Canvas2dFilterBackend()
      : void 0;
  });
if ('undefined' == typeof eventjs) var eventjs = {};
if (
  ((function(e) {
    'use strict';
    (e.modifyEventListener = !1),
      (e.modifySelectors = !1),
      (e.configure = function(t) {
        isFinite(t.modifyEventListener) && (e.modifyEventListener = t.modifyEventListener),
          isFinite(t.modifySelectors) && (e.modifySelectors = t.modifySelectors),
          d === !1 && e.modifyEventListener && v(),
          g === !1 && e.modifySelectors && p();
      }),
      (e.add = function(e, t, n, r) {
        return i(e, t, n, r, 'add');
      }),
      (e.remove = function(e, t, n, r) {
        return i(e, t, n, r, 'remove');
      }),
      (e.returnFalse = function() {
        return !1;
      }),
      (e.stop = function(e) {
        e && (e.stopPropagation && e.stopPropagation(), (e.cancelBubble = !0), (e.cancelBubbleCount = 0));
      }),
      (e.prevent = function(e) {
        e &&
          (e.preventDefault
            ? e.preventDefault()
            : e.preventManipulation
            ? e.preventManipulation()
            : (e.returnValue = !1));
      }),
      (e.cancel = function(t) {
        e.stop(t), e.prevent(t);
      }),
      (e.blur = function() {
        var e = document.activeElement;
        if (e) {
          var t = document.activeElement.nodeName;
          ('INPUT' === t || 'TEXTAREA' === t || 'true' === e.contentEditable) && e.blur && e.blur();
        }
      }),
      (e.getEventSupport = function(e, t) {
        if (('string' == typeof e && ((t = e), (e = window)), (t = 'on' + t), t in e)) return !0;
        if ((e.setAttribute || (e = document.createElement('div')), e.setAttribute && e.removeAttribute)) {
          e.setAttribute(t, '');
          var i = 'function' == typeof e[t];
          return 'undefined' != typeof e[t] && (e[t] = null), e.removeAttribute(t), i;
        }
      });
    var t = function(e) {
        if (!e || 'object' != typeof e) return e;
        var i = new e.constructor();
        for (var n in e) i[n] = e[n] && 'object' == typeof e[n] ? t(e[n]) : e[n];
        return i;
      },
      i = function(o, s, l, d, v, g) {
        if (((d = d || {}), '[object Object]' === String(o))) {
          var p = o;
          if (((o = p.target), delete p.target, !p.type || !p.listener)) {
            for (var m in p) {
              var b = p[m];
              'function' != typeof b && (d[m] = b);
            }
            var y = {};
            for (var _ in p) {
              var m = _.split(','),
                w = p[_],
                C = {};
              for (var x in d) C[x] = d[x];
              if ('function' == typeof w) var l = w;
              else {
                if ('function' != typeof w.listener) continue;
                var l = w.listener;
                for (var x in w) 'function' != typeof w[x] && (C[x] = w[x]);
              }
              for (var j = 0; j < m.length; j++) y[_] = eventjs.add(o, m[j], l, C, v);
            }
            return y;
          }
          (s = p.type), delete p.type, (l = p.listener), delete p.listener;
          for (var _ in p) d[_] = p[_];
        }
        if (o && s && l) {
          if ('string' == typeof o && 'ready' === s) {
            if (!window.eventjs_stallOnReady) {
              var O = new Date().getTime(),
                S = d.timeout,
                T = d.interval || 1e3 / 60,
                P = window.setInterval(function() {
                  new Date().getTime() - O > S && window.clearInterval(P),
                    document.querySelector(o) && (window.clearInterval(P), setTimeout(l, 1));
                }, T);
              return;
            }
            (s = 'load'), (o = window);
          }
          if ('string' == typeof o) {
            if (((o = document.querySelectorAll(o)), 0 === o.length))
              return r('Missing target on listener!', arguments);
            1 === o.length && (o = o[0]);
          }
          var k,
            E = {};
          if (o.length > 0 && o !== window) {
            for (var D = 0, M = o.length; M > D; D++) (k = i(o[D], s, l, t(d), v)), k && (E[D] = k);
            return n(E);
          }
          if (
            ('string' == typeof s &&
              ((s = s.toLowerCase()),
              -1 !== s.indexOf(' ') ? (s = s.split(' ')) : -1 !== s.indexOf(',') && (s = s.split(','))),
            'string' != typeof s)
          ) {
            if ('number' == typeof s.length)
              for (var F = 0, X = s.length; X > F; F++) (k = i(o, s[F], l, t(d), v)), k && (E[s[F]] = k);
            else
              for (var _ in s)
                (k = 'function' == typeof s[_] ? i(o, _, s[_], t(d), v) : i(o, _, s[_].listener, t(s[_]), v)),
                  k && (E[_] = k);
            return n(E);
          }
          if ((0 === s.indexOf('on') && (s = s.substr(2)), 'object' != typeof o))
            return r('Target is not defined!', arguments);
          if ('function' != typeof l) return r('Listener is not a function!', arguments);
          var A = d.useCapture || !1,
            Y = h(o) + '.' + h(l) + '.' + (A ? 1 : 0);
          if (e.Gesture && e.Gesture._gestureHandlers[s]) {
            if (((Y = s + Y), 'remove' === v)) {
              if (!c[Y]) return;
              c[Y].remove(), delete c[Y];
            } else if ('add' === v) {
              if (c[Y]) return c[Y].add(), c[Y];
              if (d.useCall && !e.modifyEventListener) {
                var L = l;
                l = function(e, t) {
                  for (var i in t) e[i] = t[i];
                  return L.call(o, e);
                };
              }
              (d.gesture = s), (d.target = o), (d.listener = l), (d.fromOverwrite = g), (c[Y] = e.proxy[s](d));
            }
            return c[Y];
          }
          for (var R, B = a(s), j = 0; j < B.length; j++)
            if (((s = B[j]), (R = s + '.' + Y), 'remove' === v)) {
              if (!c[R]) continue;
              o[f](s, l, A), delete c[R];
            } else if ('add' === v) {
              if (c[R]) return c[R];
              o[u](s, l, A),
                (c[R] = {
                  id: R,
                  type: s,
                  target: o,
                  listener: l,
                  remove: function() {
                    for (var t = 0; t < B.length; t++) e.remove(o, B[t], l, d);
                  }
                });
            }
          return c[R];
        }
      },
      n = function(e) {
        return {
          remove: function() {
            for (var t in e) e[t].remove();
          },
          add: function() {
            for (var t in e) e[t].add();
          }
        };
      },
      r = function(e, t) {
        'undefined' != typeof console && 'undefined' != typeof console.error && console.error(e, t);
      },
      o = {
        msPointer: ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'],
        touch: ['touchstart', 'touchmove', 'touchend'],
        mouse: ['mousedown', 'mousemove', 'mouseup']
      },
      s = {
        MSPointerDown: 0,
        MSPointerMove: 1,
        MSPointerUp: 2,
        touchstart: 0,
        touchmove: 1,
        touchend: 2,
        mousedown: 0,
        mousemove: 1,
        mouseup: 2
      },
      a =
        ((function() {
          (e.supports = {}),
            window.navigator.msPointerEnabled && (e.supports.msPointer = !0),
            e.getEventSupport('touchstart') && (e.supports.touch = !0),
            e.getEventSupport('mousedown') && (e.supports.mouse = !0);
        })(),
        (function() {
          return function(t) {
            var i = document.addEventListener ? '' : 'on',
              n = s[t];
            if (isFinite(n)) {
              var r = [];
              for (var a in e.supports) r.push(i + o[a][n]);
              return r;
            }
            return [i + t];
          };
        })()),
      c = {},
      l = 0,
      h = function(e) {
        return e === window
          ? '#window'
          : e === document
          ? '#document'
          : (e.uniqueID || (e.uniqueID = 'e' + l++), e.uniqueID);
      },
      u = document.addEventListener ? 'addEventListener' : 'attachEvent',
      f = document.removeEventListener ? 'removeEventListener' : 'detachEvent';
    e.createPointerEvent = function(t, i, n) {
      var r = i.gesture,
        o = i.target,
        s = t.changedTouches || e.proxy.getCoords(t);
      if (s.length) {
        var a = s[0];
        (i.pointers = n ? [] : s), (i.pageX = a.pageX), (i.pageY = a.pageY), (i.x = i.pageX), (i.y = i.pageY);
      }
      var c = document.createEvent('Event');
      c.initEvent(r, !0, !0), (c.originalEvent = t);
      for (var l in i) 'target' !== l && (c[l] = i[l]);
      var h = c.type;
      e.Gesture && e.Gesture._gestureHandlers[h] && i.oldListener.call(o, c, i, !1);
    };
    var d = !1,
      v = function() {
        if (window.HTMLElement) {
          var t = function(t) {
            var n = function(n) {
              var r = n + 'EventListener',
                o = t[r];
              t[r] = function(t, r, s) {
                if (e.Gesture && e.Gesture._gestureHandlers[t]) {
                  var c = s;
                  'object' == typeof s ? (c.useCall = !0) : (c = { useCall: !0, useCapture: s }),
                    i(this, t, r, c, n, !0);
                } else for (var l = a(t), h = 0; h < l.length; h++) o.call(this, l[h], r, s);
              };
            };
            n('add'), n('remove');
          };
          navigator.userAgent.match(/Firefox/)
            ? (t(HTMLDivElement.prototype), t(HTMLCanvasElement.prototype))
            : t(HTMLElement.prototype),
            t(document),
            t(window);
        }
      },
      g = !1,
      p = function() {
        var e = NodeList.prototype;
        (e.removeEventListener = function(e, t, i) {
          for (var n = 0, r = this.length; r > n; n++) this[n].removeEventListener(e, t, i);
        }),
          (e.addEventListener = function(e, t, i) {
            for (var n = 0, r = this.length; r > n; n++) this[n].addEventListener(e, t, i);
          });
      };
    return e;
  })(eventjs),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    e.pointerSetup = function(e, t) {
      (e.target = e.target || window),
        (e.doc = e.target.ownerDocument || e.target),
        (e.minFingers = e.minFingers || e.fingers || 1),
        (e.maxFingers = e.maxFingers || e.fingers || 1 / 0),
        (e.position = e.position || 'relative'),
        delete e.fingers,
        (t = t || {}),
        (t.enabled = !0),
        (t.gesture = e.gesture),
        (t.target = e.target),
        (t.env = e.env),
        eventjs.modifyEventListener &&
          e.fromOverwrite &&
          ((e.oldListener = e.listener), (e.listener = eventjs.createPointerEvent));
      var i = 0,
        n = 0 === t.gesture.indexOf('pointer') && eventjs.modifyEventListener ? 'pointer' : 'mouse';
      return (
        e.oldListener && (t.oldListener = e.oldListener),
        (t.listener = e.listener),
        (t.proxy = function(i) {
          (t.defaultListener = e.listener), (e.listener = i), i(e.event, t);
        }),
        (t.add = function() {
          t.enabled !== !0 &&
            (e.onPointerDown && eventjs.add(e.target, n + 'down', e.onPointerDown),
            e.onPointerMove && eventjs.add(e.doc, n + 'move', e.onPointerMove),
            e.onPointerUp && eventjs.add(e.doc, n + 'up', e.onPointerUp),
            (t.enabled = !0));
        }),
        (t.remove = function() {
          t.enabled !== !1 &&
            (e.onPointerDown && eventjs.remove(e.target, n + 'down', e.onPointerDown),
            e.onPointerMove && eventjs.remove(e.doc, n + 'move', e.onPointerMove),
            e.onPointerUp && eventjs.remove(e.doc, n + 'up', e.onPointerUp),
            t.reset(),
            (t.enabled = !1));
        }),
        (t.pause = function(t) {
          !e.onPointerMove || (t && !t.move) || eventjs.remove(e.doc, n + 'move', e.onPointerMove),
            !e.onPointerUp || (t && !t.up) || eventjs.remove(e.doc, n + 'up', e.onPointerUp),
            (i = e.fingers),
            (e.fingers = 0);
        }),
        (t.resume = function(t) {
          !e.onPointerMove || (t && !t.move) || eventjs.add(e.doc, n + 'move', e.onPointerMove),
            !e.onPointerUp || (t && !t.up) || eventjs.add(e.doc, n + 'up', e.onPointerUp),
            (e.fingers = i);
        }),
        (t.reset = function() {
          (e.tracker = {}), (e.fingers = 0);
        }),
        t
      );
    };
    var t = eventjs.supports;
    (eventjs.isMouse = !!t.mouse),
      (eventjs.isMSPointer = !!t.touch),
      (eventjs.isTouch = !!t.msPointer),
      (e.pointerStart = function(t, i, n) {
        var r = (t.type || 'mousedown').toUpperCase();
        0 === r.indexOf('MOUSE')
          ? ((eventjs.isMouse = !0), (eventjs.isTouch = !1), (eventjs.isMSPointer = !1))
          : 0 === r.indexOf('TOUCH')
          ? ((eventjs.isMouse = !1), (eventjs.isTouch = !0), (eventjs.isMSPointer = !1))
          : 0 === r.indexOf('MSPOINTER') &&
            ((eventjs.isMouse = !1), (eventjs.isTouch = !1), (eventjs.isMSPointer = !0));
        var o = function(e, t) {
          var i = n.bbox,
            r = (a[t] = {});
          switch (n.position) {
            case 'absolute':
              (r.offsetX = 0), (r.offsetY = 0);
              break;
            case 'differenceFromLast':
              (r.offsetX = e.pageX), (r.offsetY = e.pageY);
              break;
            case 'difference':
              (r.offsetX = e.pageX), (r.offsetY = e.pageY);
              break;
            case 'move':
              (r.offsetX = e.pageX - i.x1), (r.offsetY = e.pageY - i.y1);
              break;
            default:
              (r.offsetX = i.x1 - i.scrollLeft), (r.offsetY = i.y1 - i.scrollTop);
          }
          var o = e.pageX - r.offsetX,
            s = e.pageY - r.offsetY;
          (r.rotation = 0),
            (r.scale = 1),
            (r.startTime = r.moveTime = new Date().getTime()),
            (r.move = { x: o, y: s }),
            (r.start = { x: o, y: s }),
            n.fingers++;
        };
        (n.event = t), i.defaultListener && ((n.listener = i.defaultListener), delete i.defaultListener);
        for (
          var s = !n.fingers, a = n.tracker, c = t.changedTouches || e.getCoords(t), l = c.length, h = 0;
          l > h;
          h++
        ) {
          var u = c[h],
            f = u.identifier || 1 / 0;
          if (n.fingers) {
            if (n.fingers >= n.maxFingers) {
              var d = [];
              for (var f in n.tracker) d.push(f);
              return (i.identifier = d.join(',')), s;
            }
            var v = 0;
            for (var g in a) {
              if (a[g].up) {
                delete a[g], o(u, f), (n.cancel = !0);
                break;
              }
              v++;
            }
            if (a[f]) continue;
            o(u, f);
          } else
            (a = n.tracker = {}),
              (i.bbox = n.bbox = e.getBoundingBox(n.target)),
              (n.fingers = 0),
              (n.cancel = !1),
              o(u, f);
        }
        var d = [];
        for (var f in n.tracker) d.push(f);
        return (i.identifier = d.join(',')), s;
      }),
      (e.pointerEnd = function(e, t, i, n) {
        for (var r = e.touches || [], o = r.length, s = {}, a = 0; o > a; a++) {
          var c = r[a],
            l = c.identifier;
          s[l || 1 / 0] = !0;
        }
        for (var l in i.tracker) {
          var h = i.tracker[l];
          s[l] ||
            h.up ||
            (n &&
              n(
                {
                  pageX: h.pageX,
                  pageY: h.pageY,
                  changedTouches: [{ pageX: h.pageX, pageY: h.pageY, identifier: 'Infinity' === l ? 1 / 0 : l }]
                },
                'up'
              ),
            (h.up = !0),
            i.fingers--);
        }
        if (0 !== i.fingers) return !1;
        var u = [];
        i.gestureFingers = 0;
        for (var l in i.tracker) i.gestureFingers++, u.push(l);
        return (t.identifier = u.join(',')), !0;
      }),
      (e.getCoords = function(t) {
        return (
          (e.getCoords =
            'undefined' != typeof t.pageX
              ? function(e) {
                  return Array({
                    type: 'mouse',
                    x: e.pageX,
                    y: e.pageY,
                    pageX: e.pageX,
                    pageY: e.pageY,
                    identifier: e.pointerId || 1 / 0
                  });
                }
              : function(e) {
                  var t = document.documentElement;
                  return (
                    (e = e || window.event),
                    Array({
                      type: 'mouse',
                      x: e.clientX + t.scrollLeft,
                      y: e.clientY + t.scrollTop,
                      pageX: e.clientX + t.scrollLeft,
                      pageY: e.clientY + t.scrollTop,
                      identifier: 1 / 0
                    })
                  );
                }),
          e.getCoords(t)
        );
      }),
      (e.getCoord = function(t) {
        if ('ontouchstart' in window) {
          var i = 0,
            n = 0;
          e.getCoord = function(e) {
            var t = e.changedTouches;
            return t && t.length ? { x: (i = t[0].pageX), y: (n = t[0].pageY) } : { x: i, y: n };
          };
        } else
          e.getCoord =
            'undefined' != typeof t.pageX && 'undefined' != typeof t.pageY
              ? function(e) {
                  return { x: e.pageX, y: e.pageY };
                }
              : function(e) {
                  var t = document.documentElement;
                  return (e = e || window.event), { x: e.clientX + t.scrollLeft, y: e.clientY + t.scrollTop };
                };
        return e.getCoord(t);
      });
    var i = function(e, t) {
      var i = parseFloat(e.getPropertyValue(t), 10);
      return isFinite(i) ? i : 0;
    };
    return (
      (e.getBoundingBox = function(e) {
        (e === window || e === document) && (e = document.body);
        var t = {},
          n = e.getBoundingClientRect();
        (t.width = n.width),
          (t.height = n.height),
          (t.x1 = n.left),
          (t.y1 = n.top),
          (t.scaleX = n.width / e.offsetWidth || 1),
          (t.scaleY = n.height / e.offsetHeight || 1),
          (t.scrollLeft = 0),
          (t.scrollTop = 0);
        var r = window.getComputedStyle(e),
          o = 'border-box' === r.getPropertyValue('box-sizing');
        if (o === !1) {
          var s = i(r, 'border-left-width'),
            a = i(r, 'border-right-width'),
            c = i(r, 'border-bottom-width'),
            l = i(r, 'border-top-width');
          (t.border = [s, a, l, c]), (t.x1 += s), (t.y1 += l), (t.width -= a + s), (t.height -= c + l);
        }
        (t.x2 = t.x1 + t.width), (t.y2 = t.y1 + t.height);
        for (
          var h = r.getPropertyValue('position'), u = 'fixed' === h ? e : e.parentNode;
          null !== u && u !== document.body && void 0 !== u.scrollTop;

        ) {
          var r = window.getComputedStyle(u),
            h = r.getPropertyValue('position');
          if ('absolute' === h);
          else {
            if ('fixed' === h) {
              (t.scrollTop -= u.parentNode.scrollTop), (t.scrollLeft -= u.parentNode.scrollLeft);
              break;
            }
            (t.scrollLeft += u.scrollLeft), (t.scrollTop += u.scrollTop);
          }
          u = u.parentNode;
        }
        return (
          (t.scrollBodyLeft =
            void 0 !== window.pageXOffset
              ? window.pageXOffset
              : (document.documentElement || document.body.parentNode || document.body).scrollLeft),
          (t.scrollBodyTop =
            void 0 !== window.pageYOffset
              ? window.pageYOffset
              : (document.documentElement || document.body.parentNode || document.body).scrollTop),
          (t.scrollLeft -= t.scrollBodyLeft),
          (t.scrollTop -= t.scrollBodyTop),
          t
        );
      }),
      (function() {
        var t,
          i = navigator.userAgent.toLowerCase(),
          n = -1 !== i.indexOf('macintosh');
        (t =
          n && -1 !== i.indexOf('khtml')
            ? { 91: !0, 93: !0 }
            : n && -1 !== i.indexOf('firefox')
            ? { 224: !0 }
            : { 17: !0 }),
          (e.metaTrackerReset = function() {
            (eventjs.fnKey = e.fnKey = !1),
              (eventjs.metaKey = e.metaKey = !1),
              (eventjs.escKey = e.escKey = !1),
              (eventjs.ctrlKey = e.ctrlKey = !1),
              (eventjs.shiftKey = e.shiftKey = !1),
              (eventjs.altKey = e.altKey = !1);
          })(),
          (e.metaTracker = function(i) {
            var n = 'keydown' === i.type;
            27 === i.keyCode && (eventjs.escKey = e.escKey = n),
              t[i.keyCode] && (eventjs.metaKey = e.metaKey = n),
              (eventjs.ctrlKey = e.ctrlKey = i.ctrlKey),
              (eventjs.shiftKey = e.shiftKey = i.shiftKey),
              (eventjs.altKey = e.altKey = i.altKey);
          });
      })(),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ((eventjs.MutationObserver = (function() {
    var e = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver,
      t =
        !e &&
        (function() {
          var e = document.createElement('p'),
            t = !1,
            i = function() {
              t = !0;
            };
          if (e.addEventListener) e.addEventListener('DOMAttrModified', i, !1);
          else {
            if (!e.attachEvent) return !1;
            e.attachEvent('onDOMAttrModified', i);
          }
          return e.setAttribute('id', 'target'), t;
        })();
    return function(i, n) {
      if (e) {
        var r = { subtree: !1, attributes: !0 },
          o = new e(function(e) {
            e.forEach(function(e) {
              n.call(e.target, e.attributeName);
            });
          });
        o.observe(i, r);
      } else
        t
          ? eventjs.add(i, 'DOMAttrModified', function(e) {
              n.call(i, e.attrName);
            })
          : 'onpropertychange' in document.body &&
            eventjs.add(i, 'propertychange', function() {
              n.call(i, window.event.propertyName);
            });
    };
  })()),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    return (
      (e.click = function(t) {
        (t.gesture = t.gesture || 'click'),
          (t.maxFingers = t.maxFingers || t.fingers || 1),
          (t.onPointerDown = function(n) {
            e.pointerStart(n, i, t) && eventjs.add(t.target, 'mouseup', t.onPointerUp);
          }),
          (t.onPointerUp = function(n) {
            if (e.pointerEnd(n, i, t)) {
              eventjs.remove(t.target, 'mouseup', t.onPointerUp);
              var r = n.changedTouches || e.getCoords(n),
                o = r[0],
                s = t.bbox,
                a = e.getBoundingBox(t.target),
                c = o.pageY - a.scrollBodyTop,
                l = o.pageX - a.scrollBodyLeft;
              if (l > s.x1 && c > s.y1 && l < s.x2 && c < s.y2 && s.scrollTop === a.scrollTop) {
                for (var h in t.tracker) break;
                var u = t.tracker[h];
                (i.x = u.start.x), (i.y = u.start.y), t.listener(n, i);
              }
            }
          });
        var i = e.pointerSetup(t);
        return (i.state = 'click'), eventjs.add(t.target, 'mousedown', t.onPointerDown), i;
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.click = e.click),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    return (
      (e.dbltap = e.dblclick = function(t) {
        (t.gesture = t.gesture || 'dbltap'), (t.maxFingers = t.maxFingers || t.fingers || 1);
        var i,
          n,
          r,
          o,
          s,
          a = 700;
        (t.onPointerDown = function(l) {
          var h = l.changedTouches || e.getCoords(l);
          i && !n
            ? ((s = h[0]), (n = new Date().getTime() - i))
            : ((o = h[0]),
              (i = new Date().getTime()),
              (n = 0),
              clearTimeout(r),
              (r = setTimeout(function() {
                i = 0;
              }, a))),
            e.pointerStart(l, c, t) &&
              (eventjs.add(t.target, 'mousemove', t.onPointerMove).listener(l),
              eventjs.add(t.target, 'mouseup', t.onPointerUp));
        }),
          (t.onPointerMove = function(a) {
            if (i && !n) {
              var c = a.changedTouches || e.getCoords(a);
              s = c[0];
            }
            var l = t.bbox,
              h = s.pageX - l.x1,
              u = s.pageY - l.y1;
            (h > 0 &&
              h < l.width &&
              u > 0 &&
              u < l.height &&
              Math.abs(s.pageX - o.pageX) <= 25 &&
              Math.abs(s.pageY - o.pageY) <= 25) ||
              (eventjs.remove(t.target, 'mousemove', t.onPointerMove), clearTimeout(r), (i = n = 0));
          }),
          (t.onPointerUp = function(o) {
            if (
              (e.pointerEnd(o, c, t) &&
                (eventjs.remove(t.target, 'mousemove', t.onPointerMove),
                eventjs.remove(t.target, 'mouseup', t.onPointerUp)),
              i && n)
            ) {
              if (a >= n) {
                c.state = t.gesture;
                for (var s in t.tracker) break;
                var l = t.tracker[s];
                (c.x = l.start.x), (c.y = l.start.y), t.listener(o, c);
              }
              clearTimeout(r), (i = n = 0);
            }
          });
        var c = e.pointerSetup(t);
        return (c.state = 'dblclick'), eventjs.add(t.target, 'mousedown', t.onPointerDown), c;
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.dbltap = e.dbltap),
      (eventjs.Gesture._gestureHandlers.dblclick = e.dblclick),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    return (
      (e.dragElement = function(t, i) {
        e.drag({
          event: i,
          target: t,
          position: 'move',
          listener: function(e, i) {
            (t.style.left = i.x + 'px'), (t.style.top = i.y + 'px'), eventjs.prevent(e);
          }
        });
      }),
      (e.drag = function(t) {
        (t.gesture = 'drag'),
          (t.onPointerDown = function(n) {
            e.pointerStart(n, i, t) &&
              (t.monitor ||
                (eventjs.add(t.doc, 'mousemove', t.onPointerMove), eventjs.add(t.doc, 'mouseup', t.onPointerUp))),
              t.onPointerMove(n, 'down');
          }),
          (t.onPointerMove = function(n, r) {
            if (!t.tracker) return t.onPointerDown(n);
            for (var o = (t.bbox, n.changedTouches || e.getCoords(n)), s = o.length, a = 0; s > a; a++) {
              var c = o[a],
                l = c.identifier || 1 / 0,
                h = t.tracker[l];
              h &&
                ((h.pageX = c.pageX),
                (h.pageY = c.pageY),
                (i.state = r || 'move'),
                (i.identifier = l),
                (i.start = h.start),
                (i.fingers = t.fingers),
                'differenceFromLast' === t.position
                  ? ((i.x = h.pageX - h.offsetX),
                    (i.y = h.pageY - h.offsetY),
                    (h.offsetX = h.pageX),
                    (h.offsetY = h.pageY))
                  : ((i.x = h.pageX - h.offsetX), (i.y = h.pageY - h.offsetY)),
                t.listener(n, i));
            }
          }),
          (t.onPointerUp = function(n) {
            e.pointerEnd(n, i, t, t.onPointerMove) &&
              (t.monitor ||
                (eventjs.remove(t.doc, 'mousemove', t.onPointerMove), eventjs.remove(t.doc, 'mouseup', t.onPointerUp)));
          });
        var i = e.pointerSetup(t);
        return (
          t.event
            ? t.onPointerDown(t.event)
            : (eventjs.add(t.target, 'mousedown', t.onPointerDown),
              t.monitor &&
                (eventjs.add(t.doc, 'mousemove', t.onPointerMove), eventjs.add(t.doc, 'mouseup', t.onPointerUp))),
          i
        );
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.drag = e.drag),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    var t = Math.PI / 180,
      i = function(e, t) {
        var i = 0,
          n = 0,
          r = 0;
        for (var o in t) {
          var s = t[o];
          s.up || ((i += s.move.x), (n += s.move.y), r++);
        }
        return (e.x = i /= r), (e.y = n /= r), e;
      };
    return (
      (e.gesture = function(n) {
        (n.gesture = n.gesture || 'gesture'),
          (n.minFingers = n.minFingers || n.fingers || 2),
          (n.onPointerDown = function(t) {
            var o = n.fingers;
            if (
              (e.pointerStart(t, r, n) &&
                (eventjs.add(n.doc, 'mousemove', n.onPointerMove), eventjs.add(n.doc, 'mouseup', n.onPointerUp)),
              n.fingers === n.minFingers && o !== n.fingers)
            ) {
              (r.fingers = n.minFingers), (r.scale = 1), (r.rotation = 0), (r.state = 'start');
              var s = '';
              for (var a in n.tracker) s += a;
              (r.identifier = parseInt(s)), i(r, n.tracker), n.listener(t, r);
            }
          }),
          (n.onPointerMove = function(o) {
            for (
              var s = n.bbox, a = n.tracker, c = o.changedTouches || e.getCoords(o), l = c.length, h = 0;
              l > h;
              h++
            ) {
              var u = c[h],
                f = u.identifier || 1 / 0,
                d = a[f];
              d && ((d.move.x = u.pageX - s.x1), (d.move.y = u.pageY - s.y1));
            }
            if (!(n.fingers < n.minFingers)) {
              var c = [],
                v = 0,
                g = 0;
              i(r, a);
              for (var f in a) {
                var u = a[f];
                if (!u.up) {
                  var p = u.start;
                  if (!p.distance) {
                    var m = p.x - r.x,
                      b = p.y - r.y;
                    (p.distance = Math.sqrt(m * m + b * b)), (p.angle = Math.atan2(m, b) / t);
                  }
                  var m = u.move.x - r.x,
                    b = u.move.y - r.y,
                    y = Math.sqrt(m * m + b * b);
                  v += y / p.distance;
                  var _ = Math.atan2(m, b) / t,
                    w = ((p.angle - _ + 360) % 360) - 180;
                  (u.DEG2 = u.DEG1),
                    (u.DEG1 = w > 0 ? w : -w),
                    'undefined' != typeof u.DEG2 &&
                      (w > 0 ? (u.rotation += u.DEG1 - u.DEG2) : (u.rotation -= u.DEG1 - u.DEG2), (g += u.rotation)),
                    c.push(u.move);
                }
              }
              (r.touches = c),
                (r.fingers = n.fingers),
                (r.scale = v / n.fingers),
                (r.rotation = g / n.fingers),
                (r.state = 'change'),
                n.listener(o, r);
            }
          }),
          (n.onPointerUp = function(t) {
            var i = n.fingers;
            e.pointerEnd(t, r, n) &&
              (eventjs.remove(n.doc, 'mousemove', n.onPointerMove), eventjs.remove(n.doc, 'mouseup', n.onPointerUp)),
              i === n.minFingers &&
                n.fingers < n.minFingers &&
                ((r.fingers = n.fingers), (r.state = 'end'), n.listener(t, r));
          });
        var r = e.pointerSetup(n);
        return eventjs.add(n.target, 'mousedown', n.onPointerDown), r;
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.gesture = e.gesture),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    return (
      (e.pointerdown = e.pointermove = e.pointerup = function(t) {
        if (((t.gesture = t.gesture || 'pointer'), !t.target.isPointerEmitter)) {
          var i = !0;
          (t.onPointerDown = function(e) {
            (i = !1), (n.gesture = 'pointerdown'), t.listener(e, n);
          }),
            (t.onPointerMove = function(e) {
              (n.gesture = 'pointermove'), t.listener(e, n, i);
            }),
            (t.onPointerUp = function(e) {
              (i = !0), (n.gesture = 'pointerup'), t.listener(e, n, !0);
            });
          var n = e.pointerSetup(t);
          return (
            eventjs.add(t.target, 'mousedown', t.onPointerDown),
            eventjs.add(t.target, 'mousemove', t.onPointerMove),
            eventjs.add(t.doc, 'mouseup', t.onPointerUp),
            (t.target.isPointerEmitter = !0),
            n
          );
        }
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.pointerdown = e.pointerdown),
      (eventjs.Gesture._gestureHandlers.pointermove = e.pointermove),
      (eventjs.Gesture._gestureHandlers.pointerup = e.pointerup),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    return (
      (e.shake = function(e) {
        var t = {
            gesture: 'devicemotion',
            acceleration: {},
            accelerationIncludingGravity: {},
            target: e.target,
            listener: e.listener,
            remove: function() {
              window.removeEventListener('devicemotion', l, !1);
            }
          },
          i = 4,
          n = 1e3,
          r = 200,
          o = 3,
          s = new Date().getTime(),
          a = { x: 0, y: 0, z: 0 },
          c = { x: { count: 0, value: 0 }, y: { count: 0, value: 0 }, z: { count: 0, value: 0 } },
          l = function(l) {
            var h = 0.8,
              u = l.accelerationIncludingGravity;
            if (
              ((a.x = h * a.x + (1 - h) * u.x),
              (a.y = h * a.y + (1 - h) * u.y),
              (a.z = h * a.z + (1 - h) * u.z),
              (t.accelerationIncludingGravity = a),
              (t.acceleration.x = u.x - a.x),
              (t.acceleration.y = u.y - a.y),
              (t.acceleration.z = u.z - a.z),
              'devicemotion' === e.gesture)
            )
              return void e.listener(l, t);
            for (var f = 'xyz', d = new Date().getTime(), v = 0, g = f.length; g > v; v++) {
              var p = f[v],
                m = t.acceleration[p],
                b = c[p],
                y = Math.abs(m);
              if (!(n > d - s) && y > i) {
                var _ = (d * m) / y,
                  w = Math.abs(_ + b.value);
                b.value && r > w
                  ? ((b.value = _),
                    b.count++,
                    b.count === o && (e.listener(l, t), (s = d), (b.value = 0), (b.count = 0)))
                  : ((b.value = _), (b.count = 1));
              }
            }
          };
        return window.addEventListener ? (window.addEventListener('devicemotion', l, !1), t) : void 0;
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.shake = e.shake),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    var t = Math.PI / 180;
    return (
      (e.swipe = function(i) {
        (i.snap = i.snap || 90),
          (i.threshold = i.threshold || 1),
          (i.gesture = i.gesture || 'swipe'),
          (i.onPointerDown = function(t) {
            e.pointerStart(t, n, i) &&
              (eventjs.add(i.doc, 'mousemove', i.onPointerMove).listener(t),
              eventjs.add(i.doc, 'mouseup', i.onPointerUp));
          }),
          (i.onPointerMove = function(t) {
            for (var n = t.changedTouches || e.getCoords(t), r = n.length, o = 0; r > o; o++) {
              var s = n[o],
                a = s.identifier || 1 / 0,
                c = i.tracker[a];
              c && ((c.move.x = s.pageX), (c.move.y = s.pageY), (c.moveTime = new Date().getTime()));
            }
          }),
          (i.onPointerUp = function(r) {
            if (e.pointerEnd(r, n, i)) {
              eventjs.remove(i.doc, 'mousemove', i.onPointerMove), eventjs.remove(i.doc, 'mouseup', i.onPointerUp);
              var o,
                s,
                a,
                c,
                l = { x: 0, y: 0 },
                h = 0,
                u = 0,
                f = 0;
              for (var d in i.tracker) {
                var v = i.tracker[d],
                  g = v.move.x - v.start.x,
                  p = v.move.y - v.start.y;
                (h += v.move.x), (u += v.move.y), (l.x += v.start.x), (l.y += v.start.y), f++;
                var m = Math.sqrt(g * g + p * p),
                  b = v.moveTime - v.startTime,
                  c = Math.atan2(g, p) / t + 180,
                  s = b ? m / b : 0;
                if ('undefined' == typeof a) (a = c), (o = s);
                else {
                  if (!(Math.abs(c - a) <= 20)) return;
                  (a = (a + c) / 2), (o = (o + s) / 2);
                }
              }
              var y = i.gestureFingers;
              i.minFingers <= y &&
                i.maxFingers >= y &&
                o > i.threshold &&
                ((l.x /= f),
                (l.y /= f),
                (n.start = l),
                (n.x = h / f),
                (n.y = u / f),
                (n.angle = -((((a / i.snap + 0.5) >> 0) * i.snap || 360) - 360)),
                (n.velocity = o),
                (n.fingers = y),
                (n.state = 'swipe'),
                i.listener(r, n));
            }
          });
        var n = e.pointerSetup(i);
        return eventjs.add(i.target, 'mousedown', i.onPointerDown), n;
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.swipe = e.swipe),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    return (
      (e.longpress = function(t) {
        return (t.gesture = 'longpress'), e.tap(t);
      }),
      (e.tap = function(t) {
        (t.delay = t.delay || 500),
          (t.timeout = t.timeout || 250),
          (t.driftDeviance = t.driftDeviance || 10),
          (t.gesture = t.gesture || 'tap');
        var i, n;
        (t.onPointerDown = function(o) {
          if (e.pointerStart(o, r, t)) {
            if (
              ((i = new Date().getTime()),
              eventjs.add(t.doc, 'mousemove', t.onPointerMove).listener(o),
              eventjs.add(t.doc, 'mouseup', t.onPointerUp),
              'longpress' !== t.gesture)
            )
              return;
            n = setTimeout(function() {
              if (!(o.cancelBubble && ++o.cancelBubbleCount > 1)) {
                var e = 0;
                for (var i in t.tracker) {
                  var n = t.tracker[i];
                  if (n.end === !0) return;
                  if (t.cancel) return;
                  e++;
                }
                t.minFingers <= e &&
                  t.maxFingers >= e &&
                  ((r.state = 'start'), (r.fingers = e), (r.x = n.start.x), (r.y = n.start.y), t.listener(o, r));
              }
            }, t.delay);
          }
        }),
          (t.onPointerMove = function(i) {
            for (var n = t.bbox, r = i.changedTouches || e.getCoords(i), o = r.length, s = 0; o > s; s++) {
              var a = r[s],
                c = a.identifier || 1 / 0,
                l = t.tracker[c];
              if (l) {
                var h = a.pageX - n.x1,
                  u = a.pageY - n.y1,
                  f = h - l.start.x,
                  d = u - l.start.y,
                  v = Math.sqrt(f * f + d * d);
                if (!(h > 0 && h < n.width && u > 0 && u < n.height && v <= t.driftDeviance))
                  return eventjs.remove(t.doc, 'mousemove', t.onPointerMove), void (t.cancel = !0);
              }
            }
          }),
          (t.onPointerUp = function(o) {
            if (e.pointerEnd(o, r, t)) {
              if (
                (clearTimeout(n),
                eventjs.remove(t.doc, 'mousemove', t.onPointerMove),
                eventjs.remove(t.doc, 'mouseup', t.onPointerUp),
                o.cancelBubble && ++o.cancelBubbleCount > 1)
              )
                return;
              if ('longpress' === t.gesture) return void ('start' === r.state && ((r.state = 'end'), t.listener(o, r)));
              if (t.cancel) return;
              if (new Date().getTime() - i > t.timeout) return;
              var s = t.gestureFingers;
              t.minFingers <= s &&
                t.maxFingers >= s &&
                ((r.state = 'tap'), (r.fingers = t.gestureFingers), t.listener(o, r));
            }
          });
        var r = e.pointerSetup(t);
        return eventjs.add(t.target, 'mousedown', t.onPointerDown), r;
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.tap = e.tap),
      (eventjs.Gesture._gestureHandlers.longpress = e.longpress),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof eventjs)
)
  var eventjs = {};
if (
  ('undefined' == typeof eventjs.proxy && (eventjs.proxy = {}),
  (eventjs.proxy = (function(e) {
    'use strict';
    return (
      (e.wheelPreventElasticBounce = function(e) {
        e &&
          ('string' == typeof e && (e = document.querySelector(e)),
          eventjs.add(e, 'wheel', function(e, t) {
            t.preventElasticBounce(), eventjs.stop(e);
          }));
      }),
      (e.wheel = function(e) {
        var t,
          i = e.timeout || 150,
          n = 0,
          r = {
            gesture: 'wheel',
            state: 'start',
            wheelDelta: 0,
            target: e.target,
            listener: e.listener,
            preventElasticBounce: function(e) {
              var t = this.target,
                i = t.scrollTop,
                n = i + t.offsetHeight,
                r = t.scrollHeight;
              n === r && this.wheelDelta <= 0
                ? eventjs.cancel(e)
                : 0 === i && this.wheelDelta >= 0 && eventjs.cancel(e),
                eventjs.stop(e);
            },
            add: function() {
              e.target[s](c, o, !1);
            },
            remove: function() {
              e.target[a](c, o, !1);
            }
          },
          o = function(o) {
            (o = o || window.event),
              (r.state = n++ ? 'change' : 'start'),
              (r.wheelDelta = o.detail ? -20 * o.detail : o.wheelDelta),
              e.listener(o, r),
              clearTimeout(t),
              (t = setTimeout(function() {
                (n = 0), (r.state = 'end'), (r.wheelDelta = 0), e.listener(o, r);
              }, i));
          },
          s = document.addEventListener ? 'addEventListener' : 'attachEvent',
          a = document.removeEventListener ? 'removeEventListener' : 'detachEvent',
          c = eventjs.getEventSupport('mousewheel') ? 'mousewheel' : 'DOMMouseScroll';
        return e.target[s](c, o, !1), r;
      }),
      (eventjs.Gesture = eventjs.Gesture || {}),
      (eventjs.Gesture._gestureHandlers = eventjs.Gesture._gestureHandlers || {}),
      (eventjs.Gesture._gestureHandlers.wheel = e.wheel),
      e
    );
  })(eventjs.proxy)),
  'undefined' == typeof Event)
)
  var Event = {};
'undefined' == typeof Event.proxy && (Event.proxy = {}),
  (Event.proxy = (function(e) {
    'use strict';
    return (
      (e.orientation = function(e) {
        var t = {
            gesture: 'orientationchange',
            previous: null,
            current: window.orientation,
            target: e.target,
            listener: e.listener,
            remove: function() {
              window.removeEventListener('orientationchange', i, !1);
            }
          },
          i = function(i) {
            return (
              (t.previous = t.current),
              (t.current = window.orientation),
              null !== t.previous && t.previous != t.current ? void e.listener(i, t) : void 0
            );
          };
        return window.DeviceOrientationEvent && window.addEventListener('orientationchange', i, !1), t;
      }),
      (Event.Gesture = Event.Gesture || {}),
      (Event.Gesture._gestureHandlers = Event.Gesture._gestureHandlers || {}),
      (Event.Gesture._gestureHandlers.orientation = e.orientation),
      e
    );
  })(Event.proxy));
!(function() {
  function t(t, e) {
    if (this.__eventListeners[t]) {
      var i = this.__eventListeners[t];
      e ? (i[i.indexOf(e)] = !1) : fabric.util.array.fill(i, !1);
    }
  }
  function e(t, e) {
    if ((this.__eventListeners || (this.__eventListeners = {}), 1 === arguments.length))
      for (var i in t) this.on(i, t[i]);
    else this.__eventListeners[t] || (this.__eventListeners[t] = []), this.__eventListeners[t].push(e);
    return this;
  }
  function i(e, i) {
    if (!this.__eventListeners) return this;
    if (0 === arguments.length) for (e in this.__eventListeners) t.call(this, e);
    else if (1 === arguments.length && 'object' == typeof arguments[0]) for (var r in e) t.call(this, r, e[r]);
    else t.call(this, e, i);
    return this;
  }
  function r(t, e) {
    if (!this.__eventListeners) return this;
    var i = this.__eventListeners[t];
    if (!i) return this;
    for (var r = 0, n = i.length; n > r; r++) i[r] && i[r].call(this, e || {});
    return (
      (this.__eventListeners[t] = i.filter(function(t) {
        return t !== !1;
      })),
      this
    );
  }
  fabric.Observable = { observe: e, stopObserving: i, fire: r, on: e, off: i, trigger: r };
})();
fabric.Collection = {
  _objects: [],
  add: function() {
    if ((this._objects.push.apply(this._objects, arguments), this._onObjectAdded))
      for (var e = 0, t = arguments.length; t > e; e++) this._onObjectAdded(arguments[e]);
    return this.renderOnAddRemove && this.requestRenderAll(), this;
  },
  insertAt: function(e, t, i) {
    var n = this._objects;
    return (
      i ? (n[t] = e) : n.splice(t, 0, e),
      this._onObjectAdded && this._onObjectAdded(e),
      this.renderOnAddRemove && this.requestRenderAll(),
      this
    );
  },
  remove: function() {
    for (var e, t = this._objects, i = !1, n = 0, r = arguments.length; r > n; n++)
      (e = t.indexOf(arguments[n])),
        -1 !== e && ((i = !0), t.splice(e, 1), this._onObjectRemoved && this._onObjectRemoved(arguments[n]));
    return this.renderOnAddRemove && i && this.requestRenderAll(), this;
  },
  forEachObject: function(e, t) {
    for (var i = this.getObjects(), n = 0, r = i.length; r > n; n++) e.call(t, i[n], n, i);
    return this;
  },
  getObjects: function(e) {
    return 'undefined' == typeof e
      ? this._objects.concat()
      : this._objects.filter(function(t) {
          return t.type === e;
        });
  },
  item: function(e) {
    return this._objects[e];
  },
  isEmpty: function() {
    return 0 === this._objects.length;
  },
  size: function() {
    return this._objects.length;
  },
  contains: function(e) {
    return this._objects.indexOf(e) > -1;
  },
  complexity: function() {
    return this._objects.reduce(function(e, t) {
      return (e += t.complexity ? t.complexity() : 0);
    }, 0);
  }
};
fabric.CommonMethods = {
  _setOptions: function(e) {
    for (var t in e) this.set(t, e[t]);
  },
  _initGradient: function(e, t) {
    !e || !e.colorStops || e instanceof fabric.Gradient || this.set(t, new fabric.Gradient(e));
  },
  _initPattern: function(e, t, i) {
    !e || !e.source || e instanceof fabric.Pattern ? i && i() : this.set(t, new fabric.Pattern(e, i));
  },
  _initClipping: function(e) {
    if (e.clipTo && 'string' == typeof e.clipTo) {
      var t = fabric.util.getFunctionBody(e.clipTo);
      'undefined' != typeof t && (this.clipTo = new Function('ctx', t));
    }
  },
  _setObject: function(e) {
    for (var t in e) this._set(t, e[t]);
  },
  set: function(e, t) {
    return (
      'object' == typeof e
        ? this._setObject(e)
        : 'function' == typeof t && 'clipTo' !== e
        ? this._set(e, t(this.get(e)))
        : this._set(e, t),
      this
    );
  },
  _set: function(e, t) {
    this[e] = t;
  },
  toggle: function(e) {
    var t = this.get(e);
    return 'boolean' == typeof t && this.set(e, !t), this;
  },
  get: function(e) {
    return this[e];
  }
};
!(function(e) {
  var t = Math.sqrt,
    i = Math.atan2,
    n = Math.pow,
    r = Math.PI / 180,
    o = Math.PI / 2;
  fabric.util = {
    cos: function(e) {
      if (0 === e) return 1;
      0 > e && (e = -e);
      var t = e / o;
      switch (t) {
        case 1:
        case 3:
          return 0;
        case 2:
          return -1;
      }
      return Math.cos(e);
    },
    sin: function(e) {
      if (0 === e) return 0;
      var t = e / o,
        i = 1;
      switch ((0 > e && (i = -1), t)) {
        case 1:
          return i;
        case 2:
          return 0;
        case 3:
          return -i;
      }
      return Math.sin(e);
    },
    removeFromArray: function(e, t) {
      var i = e.indexOf(t);
      return -1 !== i && e.splice(i, 1), e;
    },
    getRandomInt: function(e, t) {
      return Math.floor(Math.random() * (t - e + 1)) + e;
    },
    degreesToRadians: function(e) {
      return e * r;
    },
    radiansToDegrees: function(e) {
      return e / r;
    },
    rotatePoint: function(e, t, i) {
      e.subtractEquals(t);
      var n = fabric.util.rotateVector(e, i);
      return new fabric.Point(n.x, n.y).addEquals(t);
    },
    rotateVector: function(e, t) {
      var i = fabric.util.sin(t),
        n = fabric.util.cos(t),
        r = e.x * n - e.y * i,
        o = e.x * i + e.y * n;
      return { x: r, y: o };
    },
    transformPoint: function(e, t, i) {
      return i
        ? new fabric.Point(t[0] * e.x + t[2] * e.y, t[1] * e.x + t[3] * e.y)
        : new fabric.Point(t[0] * e.x + t[2] * e.y + t[4], t[1] * e.x + t[3] * e.y + t[5]);
    },
    makeBoundingBoxFromPoints: function(e, t) {
      if (t) for (var i = 0; i < e.length; i++) e[i] = fabric.util.transformPoint(e[i], t);
      var n = [e[0].x, e[1].x, e[2].x, e[3].x],
        r = fabric.util.array.min(n),
        o = fabric.util.array.max(n),
        s = o - r,
        a = [e[0].y, e[1].y, e[2].y, e[3].y],
        c = fabric.util.array.min(a),
        l = fabric.util.array.max(a),
        u = l - c;
      return { left: r, top: c, width: s, height: u };
    },
    invertTransform: function(e) {
      var t = 1 / (e[0] * e[3] - e[1] * e[2]),
        i = [t * e[3], -t * e[1], -t * e[2], t * e[0]],
        n = fabric.util.transformPoint({ x: e[4], y: e[5] }, i, !0);
      return (i[4] = -n.x), (i[5] = -n.y), i;
    },
    toFixed: function(e, t) {
      return parseFloat(Number(e).toFixed(t));
    },
    parseUnit: function(e, t) {
      var i = /\D{0,2}$/.exec(e),
        n = parseFloat(e);
      switch ((t || (t = fabric.Text.DEFAULT_SVG_FONT_SIZE), i[0])) {
        case 'mm':
          return (n * fabric.DPI) / 25.4;
        case 'cm':
          return (n * fabric.DPI) / 2.54;
        case 'in':
          return n * fabric.DPI;
        case 'pt':
          return (n * fabric.DPI) / 72;
        case 'pc':
          return ((n * fabric.DPI) / 72) * 12;
        case 'em':
          return n * t;
        default:
          return n;
      }
    },
    falseFunction: function() {
      return !1;
    },
    getKlass: function(e, t) {
      return (
        (e = fabric.util.string.camelize(e.charAt(0).toUpperCase() + e.slice(1))), fabric.util.resolveNamespace(t)[e]
      );
    },
    getSvgAttributes: function(e) {
      var t = ['instantiated_by_use', 'style', 'id', 'class'];
      switch (e) {
        case 'linearGradient':
          t = t.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);
          break;
        case 'radialGradient':
          t = t.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);
          break;
        case 'stop':
          t = t.concat(['offset', 'stop-color', 'stop-opacity']);
      }
      return t;
    },
    resolveNamespace: function(t) {
      if (!t) return fabric;
      var i,
        n = t.split('.'),
        r = n.length,
        o = e || fabric.window;
      for (i = 0; r > i; ++i) o = o[n[i]];
      return o;
    },
    loadImage: function(e, t, i, n) {
      if (!e) return void (t && t.call(i, e));
      var r = fabric.util.createImage(),
        o = function() {
          t && t.call(i, r), (r = r.onload = r.onerror = null);
        };
      (r.onload = o),
        (r.onerror = function() {
          fabric.log('Error loading ' + r.src), t && t.call(i, null, !0), (r = r.onload = r.onerror = null);
        }),
        0 !== e.indexOf('data') && n && (r.crossOrigin = n),
        'data:image/svg' === e.substring(0, 14) && ((r.onload = null), fabric.util.loadImageInDom(r, o)),
        (r.src = e);
    },
    loadImageInDom: function(e, t) {
      var i = fabric.document.createElement('div');
      (i.style.width = i.style.height = '1px'),
        (i.style.left = i.style.top = '-100%'),
        (i.style.position = 'absolute'),
        i.appendChild(e),
        fabric.document.querySelector('body').appendChild(i),
        (e.onload = function() {
          t(), i.parentNode.removeChild(i), (i = null);
        });
    },
    enlivenObjects: function(e, t, i, n) {
      function r() {
        ++s === a &&
          t &&
          t(
            o.filter(function(e) {
              return e;
            })
          );
      }
      e = e || [];
      var o = [],
        s = 0,
        a = e.length;
      return a
        ? void e.forEach(function(e, t) {
            if (!e || !e.type) return void r();
            var s = fabric.util.getKlass(e.type, i);
            s.fromObject(e, function(i, s) {
              s || (o[t] = i), n && n(e, i, s), r();
            });
          })
        : void (t && t(o));
    },
    enlivenPatterns: function(e, t) {
      function i() {
        ++r === o && t && t(n);
      }
      e = e || [];
      var n = [],
        r = 0,
        o = e.length;
      return o
        ? void e.forEach(function(e, t) {
            e && e.source
              ? new fabric.Pattern(e, function(e) {
                  (n[t] = e), i();
                })
              : ((n[t] = e), i());
          })
        : void (t && t(n));
    },
    groupSVGElements: function(e, t, i) {
      var n;
      return e && 1 === e.length
        ? e[0]
        : (t &&
            (t.width && t.height
              ? (t.centerPoint = { x: t.width / 2, y: t.height / 2 })
              : (delete t.width, delete t.height)),
          (n = new fabric.Group(e, t)),
          'undefined' != typeof i && (n.sourcePath = i),
          n);
    },
    populateWithProperties: function(e, t, i) {
      if (i && '[object Array]' === Object.prototype.toString.call(i))
        for (var n = 0, r = i.length; r > n; n++) i[n] in e && (t[i[n]] = e[i[n]]);
    },
    drawDashedLine: function(e, n, r, o, s, a) {
      var c = o - n,
        l = s - r,
        u = t(c * c + l * l),
        h = i(l, c),
        f = a.length,
        d = 0,
        v = !0;
      for (e.save(), e.translate(n, r), e.moveTo(0, 0), e.rotate(h), n = 0; u > n; )
        (n += a[d++ % f]), n > u && (n = u), e[v ? 'lineTo' : 'moveTo'](n, 0), (v = !v);
      e.restore();
    },
    createCanvasElement: function() {
      return fabric.document.createElement('canvas');
    },
    copyCanvasElement: function(e) {
      var t = fabric.util.createCanvasElement();
      return (t.width = e.width), (t.height = e.height), t.getContext('2d').drawImage(e, 0, 0), t;
    },
    toDataURL: function(e, t, i) {
      return e.toDataURL('image/' + t, i);
    },
    createImage: function() {
      return fabric.document.createElement('img');
    },
    clipContext: function(e, t) {
      t.save(), t.beginPath(), e.clipTo(t), t.clip();
    },
    multiplyTransformMatrices: function(e, t, i) {
      return [
        e[0] * t[0] + e[2] * t[1],
        e[1] * t[0] + e[3] * t[1],
        e[0] * t[2] + e[2] * t[3],
        e[1] * t[2] + e[3] * t[3],
        i ? 0 : e[0] * t[4] + e[2] * t[5] + e[4],
        i ? 0 : e[1] * t[4] + e[3] * t[5] + e[5]
      ];
    },
    qrDecompose: function(e) {
      var o = i(e[1], e[0]),
        s = n(e[0], 2) + n(e[1], 2),
        a = t(s),
        c = (e[0] * e[3] - e[2] * e[1]) / a,
        l = i(e[0] * e[2] + e[1] * e[3], s);
      return { angle: o / r, scaleX: a, scaleY: c, skewX: l / r, skewY: 0, translateX: e[4], translateY: e[5] };
    },
    calcRotateMatrix: function(e) {
      if (!e.angle) return fabric.iMatrix.concat();
      var t = fabric.util.degreesToRadians(e.angle),
        i = fabric.util.cos(t),
        n = fabric.util.sin(t);
      return [i, n, -n, i, 0, 0];
    },
    calcDimensionsMatrix: function(e) {
      var t = 'undefined' == typeof e.scaleX ? 1 : e.scaleX,
        i = 'undefined' == typeof e.scaleY ? 1 : e.scaleY,
        n = [e.flipX ? -t : t, 0, 0, e.flipY ? -i : i, 0, 0],
        r = fabric.util.multiplyTransformMatrices,
        o = fabric.util.degreesToRadians;
      return (
        e.skewX && (n = r(n, [1, 0, Math.tan(o(e.skewX)), 1], !0)),
        e.skewY && (n = r(n, [1, Math.tan(o(e.skewY)), 0, 1], !0)),
        n
      );
    },
    composeMatrix: function(e) {
      var t = [1, 0, 0, 1, e.translateX || 0, e.translateY || 0],
        i = fabric.util.multiplyTransformMatrices;
      return (
        e.angle && (t = i(t, fabric.util.calcRotateMatrix(e))),
        (e.scaleX || e.scaleY || e.skewX || e.skewY || e.flipX || e.flipY) &&
          (t = i(t, fabric.util.calcDimensionsMatrix(e))),
        t
      );
    },
    customTransformMatrix: function(e, t, i) {
      return fabric.util.composeMatrix({ scaleX: e, scaleY: t, skewX: i });
    },
    resetObjectTransform: function(e) {
      (e.scaleX = 1), (e.scaleY = 1), (e.skewX = 0), (e.skewY = 0), (e.flipX = !1), (e.flipY = !1), e.rotate(0);
    },
    saveObjectTransform: function(e) {
      return {
        scaleX: e.scaleX,
        scaleY: e.scaleY,
        skewX: e.skewX,
        skewY: e.skewY,
        angle: e.angle,
        left: e.left,
        flipX: e.flipX,
        flipY: e.flipY,
        top: e.top
      };
    },
    getFunctionBody: function(e) {
      return (String(e).match(/function[^{]*\{([\s\S]*)\}/) || {})[1];
    },
    isTransparent: function(e, t, i, n) {
      n > 0 && (t > n ? (t -= n) : (t = 0), i > n ? (i -= n) : (i = 0));
      var r,
        o,
        s = !0,
        a = e.getImageData(t, i, 2 * n || 1, 2 * n || 1),
        c = a.data.length;
      for (r = 3; c > r && ((o = a.data[r]), (s = 0 >= o), s !== !1); r += 4);
      return (a = null), s;
    },
    parsePreserveAspectRatioAttribute: function(e) {
      var t,
        i = 'meet',
        n = 'Mid',
        r = 'Mid',
        o = e.split(' ');
      return (
        o &&
          o.length &&
          ((i = o.pop()), 'meet' !== i && 'slice' !== i ? ((t = i), (i = 'meet')) : o.length && (t = o.pop())),
        (n = 'none' !== t ? t.slice(1, 4) : 'none'),
        (r = 'none' !== t ? t.slice(5, 8) : 'none'),
        { meetOrSlice: i, alignX: n, alignY: r }
      );
    },
    clearFabricFontCache: function(e) {
      (e = (e || '').toLowerCase()),
        e ? fabric.charWidthsCache[e] && delete fabric.charWidthsCache[e] : (fabric.charWidthsCache = {});
    },
    limitDimsByArea: function(e, t) {
      var i = Math.sqrt(t * e),
        n = Math.floor(t / i);
      return { x: Math.floor(i), y: n };
    },
    capValue: function(e, t, i) {
      return Math.max(e, Math.min(t, i));
    },
    findScaleToFit: function(e, t) {
      return Math.min(t.width / e.width, t.height / e.height);
    },
    findScaleToCover: function(e, t) {
      return Math.max(t.width / e.width, t.height / e.height);
    },
    matrixToSVG: function(e) {
      return (
        'matrix(' +
        e
          .map(function(e) {
            return fabric.util.toFixed(e, fabric.Object.NUM_FRACTION_DIGITS);
          })
          .join(' ') +
        ')'
      );
    }
  };
})('undefined' != typeof exports ? exports : this);
!(function() {
  function e(e, n, o, s, a, c, l) {
    var u = r.call(arguments);
    if (fabric.arcToSegmentsCache[u]) return fabric.arcToSegmentsCache[u];
    var h = Math.PI,
      f = (l * h) / 180,
      d = fabric.util.sin(f),
      v = fabric.util.cos(f),
      g = 0,
      p = 0;
    (o = Math.abs(o)), (s = Math.abs(s));
    var m = -v * e * 0.5 - d * n * 0.5,
      b = -v * n * 0.5 + d * e * 0.5,
      y = o * o,
      _ = s * s,
      w = b * b,
      C = m * m,
      x = y * _ - y * w - _ * C,
      j = 0;
    if (0 > x) {
      var O = Math.sqrt(1 - x / (y * _));
      (o *= O), (s *= O);
    } else j = (a === c ? -1 : 1) * Math.sqrt(x / (y * w + _ * C));
    var S = (j * o * b) / s,
      T = (-j * s * m) / o,
      P = v * S - d * T + 0.5 * e,
      k = d * S + v * T + 0.5 * n,
      E = i(1, 0, (m - S) / o, (b - T) / s),
      M = i((m - S) / o, (b - T) / s, (-m - S) / o, (-b - T) / s);
    0 === c && M > 0 ? (M -= 2 * h) : 1 === c && 0 > M && (M += 2 * h);
    for (
      var D = Math.ceil(Math.abs((M / h) * 2)),
        F = [],
        X = M / D,
        A = ((8 / 3) * Math.sin(X / 4) * Math.sin(X / 4)) / Math.sin(X / 2),
        Y = E + X,
        L = 0;
      D > L;
      L++
    )
      (F[L] = t(E, Y, v, d, o, s, P, k, A, g, p)), (g = F[L][4]), (p = F[L][5]), (E = Y), (Y += X);
    return (fabric.arcToSegmentsCache[u] = F), F;
  }
  function t(e, t, i, n, r, o, s, a, c, l, u) {
    var h = fabric.util.cos(e),
      f = fabric.util.sin(e),
      d = fabric.util.cos(t),
      v = fabric.util.sin(t),
      g = i * r * d - n * o * v + s,
      p = n * r * d + i * o * v + a,
      m = l + c * (-i * r * f - n * o * h),
      b = u + c * (-n * r * f + i * o * h),
      y = g + c * (i * r * v + n * o * d),
      _ = p + c * (n * r * v - i * o * d);
    return [m, b, y, _, g, p];
  }
  function i(e, t, i, n) {
    var r = Math.atan2(t, e),
      o = Math.atan2(n, i);
    return o >= r ? o - r : 2 * Math.PI - (r - o);
  }
  function n(e, t, i, n, o, s, a, c) {
    var l;
    if (fabric.cachesBoundsOfCurve && ((l = r.call(arguments)), fabric.boundsOfCurveCache[l]))
      return fabric.boundsOfCurveCache[l];
    var u,
      h,
      f,
      d,
      v,
      g,
      p,
      m,
      b = Math.sqrt,
      y = Math.min,
      _ = Math.max,
      w = Math.abs,
      C = [],
      x = [[], []];
    (h = 6 * e - 12 * i + 6 * o), (u = -3 * e + 9 * i - 9 * o + 3 * a), (f = 3 * i - 3 * e);
    for (var j = 0; 2 > j; ++j)
      if (
        (j > 0 && ((h = 6 * t - 12 * n + 6 * s), (u = -3 * t + 9 * n - 9 * s + 3 * c), (f = 3 * n - 3 * t)),
        w(u) < 1e-12)
      ) {
        if (w(h) < 1e-12) continue;
        (d = -f / h), d > 0 && 1 > d && C.push(d);
      } else
        (p = h * h - 4 * f * u),
          0 > p ||
            ((m = b(p)),
            (v = (-h + m) / (2 * u)),
            v > 0 && 1 > v && C.push(v),
            (g = (-h - m) / (2 * u)),
            g > 0 && 1 > g && C.push(g));
    for (var O, S, T, P = C.length, k = P; P--; )
      (d = C[P]),
        (T = 1 - d),
        (O = T * T * T * e + 3 * T * T * d * i + 3 * T * d * d * o + d * d * d * a),
        (x[0][P] = O),
        (S = T * T * T * t + 3 * T * T * d * n + 3 * T * d * d * s + d * d * d * c),
        (x[1][P] = S);
    (x[0][k] = e), (x[1][k] = t), (x[0][k + 1] = a), (x[1][k + 1] = c);
    var E = [{ x: y.apply(null, x[0]), y: y.apply(null, x[1]) }, { x: _.apply(null, x[0]), y: _.apply(null, x[1]) }];
    return fabric.cachesBoundsOfCurve && (fabric.boundsOfCurveCache[l] = E), E;
  }
  var r = Array.prototype.join;
  (fabric.util.drawArc = function(t, i, n, r) {
    for (
      var o = r[0],
        s = r[1],
        a = r[2],
        c = r[3],
        l = r[4],
        u = r[5],
        h = r[6],
        f = [[], [], [], []],
        d = e(u - i, h - n, o, s, c, l, a),
        v = 0,
        g = d.length;
      g > v;
      v++
    )
      (f[v][0] = d[v][0] + i),
        (f[v][1] = d[v][1] + n),
        (f[v][2] = d[v][2] + i),
        (f[v][3] = d[v][3] + n),
        (f[v][4] = d[v][4] + i),
        (f[v][5] = d[v][5] + n),
        t.bezierCurveTo.apply(t, f[v]);
  }),
    (fabric.util.getBoundsOfArc = function(t, i, r, o, s, a, c, l, u) {
      for (var h, f = 0, d = 0, v = [], g = e(l - t, u - i, r, o, a, c, s), p = 0, m = g.length; m > p; p++)
        (h = n(f, d, g[p][0], g[p][1], g[p][2], g[p][3], g[p][4], g[p][5])),
          v.push({ x: h[0].x + t, y: h[0].y + i }),
          v.push({ x: h[1].x + t, y: h[1].y + i }),
          (f = g[p][4]),
          (d = g[p][5]);
      return v;
    }),
    (fabric.util.getBoundsOfCurve = n);
})();
!(function() {
  function e(e, t) {
    for (var i = o.call(arguments, 2), n = [], r = 0, s = e.length; s > r; r++)
      n[r] = i.length ? e[r][t].apply(e[r], i) : e[r][t].call(e[r]);
    return n;
  }
  function t(e, t) {
    return r(e, t, function(e, t) {
      return e >= t;
    });
  }
  function i(e, t) {
    return r(e, t, function(e, t) {
      return t > e;
    });
  }
  function n(e, t) {
    for (var i = e.length; i--; ) e[i] = t;
    return e;
  }
  function r(e, t, i) {
    if (e && 0 !== e.length) {
      var n = e.length - 1,
        r = t ? e[n][t] : e[n];
      if (t) for (; n--; ) i(e[n][t], r) && (r = e[n][t]);
      else for (; n--; ) i(e[n], r) && (r = e[n]);
      return r;
    }
  }
  var o = Array.prototype.slice;
  fabric.util.array = { fill: n, invoke: e, min: i, max: t };
})();
!(function() {
  function e(t, i, n) {
    if (n)
      if (!fabric.isLikelyNode && i instanceof Element) t = i;
      else if (i instanceof Array) {
        t = [];
        for (var r = 0, o = i.length; o > r; r++) t[r] = e({}, i[r], n);
      } else if (i && 'object' == typeof i)
        for (var s in i) 'canvas' === s ? (t[s] = e({}, i[s])) : i.hasOwnProperty(s) && (t[s] = e({}, i[s], n));
      else t = i;
    else for (var s in i) t[s] = i[s];
    return t;
  }
  function t(t, i) {
    return e({}, t, i);
  }
  (fabric.util.object = { extend: e, clone: t }), fabric.util.object.extend(fabric.util, fabric.Observable);
})();
!(function() {
  function e(e) {
    return e.replace(/-+(.)?/g, function(e, t) {
      return t ? t.toUpperCase() : '';
    });
  }
  function t(e, t) {
    return e.charAt(0).toUpperCase() + (t ? e.slice(1) : e.slice(1).toLowerCase());
  }
  function i(e) {
    return e
      .replace(/&/g, '&amp;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&apos;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;');
  }
  function n(e) {
    var t,
      i = 0,
      n = [];
    for (i = 0, t; i < e.length; i++) (t = r(e, i)) !== !1 && n.push(t);
    return n;
  }
  function r(e, t) {
    var i = e.charCodeAt(t);
    if (isNaN(i)) return '';
    if (55296 > i || i > 57343) return e.charAt(t);
    if (i >= 55296 && 56319 >= i) {
      if (e.length <= t + 1) throw 'High surrogate without following low surrogate';
      var n = e.charCodeAt(t + 1);
      if (56320 > n || n > 57343) throw 'High surrogate without following low surrogate';
      return e.charAt(t) + e.charAt(t + 1);
    }
    if (0 === t) throw 'Low surrogate without preceding high surrogate';
    var r = e.charCodeAt(t - 1);
    if (55296 > r || r > 56319) throw 'Low surrogate without preceding high surrogate';
    return !1;
  }
  fabric.util.string = { camelize: e, capitalize: t, escapeXml: i, graphemeSplit: n };
})();
!(function() {
  function e() {}
  function t(e) {
    for (var t = null, i = this; i.constructor.superclass; ) {
      var r = i.constructor.superclass.prototype[e];
      if (i[e] !== r) {
        t = r;
        break;
      }
      i = i.constructor.superclass.prototype;
    }
    return t
      ? arguments.length > 1
        ? t.apply(this, n.call(arguments, 1))
        : t.call(this)
      : console.log('tried to callSuper ' + e + ', method not found in prototype chain', this);
  }
  function i() {
    function i() {
      this.initialize.apply(this, arguments);
    }
    var o = null,
      a = n.call(arguments, 0);
    'function' == typeof a[0] && (o = a.shift()),
      (i.superclass = o),
      (i.subclasses = []),
      o && ((e.prototype = o.prototype), (i.prototype = new e()), o.subclasses.push(i));
    for (var c = 0, l = a.length; l > c; c++) s(i, a[c], o);
    return (
      i.prototype.initialize || (i.prototype.initialize = r),
      (i.prototype.constructor = i),
      (i.prototype.callSuper = t),
      i
    );
  }
  var n = Array.prototype.slice,
    r = function() {},
    o = (function() {
      for (var e in { toString: 1 }) if ('toString' === e) return !1;
      return !0;
    })(),
    s = function(e, t, i) {
      for (var n in t)
        (e.prototype[n] =
          n in e.prototype && 'function' == typeof e.prototype[n] && (t[n] + '').indexOf('callSuper') > -1
            ? (function(e) {
                return function() {
                  var n = this.constructor.superclass;
                  this.constructor.superclass = i;
                  var r = t[e].apply(this, arguments);
                  return (this.constructor.superclass = n), 'initialize' !== e ? r : void 0;
                };
              })(n)
            : t[n]),
          o &&
            (t.toString !== Object.prototype.toString && (e.prototype.toString = t.toString),
            t.valueOf !== Object.prototype.valueOf && (e.prototype.valueOf = t.valueOf));
    };
  fabric.util.createClass = i;
})();
!(function() {
  function e(e) {
    var t = e.changedTouches;
    return t && t[0] ? t[0] : e;
  }
  var t = !!fabric.document.createElement('div').attachEvent;
  (fabric.util.addListener = function(e, i, n, r) {
    e && e.addEventListener(i, n, t ? !1 : r);
  }),
    (fabric.util.removeListener = function(e, i, n, r) {
      e && e.removeEventListener(i, n, t ? !1 : r);
    }),
    (fabric.util.getPointer = function(t) {
      var i = t.target,
        n = fabric.util.getScrollLeftTop(i),
        r = e(t);
      return { x: r.clientX + n.left, y: r.clientY + n.top };
    });
})();
!(function() {
  function t(t, e) {
    var i = t.style;
    if (!i) return t;
    if ('string' == typeof e)
      return (t.style.cssText += ';' + e), e.indexOf('opacity') > -1 ? o(t, e.match(/opacity:\s*(\d?\.?\d*)/)[1]) : t;
    for (var n in e)
      if ('opacity' === n) o(t, e[n]);
      else {
        var r =
          'float' === n || 'cssFloat' === n ? ('undefined' == typeof i.styleFloat ? 'cssFloat' : 'styleFloat') : n;
        i[r] = e[n];
      }
    return t;
  }
  var e = fabric.document.createElement('div'),
    i = 'string' == typeof e.style.opacity,
    n = 'string' == typeof e.style.filter,
    r = /alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/,
    o = function(t) {
      return t;
    };
  i
    ? (o = function(t, e) {
        return (t.style.opacity = e), t;
      })
    : n &&
      (o = function(t, e) {
        var i = t.style;
        return (
          t.currentStyle && !t.currentStyle.hasLayout && (i.zoom = 1),
          r.test(i.filter)
            ? ((e = e >= 0.9999 ? '' : 'alpha(opacity=' + 100 * e + ')'), (i.filter = i.filter.replace(r, e)))
            : (i.filter += ' alpha(opacity=' + 100 * e + ')'),
          t
        );
      }),
    (fabric.util.setStyle = t);
})();
!(function() {
  function e(e) {
    return 'string' == typeof e ? fabric.document.getElementById(e) : e;
  }
  function t(e, t) {
    var i = fabric.document.createElement(e);
    for (var n in t) 'class' === n ? (i.className = t[n]) : 'for' === n ? (i.htmlFor = t[n]) : i.setAttribute(n, t[n]);
    return i;
  }
  function i(e, t) {
    e && -1 === (' ' + e.className + ' ').indexOf(' ' + t + ' ') && (e.className += (e.className ? ' ' : '') + t);
  }
  function n(e, i, n) {
    return 'string' == typeof i && (i = t(i, n)), e.parentNode && e.parentNode.replaceChild(i, e), i.appendChild(e), i;
  }
  function r(e) {
    for (
      var t = 0,
        i = 0,
        n = fabric.document.documentElement,
        r = fabric.document.body || { scrollLeft: 0, scrollTop: 0 };
      e &&
      (e.parentNode || e.host) &&
      ((e = e.parentNode || e.host),
      e === fabric.document
        ? ((t = r.scrollLeft || n.scrollLeft || 0), (i = r.scrollTop || n.scrollTop || 0))
        : ((t += e.scrollLeft || 0), (i += e.scrollTop || 0)),
      1 !== e.nodeType || 'fixed' !== e.style.position);

    );
    return { left: t, top: i };
  }
  function o(e) {
    var t,
      i,
      n = e && e.ownerDocument,
      o = { left: 0, top: 0 },
      s = { left: 0, top: 0 },
      a = { borderLeftWidth: 'left', borderTopWidth: 'top', paddingLeft: 'left', paddingTop: 'top' };
    if (!n) return s;
    for (var c in a) s[a[c]] += parseInt(f(e, c), 10) || 0;
    return (
      (t = n.documentElement),
      'undefined' != typeof e.getBoundingClientRect && (o = e.getBoundingClientRect()),
      (i = r(e)),
      { left: o.left + i.left - (t.clientLeft || 0) + s.left, top: o.top + i.top - (t.clientTop || 0) + s.top }
    );
  }
  function s(e) {
    var t = fabric.jsdomImplForWrapper(e);
    return t._canvas || t._image;
  }
  function a(e) {
    if (fabric.isLikelyNode) {
      var t = fabric.jsdomImplForWrapper(e);
      t &&
        ((t._image = null), (t._canvas = null), (t._currentSrc = null), (t._attributes = null), (t._classList = null));
    }
  }
  var c,
    l = Array.prototype.slice,
    u = function(e) {
      return l.call(e, 0);
    };
  try {
    c = u(fabric.document.childNodes) instanceof Array;
  } catch (h) {}
  c ||
    (u = function(e) {
      for (var t = new Array(e.length), i = e.length; i--; ) t[i] = e[i];
      return t;
    });
  var f;
  (f =
    fabric.document.defaultView && fabric.document.defaultView.getComputedStyle
      ? function(e, t) {
          var i = fabric.document.defaultView.getComputedStyle(e, null);
          return i ? i[t] : void 0;
        }
      : function(e, t) {
          var i = e.style[t];
          return !i && e.currentStyle && (i = e.currentStyle[t]), i;
        }),
    (function() {
      function e(e) {
        return (
          'undefined' != typeof e.onselectstart && (e.onselectstart = fabric.util.falseFunction),
          n ? (e.style[n] = 'none') : 'string' == typeof e.unselectable && (e.unselectable = 'on'),
          e
        );
      }
      function t(e) {
        return (
          'undefined' != typeof e.onselectstart && (e.onselectstart = null),
          n ? (e.style[n] = '') : 'string' == typeof e.unselectable && (e.unselectable = ''),
          e
        );
      }
      var i = fabric.document.documentElement.style,
        n =
          'userSelect' in i
            ? 'userSelect'
            : 'MozUserSelect' in i
            ? 'MozUserSelect'
            : 'WebkitUserSelect' in i
            ? 'WebkitUserSelect'
            : 'KhtmlUserSelect' in i
            ? 'KhtmlUserSelect'
            : '';
      (fabric.util.makeElementUnselectable = e), (fabric.util.makeElementSelectable = t);
    })(),
    (function() {
      function e(e, t) {
        var i = fabric.document.getElementsByTagName('head')[0],
          n = fabric.document.createElement('script'),
          r = !0;
        (n.onload = n.onreadystatechange = function(e) {
          if (r) {
            if ('string' == typeof this.readyState && 'loaded' !== this.readyState && 'complete' !== this.readyState)
              return;
            (r = !1), t(e || fabric.window.event), (n = n.onload = n.onreadystatechange = null);
          }
        }),
          (n.src = e),
          i.appendChild(n);
      }
      fabric.util.getScript = e;
    })(),
    (fabric.util.getById = e),
    (fabric.util.toArray = u),
    (fabric.util.makeElement = t),
    (fabric.util.addClass = i),
    (fabric.util.wrapElement = n),
    (fabric.util.getScrollLeftTop = r),
    (fabric.util.getElementOffset = o),
    (fabric.util.getElementStyle = f),
    (fabric.util.getNodeCanvas = s),
    (fabric.util.cleanUpJsdomNode = a);
})();
!(function() {
  function e(e, t) {
    return e + (/\?/.test(e) ? '&' : '?') + t;
  }
  function t() {}
  function i(i, n) {
    n || (n = {});
    var r = n.method ? n.method.toUpperCase() : 'GET',
      o = n.onComplete || function() {},
      s = new fabric.window.XMLHttpRequest(),
      a = n.body || n.parameters;
    return (
      (s.onreadystatechange = function() {
        4 === s.readyState && (o(s), (s.onreadystatechange = t));
      }),
      'GET' === r && ((a = null), 'string' == typeof n.parameters && (i = e(i, n.parameters))),
      s.open(r, i, !0),
      ('POST' === r || 'PUT' === r) && s.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded'),
      s.send(a),
      s
    );
  }
  fabric.util.request = i;
})();
(fabric.log = function() {}),
  (fabric.warn = function() {}),
  'undefined' != typeof console &&
    ['log', 'warn'].forEach(function(e) {
      'undefined' != typeof console[e] &&
        'function' == typeof console[e].apply &&
        (fabric[e] = function() {
          return console[e].apply(console, arguments);
        });
    });
!(function() {
  function e() {
    return !1;
  }
  function t(e, t, i, n) {
    return -i * Math.cos((e / n) * (Math.PI / 2)) + i + t;
  }
  function i(i) {
    n(function(r) {
      i || (i = {});
      var o,
        s = r || +new Date(),
        a = i.duration || 500,
        c = s + a,
        l = i.onChange || e,
        u = i.abort || e,
        h = i.onComplete || e,
        f = i.easing || t,
        d = 'startValue' in i ? i.startValue : 0,
        v = 'endValue' in i ? i.endValue : 100,
        g = i.byValue || v - d;
      i.onStart && i.onStart(),
        (function p(e) {
          o = e || +new Date();
          var t = o > c ? a : o - s,
            i = t / a,
            r = f(t, d, g, a),
            m = Math.abs((r - d) / g);
          return u() ? void h(v, 1, 1) : o > c ? (l(v, 1, 1), void h(v, 1, 1)) : (l(r, m, i), void n(p));
        })(s);
    });
  }
  function n() {
    return o.apply(fabric.window, arguments);
  }
  function r() {
    return s.apply(fabric.window, arguments);
  }
  var o =
      fabric.window.requestAnimationFrame ||
      fabric.window.webkitRequestAnimationFrame ||
      fabric.window.mozRequestAnimationFrame ||
      fabric.window.oRequestAnimationFrame ||
      fabric.window.msRequestAnimationFrame ||
      function(e) {
        return fabric.window.setTimeout(e, 1e3 / 60);
      },
    s = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;
  (fabric.util.animate = i), (fabric.util.requestAnimFrame = n), (fabric.util.cancelAnimFrame = r);
})();
!(function() {
  function e(e, t, i) {
    var n =
      'rgba(' +
      parseInt(e[0] + i * (t[0] - e[0]), 10) +
      ',' +
      parseInt(e[1] + i * (t[1] - e[1]), 10) +
      ',' +
      parseInt(e[2] + i * (t[2] - e[2]), 10);
    return (n += ',' + (e && t ? parseFloat(e[3] + i * (t[3] - e[3])) : 1)), (n += ')');
  }
  function t(t, i, n, r) {
    var o = new fabric.Color(t).getSource(),
      s = new fabric.Color(i).getSource();
    (r = r || {}),
      fabric.util.animate(
        fabric.util.object.extend(r, {
          duration: n || 500,
          startValue: o,
          endValue: s,
          byValue: s,
          easing: function(t, i, n, o) {
            var s = r.colorEasing ? r.colorEasing(t, o) : 1 - Math.cos((t / o) * (Math.PI / 2));
            return e(i, n, s);
          }
        })
      );
  }
  fabric.util.animateColor = t;
})();
!(function(t) {
  'use strict';
  function e(t, e) {
    (this.x = t), (this.y = e);
  }
  var i = t.fabric || (t.fabric = {});
  return i.Point
    ? void i.warn('fabric.Point is already defined')
    : ((i.Point = e),
      void (e.prototype = {
        type: 'point',
        constructor: e,
        add: function(t) {
          return new e(this.x + t.x, this.y + t.y);
        },
        addEquals: function(t) {
          return (this.x += t.x), (this.y += t.y), this;
        },
        scalarAdd: function(t) {
          return new e(this.x + t, this.y + t);
        },
        scalarAddEquals: function(t) {
          return (this.x += t), (this.y += t), this;
        },
        subtract: function(t) {
          return new e(this.x - t.x, this.y - t.y);
        },
        subtractEquals: function(t) {
          return (this.x -= t.x), (this.y -= t.y), this;
        },
        scalarSubtract: function(t) {
          return new e(this.x - t, this.y - t);
        },
        scalarSubtractEquals: function(t) {
          return (this.x -= t), (this.y -= t), this;
        },
        multiply: function(t) {
          return new e(this.x * t, this.y * t);
        },
        multiplyEquals: function(t) {
          return (this.x *= t), (this.y *= t), this;
        },
        divide: function(t) {
          return new e(this.x / t, this.y / t);
        },
        divideEquals: function(t) {
          return (this.x /= t), (this.y /= t), this;
        },
        eq: function(t) {
          return this.x === t.x && this.y === t.y;
        },
        lt: function(t) {
          return this.x < t.x && this.y < t.y;
        },
        lte: function(t) {
          return this.x <= t.x && this.y <= t.y;
        },
        gt: function(t) {
          return this.x > t.x && this.y > t.y;
        },
        gte: function(t) {
          return this.x >= t.x && this.y >= t.y;
        },
        lerp: function(t, i) {
          return (
            'undefined' == typeof i && (i = 0.5),
            (i = Math.max(Math.min(1, i), 0)),
            new e(this.x + (t.x - this.x) * i, this.y + (t.y - this.y) * i)
          );
        },
        distanceFrom: function(t) {
          var e = this.x - t.x,
            i = this.y - t.y;
          return Math.sqrt(e * e + i * i);
        },
        midPointFrom: function(t) {
          return this.lerp(t);
        },
        min: function(t) {
          return new e(Math.min(this.x, t.x), Math.min(this.y, t.y));
        },
        max: function(t) {
          return new e(Math.max(this.x, t.x), Math.max(this.y, t.y));
        },
        toString: function() {
          return this.x + ',' + this.y;
        },
        setXY: function(t, e) {
          return (this.x = t), (this.y = e), this;
        },
        setX: function(t) {
          return (this.x = t), this;
        },
        setY: function(t) {
          return (this.y = t), this;
        },
        setFromPoint: function(t) {
          return (this.x = t.x), (this.y = t.y), this;
        },
        swap: function(t) {
          var e = this.x,
            i = this.y;
          (this.x = t.x), (this.y = t.y), (t.x = e), (t.y = i);
        },
        clone: function() {
          return new e(this.x, this.y);
        }
      }));
})('undefined' != typeof exports ? exports : this);
!(function(t) {
  'use strict';
  function e(t) {
    (this.status = t), (this.points = []);
  }
  var i = t.fabric || (t.fabric = {});
  return i.Intersection
    ? void i.warn('fabric.Intersection is already defined')
    : ((i.Intersection = e),
      (i.Intersection.prototype = {
        constructor: e,
        appendPoint: function(t) {
          return this.points.push(t), this;
        },
        appendPoints: function(t) {
          return (this.points = this.points.concat(t)), this;
        }
      }),
      (i.Intersection.intersectLineLine = function(t, n, r, o) {
        var s,
          a = (o.x - r.x) * (t.y - r.y) - (o.y - r.y) * (t.x - r.x),
          c = (n.x - t.x) * (t.y - r.y) - (n.y - t.y) * (t.x - r.x),
          l = (o.y - r.y) * (n.x - t.x) - (o.x - r.x) * (n.y - t.y);
        if (0 !== l) {
          var u = a / l,
            h = c / l;
          u >= 0 && 1 >= u && h >= 0 && 1 >= h
            ? ((s = new e('Intersection')), s.appendPoint(new i.Point(t.x + u * (n.x - t.x), t.y + u * (n.y - t.y))))
            : (s = new e());
        } else s = new e(0 === a || 0 === c ? 'Coincident' : 'Parallel');
        return s;
      }),
      (i.Intersection.intersectLinePolygon = function(t, i, n) {
        var r,
          o,
          s,
          a,
          c = new e(),
          l = n.length;
        for (a = 0; l > a; a++)
          (r = n[a]), (o = n[(a + 1) % l]), (s = e.intersectLineLine(t, i, r, o)), c.appendPoints(s.points);
        return c.points.length > 0 && (c.status = 'Intersection'), c;
      }),
      (i.Intersection.intersectPolygonPolygon = function(t, i) {
        var n,
          r = new e(),
          o = t.length;
        for (n = 0; o > n; n++) {
          var s = t[n],
            a = t[(n + 1) % o],
            c = e.intersectLinePolygon(s, a, i);
          r.appendPoints(c.points);
        }
        return r.points.length > 0 && (r.status = 'Intersection'), r;
      }),
      void (i.Intersection.intersectPolygonRectangle = function(t, n, r) {
        var o = n.min(r),
          s = n.max(r),
          a = new i.Point(s.x, o.y),
          c = new i.Point(o.x, s.y),
          l = e.intersectLinePolygon(o, a, t),
          u = e.intersectLinePolygon(a, s, t),
          h = e.intersectLinePolygon(s, c, t),
          f = e.intersectLinePolygon(c, o, t),
          d = new e();
        return (
          d.appendPoints(l.points),
          d.appendPoints(u.points),
          d.appendPoints(h.points),
          d.appendPoints(f.points),
          d.points.length > 0 && (d.status = 'Intersection'),
          d
        );
      }));
})('undefined' != typeof exports ? exports : this);
!(function(t) {
  'use strict';
  function e(t) {
    t ? this._tryParsingColor(t) : this.setSource([0, 0, 0, 1]);
  }
  function i(t, e, i) {
    return (
      0 > i && (i += 1),
      i > 1 && (i -= 1),
      1 / 6 > i ? t + 6 * (e - t) * i : 0.5 > i ? e : 2 / 3 > i ? t + (e - t) * (2 / 3 - i) * 6 : t
    );
  }
  var n = t.fabric || (t.fabric = {});
  return n.Color
    ? void n.warn('fabric.Color is already defined.')
    : ((n.Color = e),
      (n.Color.prototype = {
        _tryParsingColor: function(t) {
          var i;
          t in e.colorNameMap && (t = e.colorNameMap[t]),
            'transparent' === t && (i = [255, 255, 255, 0]),
            i || (i = e.sourceFromHex(t)),
            i || (i = e.sourceFromRgb(t)),
            i || (i = e.sourceFromHsl(t)),
            i || (i = [0, 0, 0, 1]),
            i && this.setSource(i);
        },
        _rgbToHsl: function(t, e, i) {
          (t /= 255), (e /= 255), (i /= 255);
          var r,
            o,
            s,
            a = n.util.array.max([t, e, i]),
            c = n.util.array.min([t, e, i]);
          if (((s = (a + c) / 2), a === c)) r = o = 0;
          else {
            var l = a - c;
            switch (((o = s > 0.5 ? l / (2 - a - c) : l / (a + c)), a)) {
              case t:
                r = (e - i) / l + (i > e ? 6 : 0);
                break;
              case e:
                r = (i - t) / l + 2;
                break;
              case i:
                r = (t - e) / l + 4;
            }
            r /= 6;
          }
          return [Math.round(360 * r), Math.round(100 * o), Math.round(100 * s)];
        },
        getSource: function() {
          return this._source;
        },
        setSource: function(t) {
          this._source = t;
        },
        toRgb: function() {
          var t = this.getSource();
          return 'rgb(' + t[0] + ',' + t[1] + ',' + t[2] + ')';
        },
        toRgba: function() {
          var t = this.getSource();
          return 'rgba(' + t[0] + ',' + t[1] + ',' + t[2] + ',' + t[3] + ')';
        },
        toHsl: function() {
          var t = this.getSource(),
            e = this._rgbToHsl(t[0], t[1], t[2]);
          return 'hsl(' + e[0] + ',' + e[1] + '%,' + e[2] + '%)';
        },
        toHsla: function() {
          var t = this.getSource(),
            e = this._rgbToHsl(t[0], t[1], t[2]);
          return 'hsla(' + e[0] + ',' + e[1] + '%,' + e[2] + '%,' + t[3] + ')';
        },
        toHex: function() {
          var t,
            e,
            i,
            n = this.getSource();
          return (
            (t = n[0].toString(16)),
            (t = 1 === t.length ? '0' + t : t),
            (e = n[1].toString(16)),
            (e = 1 === e.length ? '0' + e : e),
            (i = n[2].toString(16)),
            (i = 1 === i.length ? '0' + i : i),
            t.toUpperCase() + e.toUpperCase() + i.toUpperCase()
          );
        },
        toHexa: function() {
          var t,
            e = this.getSource();
          return (
            (t = Math.round(255 * e[3])),
            (t = t.toString(16)),
            (t = 1 === t.length ? '0' + t : t),
            this.toHex() + t.toUpperCase()
          );
        },
        getAlpha: function() {
          return this.getSource()[3];
        },
        setAlpha: function(t) {
          var e = this.getSource();
          return (e[3] = t), this.setSource(e), this;
        },
        toGrayscale: function() {
          var t = this.getSource(),
            e = parseInt((0.3 * t[0] + 0.59 * t[1] + 0.11 * t[2]).toFixed(0), 10),
            i = t[3];
          return this.setSource([e, e, e, i]), this;
        },
        toBlackWhite: function(t) {
          var e = this.getSource(),
            i = (0.3 * e[0] + 0.59 * e[1] + 0.11 * e[2]).toFixed(0),
            n = e[3];
          return (t = t || 127), (i = Number(i) < Number(t) ? 0 : 255), this.setSource([i, i, i, n]), this;
        },
        overlayWith: function(t) {
          t instanceof e || (t = new e(t));
          var i,
            n = [],
            r = this.getAlpha(),
            o = 0.5,
            s = this.getSource(),
            a = t.getSource();
          for (i = 0; 3 > i; i++) n.push(Math.round(s[i] * (1 - o) + a[i] * o));
          return (n[3] = r), this.setSource(n), this;
        }
      }),
      (n.Color.reRGBa = /^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*((?:\d*\.?\d+)?)\s*)?\)$/i),
      (n.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/i),
      (n.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i),
      (n.Color.colorNameMap = {
        aliceblue: '#F0F8FF',
        antiquewhite: '#FAEBD7',
        aqua: '#00FFFF',
        aquamarine: '#7FFFD4',
        azure: '#F0FFFF',
        beige: '#F5F5DC',
        bisque: '#FFE4C4',
        black: '#000000',
        blanchedalmond: '#FFEBCD',
        blue: '#0000FF',
        blueviolet: '#8A2BE2',
        brown: '#A52A2A',
        burlywood: '#DEB887',
        cadetblue: '#5F9EA0',
        chartreuse: '#7FFF00',
        chocolate: '#D2691E',
        coral: '#FF7F50',
        cornflowerblue: '#6495ED',
        cornsilk: '#FFF8DC',
        crimson: '#DC143C',
        cyan: '#00FFFF',
        darkblue: '#00008B',
        darkcyan: '#008B8B',
        darkgoldenrod: '#B8860B',
        darkgray: '#A9A9A9',
        darkgrey: '#A9A9A9',
        darkgreen: '#006400',
        darkkhaki: '#BDB76B',
        darkmagenta: '#8B008B',
        darkolivegreen: '#556B2F',
        darkorange: '#FF8C00',
        darkorchid: '#9932CC',
        darkred: '#8B0000',
        darksalmon: '#E9967A',
        darkseagreen: '#8FBC8F',
        darkslateblue: '#483D8B',
        darkslategray: '#2F4F4F',
        darkslategrey: '#2F4F4F',
        darkturquoise: '#00CED1',
        darkviolet: '#9400D3',
        deeppink: '#FF1493',
        deepskyblue: '#00BFFF',
        dimgray: '#696969',
        dimgrey: '#696969',
        dodgerblue: '#1E90FF',
        firebrick: '#B22222',
        floralwhite: '#FFFAF0',
        forestgreen: '#228B22',
        fuchsia: '#FF00FF',
        gainsboro: '#DCDCDC',
        ghostwhite: '#F8F8FF',
        gold: '#FFD700',
        goldenrod: '#DAA520',
        gray: '#808080',
        grey: '#808080',
        green: '#008000',
        greenyellow: '#ADFF2F',
        honeydew: '#F0FFF0',
        hotpink: '#FF69B4',
        indianred: '#CD5C5C',
        indigo: '#4B0082',
        ivory: '#FFFFF0',
        khaki: '#F0E68C',
        lavender: '#E6E6FA',
        lavenderblush: '#FFF0F5',
        lawngreen: '#7CFC00',
        lemonchiffon: '#FFFACD',
        lightblue: '#ADD8E6',
        lightcoral: '#F08080',
        lightcyan: '#E0FFFF',
        lightgoldenrodyellow: '#FAFAD2',
        lightgray: '#D3D3D3',
        lightgrey: '#D3D3D3',
        lightgreen: '#90EE90',
        lightpink: '#FFB6C1',
        lightsalmon: '#FFA07A',
        lightseagreen: '#20B2AA',
        lightskyblue: '#87CEFA',
        lightslategray: '#778899',
        lightslategrey: '#778899',
        lightsteelblue: '#B0C4DE',
        lightyellow: '#FFFFE0',
        lime: '#00FF00',
        limegreen: '#32CD32',
        linen: '#FAF0E6',
        magenta: '#FF00FF',
        maroon: '#800000',
        mediumaquamarine: '#66CDAA',
        mediumblue: '#0000CD',
        mediumorchid: '#BA55D3',
        mediumpurple: '#9370DB',
        mediumseagreen: '#3CB371',
        mediumslateblue: '#7B68EE',
        mediumspringgreen: '#00FA9A',
        mediumturquoise: '#48D1CC',
        mediumvioletred: '#C71585',
        midnightblue: '#191970',
        mintcream: '#F5FFFA',
        mistyrose: '#FFE4E1',
        moccasin: '#FFE4B5',
        navajowhite: '#FFDEAD',
        navy: '#000080',
        oldlace: '#FDF5E6',
        olive: '#808000',
        olivedrab: '#6B8E23',
        orange: '#FFA500',
        orangered: '#FF4500',
        orchid: '#DA70D6',
        palegoldenrod: '#EEE8AA',
        palegreen: '#98FB98',
        paleturquoise: '#AFEEEE',
        palevioletred: '#DB7093',
        papayawhip: '#FFEFD5',
        peachpuff: '#FFDAB9',
        peru: '#CD853F',
        pink: '#FFC0CB',
        plum: '#DDA0DD',
        powderblue: '#B0E0E6',
        purple: '#800080',
        rebeccapurple: '#663399',
        red: '#FF0000',
        rosybrown: '#BC8F8F',
        royalblue: '#4169E1',
        saddlebrown: '#8B4513',
        salmon: '#FA8072',
        sandybrown: '#F4A460',
        seagreen: '#2E8B57',
        seashell: '#FFF5EE',
        sienna: '#A0522D',
        silver: '#C0C0C0',
        skyblue: '#87CEEB',
        slateblue: '#6A5ACD',
        slategray: '#708090',
        slategrey: '#708090',
        snow: '#FFFAFA',
        springgreen: '#00FF7F',
        steelblue: '#4682B4',
        tan: '#D2B48C',
        teal: '#008080',
        thistle: '#D8BFD8',
        tomato: '#FF6347',
        turquoise: '#40E0D0',
        violet: '#EE82EE',
        wheat: '#F5DEB3',
        white: '#FFFFFF',
        whitesmoke: '#F5F5F5',
        yellow: '#FFFF00',
        yellowgreen: '#9ACD32'
      }),
      (n.Color.fromRgb = function(t) {
        return e.fromSource(e.sourceFromRgb(t));
      }),
      (n.Color.sourceFromRgb = function(t) {
        var i = t.match(e.reRGBa);
        if (i) {
          var n = (parseInt(i[1], 10) / (/%$/.test(i[1]) ? 100 : 1)) * (/%$/.test(i[1]) ? 255 : 1),
            r = (parseInt(i[2], 10) / (/%$/.test(i[2]) ? 100 : 1)) * (/%$/.test(i[2]) ? 255 : 1),
            o = (parseInt(i[3], 10) / (/%$/.test(i[3]) ? 100 : 1)) * (/%$/.test(i[3]) ? 255 : 1);
          return [parseInt(n, 10), parseInt(r, 10), parseInt(o, 10), i[4] ? parseFloat(i[4]) : 1];
        }
      }),
      (n.Color.fromRgba = e.fromRgb),
      (n.Color.fromHsl = function(t) {
        return e.fromSource(e.sourceFromHsl(t));
      }),
      (n.Color.sourceFromHsl = function(t) {
        var n = t.match(e.reHSLa);
        if (n) {
          var r,
            o,
            s,
            a = (((parseFloat(n[1]) % 360) + 360) % 360) / 360,
            c = parseFloat(n[2]) / (/%$/.test(n[2]) ? 100 : 1),
            l = parseFloat(n[3]) / (/%$/.test(n[3]) ? 100 : 1);
          if (0 === c) r = o = s = l;
          else {
            var u = 0.5 >= l ? l * (c + 1) : l + c - l * c,
              h = 2 * l - u;
            (r = i(h, u, a + 1 / 3)), (o = i(h, u, a)), (s = i(h, u, a - 1 / 3));
          }
          return [Math.round(255 * r), Math.round(255 * o), Math.round(255 * s), n[4] ? parseFloat(n[4]) : 1];
        }
      }),
      (n.Color.fromHsla = e.fromHsl),
      (n.Color.fromHex = function(t) {
        return e.fromSource(e.sourceFromHex(t));
      }),
      (n.Color.sourceFromHex = function(t) {
        if (t.match(e.reHex)) {
          var i = t.slice(t.indexOf('#') + 1),
            n = 3 === i.length || 4 === i.length,
            r = 8 === i.length || 4 === i.length,
            o = n ? i.charAt(0) + i.charAt(0) : i.substring(0, 2),
            s = n ? i.charAt(1) + i.charAt(1) : i.substring(2, 4),
            a = n ? i.charAt(2) + i.charAt(2) : i.substring(4, 6),
            c = r ? (n ? i.charAt(3) + i.charAt(3) : i.substring(6, 8)) : 'FF';
          return [parseInt(o, 16), parseInt(s, 16), parseInt(a, 16), parseFloat((parseInt(c, 16) / 255).toFixed(2))];
        }
      }),
      void (n.Color.fromSource = function(t) {
        var i = new e();
        return i.setSource(t), i;
      }));
})('undefined' != typeof exports ? exports : this);
!(function() {
  'use strict';
  if (fabric.StaticCanvas) return void fabric.warn('fabric.StaticCanvas is already defined.');
  var t = fabric.util.object.extend,
    e = fabric.util.getElementOffset,
    i = fabric.util.removeFromArray,
    n = (fabric.util.toFixed, fabric.util.transformPoint),
    r = fabric.util.invertTransform,
    o = fabric.util.getNodeCanvas,
    s = fabric.util.createCanvasElement,
    a = new Error('Could not initialize `canvas` element');
  (fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, {
    initialize: function(t, e) {
      e || (e = {}),
        (this.renderAndResetBound = this.renderAndReset.bind(this)),
        (this.requestRenderAllBound = this.requestRenderAll.bind(this)),
        this._initStatic(t, e);
    },
    backgroundColor: '',
    backgroundImage: null,
    overlayColor: '',
    overlayImage: null,
    includeDefaultValues: !0,
    stateful: !1,
    renderOnAddRemove: !0,
    clipTo: null,
    controlsAboveOverlay: !1,
    allowTouchScrolling: !1,
    imageSmoothingEnabled: !0,
    viewportTransform: fabric.iMatrix.concat(),
    backgroundVpt: !0,
    overlayVpt: !0,
    onBeforeScaleRotate: function() {},
    enableRetinaScaling: !0,
    vptCoords: {},
    skipOffscreen: !0,
    clipPath: void 0,
    _initStatic: function(t, e) {
      var i = this.requestRenderAllBound;
      (this._objects = []),
        this._createLowerCanvas(t),
        this._initOptions(e),
        this._setImageSmoothing(),
        this.interactive || this._initRetinaScaling(),
        e.overlayImage && this.setOverlayImage(e.overlayImage, i),
        e.backgroundImage && this.setBackgroundImage(e.backgroundImage, i),
        e.backgroundColor && this.setBackgroundColor(e.backgroundColor, i),
        e.overlayColor && this.setOverlayColor(e.overlayColor, i),
        this.calcOffset();
    },
    _isRetinaScaling: function() {
      return 1 !== fabric.devicePixelRatio && this.enableRetinaScaling;
    },
    getRetinaScaling: function() {
      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;
    },
    _initRetinaScaling: function() {
      this._isRetinaScaling() &&
        (this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio),
        this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio),
        this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio));
    },
    calcOffset: function() {
      return (this._offset = e(this.lowerCanvasEl)), this;
    },
    setOverlayImage: function(t, e, i) {
      return this.__setBgOverlayImage('overlayImage', t, e, i);
    },
    setBackgroundImage: function(t, e, i) {
      return this.__setBgOverlayImage('backgroundImage', t, e, i);
    },
    setOverlayColor: function(t, e) {
      return this.__setBgOverlayColor('overlayColor', t, e);
    },
    setBackgroundColor: function(t, e) {
      return this.__setBgOverlayColor('backgroundColor', t, e);
    },
    _setImageSmoothing: function() {
      var t = this.getContext();
      (t.imageSmoothingEnabled =
        t.imageSmoothingEnabled ||
        t.webkitImageSmoothingEnabled ||
        t.mozImageSmoothingEnabled ||
        t.msImageSmoothingEnabled ||
        t.oImageSmoothingEnabled),
        (t.imageSmoothingEnabled = this.imageSmoothingEnabled);
    },
    __setBgOverlayImage: function(t, e, i, n) {
      return (
        'string' == typeof e
          ? fabric.util.loadImage(
              e,
              function(e) {
                if (e) {
                  var r = new fabric.Image(e, n);
                  (this[t] = r), (r.canvas = this);
                }
                i && i(e);
              },
              this,
              n && n.crossOrigin
            )
          : (n && e.setOptions(n), (this[t] = e), e && (e.canvas = this), i && i(e)),
        this
      );
    },
    __setBgOverlayColor: function(t, e, i) {
      return (this[t] = e), this._initGradient(e, t), this._initPattern(e, t, i), this;
    },
    _createCanvasElement: function() {
      var t = s();
      if (!t) throw a;
      if ((t.style || (t.style = {}), 'undefined' == typeof t.getContext)) throw a;
      return t;
    },
    _initOptions: function(t) {
      var e = this.lowerCanvasEl;
      this._setOptions(t),
        (this.width = this.width || parseInt(e.width, 10) || 0),
        (this.height = this.height || parseInt(e.height, 10) || 0),
        this.lowerCanvasEl.style &&
          ((e.width = this.width),
          (e.height = this.height),
          (e.style.width = this.width + 'px'),
          (e.style.height = this.height + 'px'),
          (this.viewportTransform = this.viewportTransform.slice()));
    },
    _createLowerCanvas: function(t) {
      (this.lowerCanvasEl = t && t.getContext ? t : fabric.util.getById(t) || this._createCanvasElement()),
        fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas'),
        this.interactive && this._applyCanvasStyle(this.lowerCanvasEl),
        (this.contextContainer = this.lowerCanvasEl.getContext('2d'));
    },
    getWidth: function() {
      return this.width;
    },
    getHeight: function() {
      return this.height;
    },
    setWidth: function(t, e) {
      return this.setDimensions({ width: t }, e);
    },
    setHeight: function(t, e) {
      return this.setDimensions({ height: t }, e);
    },
    setDimensions: function(t, e) {
      var i;
      e = e || {};
      for (var n in t)
        (i = t[n]),
          e.cssOnly || (this._setBackstoreDimension(n, t[n]), (i += 'px'), (this.hasLostContext = !0)),
          e.backstoreOnly || this._setCssDimension(n, i);
      return (
        this._isCurrentlyDrawing && this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles(),
        this._initRetinaScaling(),
        this._setImageSmoothing(),
        this.calcOffset(),
        e.cssOnly || this.requestRenderAll(),
        this
      );
    },
    _setBackstoreDimension: function(t, e) {
      return (
        (this.lowerCanvasEl[t] = e),
        this.upperCanvasEl && (this.upperCanvasEl[t] = e),
        this.cacheCanvasEl && (this.cacheCanvasEl[t] = e),
        (this[t] = e),
        this
      );
    },
    _setCssDimension: function(t, e) {
      return (
        (this.lowerCanvasEl.style[t] = e),
        this.upperCanvasEl && (this.upperCanvasEl.style[t] = e),
        this.wrapperEl && (this.wrapperEl.style[t] = e),
        this
      );
    },
    getZoom: function() {
      return this.viewportTransform[0];
    },
    setViewportTransform: function(t) {
      var e,
        i,
        n,
        r = this._activeObject,
        o = !1,
        s = !0;
      for (this.viewportTransform = t, i = 0, n = this._objects.length; n > i; i++)
        (e = this._objects[i]), e.group || e.setCoords(o, s);
      return (
        r && 'activeSelection' === r.type && r.setCoords(o, s),
        this.calcViewportBoundaries(),
        this.renderOnAddRemove && this.requestRenderAll(),
        this
      );
    },
    zoomToPoint: function(t, e) {
      var i = t,
        o = this.viewportTransform.slice(0);
      (t = n(t, r(this.viewportTransform))), (o[0] = e), (o[3] = e);
      var s = n(t, o);
      return (o[4] += i.x - s.x), (o[5] += i.y - s.y), this.setViewportTransform(o);
    },
    setZoom: function(t) {
      return this.zoomToPoint(new fabric.Point(0, 0), t), this;
    },
    absolutePan: function(t) {
      var e = this.viewportTransform.slice(0);
      return (e[4] = -t.x), (e[5] = -t.y), this.setViewportTransform(e);
    },
    relativePan: function(t) {
      return this.absolutePan(new fabric.Point(-t.x - this.viewportTransform[4], -t.y - this.viewportTransform[5]));
    },
    getElement: function() {
      return this.lowerCanvasEl;
    },
    _onObjectAdded: function(t) {
      this.stateful && t.setupState(),
        t._set('canvas', this),
        t.setCoords(),
        this.fire('object:added', { target: t }),
        t.fire('added');
    },
    _onObjectRemoved: function(t) {
      this.fire('object:removed', { target: t }), t.fire('removed'), delete t.canvas;
    },
    clearContext: function(t) {
      return t.clearRect(0, 0, this.width, this.height), this;
    },
    getContext: function() {
      return this.contextContainer;
    },
    clear: function() {
      return (
        (this._objects.length = 0),
        (this.backgroundImage = null),
        (this.overlayImage = null),
        (this.backgroundColor = ''),
        (this.overlayColor = ''),
        this._hasITextHandlers &&
          (this.off('mouse:up', this._mouseUpITextHandler),
          (this._iTextInstances = null),
          (this._hasITextHandlers = !1)),
        this.clearContext(this.contextContainer),
        this.fire('canvas:cleared'),
        this.renderOnAddRemove && this.requestRenderAll(),
        this
      );
    },
    renderAll: function() {
      var t = this.contextContainer;
      return this.renderCanvas(t, this._objects), this;
    },
    renderAndReset: function() {
      (this.isRendering = 0), this.renderAll();
    },
    requestRenderAll: function() {
      return this.isRendering || (this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound)), this;
    },
    calcViewportBoundaries: function() {
      var t = {},
        e = this.width,
        i = this.height,
        o = r(this.viewportTransform);
      return (
        (t.tl = n({ x: 0, y: 0 }, o)),
        (t.br = n({ x: e, y: i }, o)),
        (t.tr = new fabric.Point(t.br.x, t.tl.y)),
        (t.bl = new fabric.Point(t.tl.x, t.br.y)),
        (this.vptCoords = t),
        t
      );
    },
    cancelRequestedRender: function() {
      this.isRendering && (fabric.util.cancelAnimFrame(this.isRendering), (this.isRendering = 0));
    },
    renderCanvas: function(t, e) {
      var i = this.viewportTransform,
        n = this.clipPath;
      this.cancelRequestedRender(),
        this.calcViewportBoundaries(),
        this.clearContext(t),
        this.fire('before:render', { ctx: t }),
        this.clipTo && fabric.util.clipContext(this, t),
        this._renderBackground(t),
        t.save(),
        t.transform(i[0], i[1], i[2], i[3], i[4], i[5]),
        this._renderObjects(t, e),
        t.restore(),
        !this.controlsAboveOverlay && this.interactive && this.drawControls(t),
        this.clipTo && t.restore(),
        n &&
          ((n.canvas = this),
          n.shouldCache(),
          (n._transformDone = !0),
          n.renderCache({ forClipping: !0 }),
          this.drawClipPathOnCanvas(t)),
        this._renderOverlay(t),
        this.controlsAboveOverlay && this.interactive && this.drawControls(t),
        this.fire('after:render', { ctx: t });
    },
    drawClipPathOnCanvas: function(t) {
      var e = this.viewportTransform,
        i = this.clipPath;
      t.save(),
        t.transform(e[0], e[1], e[2], e[3], e[4], e[5]),
        (t.globalCompositeOperation = 'destination-in'),
        i.transform(t),
        t.scale(1 / i.zoomX, 1 / i.zoomY),
        t.drawImage(i._cacheCanvas, -i.cacheTranslationX, -i.cacheTranslationY),
        t.restore();
    },
    _renderObjects: function(t, e) {
      var i, n;
      for (i = 0, n = e.length; n > i; ++i) e[i] && e[i].render(t);
    },
    _renderBackgroundOrOverlay: function(t, e) {
      var i = this[e + 'Color'],
        n = this[e + 'Image'],
        r = this.viewportTransform,
        o = this[e + 'Vpt'];
      if (i || n) {
        if (i) {
          t.save(),
            t.beginPath(),
            t.moveTo(0, 0),
            t.lineTo(this.width, 0),
            t.lineTo(this.width, this.height),
            t.lineTo(0, this.height),
            t.closePath(),
            (t.fillStyle = i.toLive ? i.toLive(t, this) : i),
            o && t.transform(r[0], r[1], r[2], r[3], r[4] + (i.offsetX || 0), r[5] + (i.offsetY || 0));
          var s = i.gradientTransform || i.patternTransform;
          s && t.transform(s[0], s[1], s[2], s[3], s[4], s[5]), t.fill(), t.restore();
        }
        n && (t.save(), o && t.transform(r[0], r[1], r[2], r[3], r[4], r[5]), n.render(t), t.restore());
      }
    },
    _renderBackground: function(t) {
      this._renderBackgroundOrOverlay(t, 'background');
    },
    _renderOverlay: function(t) {
      this._renderBackgroundOrOverlay(t, 'overlay');
    },
    getCenter: function() {
      return { top: this.height / 2, left: this.width / 2 };
    },
    centerObjectH: function(t) {
      return this._centerObject(t, new fabric.Point(this.getCenter().left, t.getCenterPoint().y));
    },
    centerObjectV: function(t) {
      return this._centerObject(t, new fabric.Point(t.getCenterPoint().x, this.getCenter().top));
    },
    centerObject: function(t) {
      var e = this.getCenter();
      return this._centerObject(t, new fabric.Point(e.left, e.top));
    },
    viewportCenterObject: function(t) {
      var e = this.getVpCenter();
      return this._centerObject(t, e);
    },
    viewportCenterObjectH: function(t) {
      var e = this.getVpCenter();
      return this._centerObject(t, new fabric.Point(e.x, t.getCenterPoint().y)), this;
    },
    viewportCenterObjectV: function(t) {
      var e = this.getVpCenter();
      return this._centerObject(t, new fabric.Point(t.getCenterPoint().x, e.y));
    },
    getVpCenter: function() {
      var t = this.getCenter(),
        e = r(this.viewportTransform);
      return n({ x: t.left, y: t.top }, e);
    },
    _centerObject: function(t, e) {
      return (
        t.setPositionByOrigin(e, 'center', 'center'),
        t.setCoords(),
        this.renderOnAddRemove && this.requestRenderAll(),
        this
      );
    },
    toDatalessJSON: function(t) {
      return this.toDatalessObject(t);
    },
    toObject: function(t) {
      return this._toObjectMethod('toObject', t);
    },
    toDatalessObject: function(t) {
      return this._toObjectMethod('toDatalessObject', t);
    },
    _toObjectMethod: function(e, i) {
      var n = this.clipPath,
        r = { version: fabric.version, objects: this._toObjects(e, i) };
      return (
        n && (r.clipPath = this._toObject(this.clipPath, e, i)),
        t(r, this.__serializeBgOverlay(e, i)),
        fabric.util.populateWithProperties(this, r, i),
        r
      );
    },
    _toObjects: function(t, e) {
      return this._objects
        .filter(function(t) {
          return !t.excludeFromExport;
        })
        .map(function(i) {
          return this._toObject(i, t, e);
        }, this);
    },
    _toObject: function(t, e, i) {
      var n;
      this.includeDefaultValues || ((n = t.includeDefaultValues), (t.includeDefaultValues = !1));
      var r = t[e](i);
      return this.includeDefaultValues || (t.includeDefaultValues = n), r;
    },
    __serializeBgOverlay: function(t, e) {
      var i = {},
        n = this.backgroundImage,
        r = this.overlayImage;
      return (
        this.backgroundColor &&
          (i.background = this.backgroundColor.toObject ? this.backgroundColor.toObject(e) : this.backgroundColor),
        this.overlayColor &&
          (i.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(e) : this.overlayColor),
        n && !n.excludeFromExport && (i.backgroundImage = this._toObject(n, t, e)),
        r && !r.excludeFromExport && (i.overlayImage = this._toObject(r, t, e)),
        i
      );
    },
    sendToBack: function(t) {
      if (!t) return this;
      var e,
        n,
        r,
        o = this._activeObject;
      if (t === o && 'activeSelection' === t.type)
        for (r = o._objects, e = r.length; e--; ) (n = r[e]), i(this._objects, n), this._objects.unshift(n);
      else i(this._objects, t), this._objects.unshift(t);
      return this.renderOnAddRemove && this.requestRenderAll(), this;
    },
    bringToFront: function(t) {
      if (!t) return this;
      var e,
        n,
        r,
        o = this._activeObject;
      if (t === o && 'activeSelection' === t.type)
        for (r = o._objects, e = 0; e < r.length; e++) (n = r[e]), i(this._objects, n), this._objects.push(n);
      else i(this._objects, t), this._objects.push(t);
      return this.renderOnAddRemove && this.requestRenderAll(), this;
    },
    sendBackwards: function(t, e) {
      if (!t) return this;
      var n,
        r,
        o,
        s,
        a,
        c = this._activeObject,
        l = 0;
      if (t === c && 'activeSelection' === t.type)
        for (a = c._objects, n = 0; n < a.length; n++)
          (r = a[n]),
            (o = this._objects.indexOf(r)),
            o > 0 + l && ((s = o - 1), i(this._objects, r), this._objects.splice(s, 0, r)),
            l++;
      else
        (o = this._objects.indexOf(t)),
          0 !== o && ((s = this._findNewLowerIndex(t, o, e)), i(this._objects, t), this._objects.splice(s, 0, t));
      return this.renderOnAddRemove && this.requestRenderAll(), this;
    },
    _findNewLowerIndex: function(t, e, i) {
      var n, r;
      if (i)
        for (n = e, r = e - 1; r >= 0; --r) {
          var o =
            t.intersectsWithObject(this._objects[r]) ||
            t.isContainedWithinObject(this._objects[r]) ||
            this._objects[r].isContainedWithinObject(t);
          if (o) {
            n = r;
            break;
          }
        }
      else n = e - 1;
      return n;
    },
    bringForward: function(t, e) {
      if (!t) return this;
      var n,
        r,
        o,
        s,
        a,
        c = this._activeObject,
        l = 0;
      if (t === c && 'activeSelection' === t.type)
        for (a = c._objects, n = a.length; n--; )
          (r = a[n]),
            (o = this._objects.indexOf(r)),
            o < this._objects.length - 1 - l && ((s = o + 1), i(this._objects, r), this._objects.splice(s, 0, r)),
            l++;
      else
        (o = this._objects.indexOf(t)),
          o !== this._objects.length - 1 &&
            ((s = this._findNewUpperIndex(t, o, e)), i(this._objects, t), this._objects.splice(s, 0, t));
      return this.renderOnAddRemove && this.requestRenderAll(), this;
    },
    _findNewUpperIndex: function(t, e, i) {
      var n, r, o;
      if (i)
        for (n = e, r = e + 1, o = this._objects.length; o > r; ++r) {
          var s =
            t.intersectsWithObject(this._objects[r]) ||
            t.isContainedWithinObject(this._objects[r]) ||
            this._objects[r].isContainedWithinObject(t);
          if (s) {
            n = r;
            break;
          }
        }
      else n = e + 1;
      return n;
    },
    moveTo: function(t, e) {
      return i(this._objects, t), this._objects.splice(e, 0, t), this.renderOnAddRemove && this.requestRenderAll();
    },
    dispose: function() {
      return (
        this.isRendering && (fabric.util.cancelAnimFrame(this.isRendering), (this.isRendering = 0)),
        this.forEachObject(function(t) {
          t.dispose && t.dispose();
        }),
        (this._objects = []),
        this.backgroundImage && this.backgroundImage.dispose && this.backgroundImage.dispose(),
        (this.backgroundImage = null),
        this.overlayImage && this.overlayImage.dispose && this.overlayImage.dispose(),
        (this.overlayImage = null),
        (this._iTextInstances = null),
        (this.contextContainer = null),
        fabric.util.cleanUpJsdomNode(this.lowerCanvasEl),
        (this.lowerCanvasEl = void 0),
        this
      );
    },
    toString: function() {
      return '#<fabric.Canvas (' + this.complexity() + '): { objects: ' + this._objects.length + ' }>';
    }
  })),
    t(fabric.StaticCanvas.prototype, fabric.Observable),
    t(fabric.StaticCanvas.prototype, fabric.Collection),
    t(fabric.StaticCanvas.prototype, fabric.DataURLExporter),
    t(fabric.StaticCanvas, {
      EMPTY_JSON: '{"objects": [], "background": "white"}',
      supports: function(t) {
        var e = s();
        if (!e || !e.getContext) return null;
        var i = e.getContext('2d');
        if (!i) return null;
        switch (t) {
          case 'setLineDash':
            return 'undefined' != typeof i.setLineDash;
          default:
            return null;
        }
      }
    }),
    (fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject),
    fabric.isLikelyNode &&
      ((fabric.StaticCanvas.prototype.createPNGStream = function() {
        var t = o(this.lowerCanvasEl);
        return t && t.createPNGStream();
      }),
      (fabric.StaticCanvas.prototype.createJPEGStream = function(t) {
        var e = o(this.lowerCanvasEl);
        return e && e.createJPEGStream(t);
      }));
})();
!(function() {
  var t = fabric.util.getPointer,
    e = fabric.util.degreesToRadians,
    i = fabric.util.radiansToDegrees,
    n = Math.atan2,
    r = Math.abs,
    o = fabric.StaticCanvas.supports('setLineDash'),
    s = 0.5;
  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, {
    initialize: function(t, e) {
      e || (e = {}),
        (this.renderAndResetBound = this.renderAndReset.bind(this)),
        (this.requestRenderAllBound = this.requestRenderAll.bind(this)),
        this._initStatic(t, e),
        this._initInteractive(),
        this._createCacheCanvas();
    },
    uniScaleTransform: !1,
    uniScaleKey: 'shiftKey',
    centeredScaling: !1,
    centeredRotation: !1,
    centeredKey: 'altKey',
    altActionKey: 'shiftKey',
    interactive: !0,
    selection: !0,
    selectionKey: 'shiftKey',
    altSelectionKey: null,
    selectionColor: 'rgba(100, 100, 255, 0.3)',
    selectionDashArray: [],
    selectionBorderColor: 'rgba(255, 255, 255, 0.3)',
    selectionLineWidth: 1,
    selectionFullyContained: !1,
    hoverCursor: 'move',
    moveCursor: 'move',
    defaultCursor: 'default',
    freeDrawingCursor: 'crosshair',
    rotationCursor: 'crosshair',
    notAllowedCursor: 'not-allowed',
    containerClass: 'canvas-container',
    perPixelTargetFind: !1,
    targetFindTolerance: 0,
    skipTargetFind: !1,
    isDrawingMode: !1,
    preserveObjectStacking: !1,
    snapAngle: 0,
    snapThreshold: null,
    stopContextMenu: !1,
    fireRightClick: !1,
    fireMiddleClick: !1,
    _initInteractive: function() {
      (this._currentTransform = null),
        (this._groupSelector = null),
        this._initWrapperElement(),
        this._createUpperCanvas(),
        this._initEventListeners(),
        this._initRetinaScaling(),
        (this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this)),
        this.calcOffset();
    },
    _chooseObjectsToRender: function() {
      var t,
        e,
        i,
        n = this.getActiveObjects();
      if (n.length > 0 && !this.preserveObjectStacking) {
        (e = []), (i = []);
        for (var r = 0, o = this._objects.length; o > r; r++)
          (t = this._objects[r]), -1 === n.indexOf(t) ? e.push(t) : i.push(t);
        n.length > 1 && (this._activeObject._objects = i), e.push.apply(e, i);
      } else e = this._objects;
      return e;
    },
    renderAll: function() {
      !this.contextTopDirty ||
        this._groupSelector ||
        this.isDrawingMode ||
        (this.clearContext(this.contextTop), (this.contextTopDirty = !1)),
        this.hasLostContext && this.renderTopLayer(this.contextTop);
      var t = this.contextContainer;
      return this.renderCanvas(t, this._chooseObjectsToRender()), this;
    },
    renderTopLayer: function(t) {
      t.save(),
        this.isDrawingMode &&
          this._isCurrentlyDrawing &&
          (this.freeDrawingBrush && this.freeDrawingBrush._render(), (this.contextTopDirty = !0)),
        this.selection && this._groupSelector && (this._drawSelection(t), (this.contextTopDirty = !0)),
        t.restore();
    },
    renderTop: function() {
      var t = this.contextTop;
      return this.clearContext(t), this.renderTopLayer(t), this.fire('after:render'), this;
    },
    _resetCurrentTransform: function() {
      var t = this._currentTransform;
      t.target.set({
        scaleX: t.original.scaleX,
        scaleY: t.original.scaleY,
        skewX: t.original.skewX,
        skewY: t.original.skewY,
        left: t.original.left,
        top: t.original.top
      }),
        this._shouldCenterTransform(t.target)
          ? ('center' !== t.originX && (t.mouseXSign = 'right' === t.originX ? -1 : 1),
            'center' !== t.originY && (t.mouseYSign = 'bottom' === t.originY ? -1 : 1),
            (t.originX = 'center'),
            (t.originY = 'center'))
          : ((t.originX = t.original.originX), (t.originY = t.original.originY));
    },
    containsPoint: function(t, e, i) {
      var n,
        r = !0,
        o = i || this.getPointer(t, r);
      return (
        (n =
          e.group && e.group === this._activeObject && 'activeSelection' === e.group.type
            ? this._normalizePointer(e.group, o)
            : { x: o.x, y: o.y }),
        e.containsPoint(n) || e._findTargetCorner(o)
      );
    },
    _normalizePointer: function(t, e) {
      var i = t.calcTransformMatrix(),
        n = fabric.util.invertTransform(i),
        r = this.restorePointerVpt(e);
      return fabric.util.transformPoint(r, n);
    },
    isTargetTransparent: function(t, e, i) {
      if (t.shouldCache() && t._cacheCanvas && t !== this._activeObject) {
        var n = this._normalizePointer(t, { x: e, y: i }),
          r = Math.max(t.cacheTranslationX + n.x * t.zoomX, 0),
          o = Math.max(t.cacheTranslationY + n.y * t.zoomY, 0),
          s = fabric.util.isTransparent(t._cacheContext, Math.round(r), Math.round(o), this.targetFindTolerance);
        return s;
      }
      var a = this.contextCache,
        c = t.selectionBackgroundColor,
        l = this.viewportTransform;
      (t.selectionBackgroundColor = ''),
        this.clearContext(a),
        a.save(),
        a.transform(l[0], l[1], l[2], l[3], l[4], l[5]),
        t.render(a),
        a.restore(),
        t === this._activeObject &&
          t._renderControls(a, { hasBorders: !1, transparentCorners: !1 }, { hasBorders: !1 }),
        (t.selectionBackgroundColor = c);
      var s = fabric.util.isTransparent(a, e, i, this.targetFindTolerance);
      return s;
    },
    _isSelectionKeyPressed: function(t) {
      var e = !1;
      return (e =
        '[object Array]' === Object.prototype.toString.call(this.selectionKey)
          ? !!this.selectionKey.find(function(e) {
              return t[e] === !0;
            })
          : t[this.selectionKey]);
    },
    _shouldClearSelection: function(t, e) {
      var i = this.getActiveObjects(),
        n = this._activeObject;
      return (
        !e ||
        (e && n && i.length > 1 && -1 === i.indexOf(e) && n !== e && !this._isSelectionKeyPressed(t)) ||
        (e && !e.evented) ||
        (e && !e.selectable && n && n !== e)
      );
    },
    _shouldCenterTransform: function(t) {
      if (t) {
        var e,
          i = this._currentTransform;
        return (
          'scale' === i.action || 'scaleX' === i.action || 'scaleY' === i.action
            ? (e = this.centeredScaling || t.centeredScaling)
            : 'rotate' === i.action && (e = this.centeredRotation || t.centeredRotation),
          e ? !i.altKey : i.altKey
        );
      }
    },
    _getOriginFromCorner: function(t, e) {
      var i = { x: t.originX, y: t.originY };
      return (
        'ml' === e || 'tl' === e || 'bl' === e
          ? (i.x = 'right')
          : ('mr' === e || 'tr' === e || 'br' === e) && (i.x = 'left'),
        'tl' === e || 'mt' === e || 'tr' === e
          ? (i.y = 'bottom')
          : ('bl' === e || 'mb' === e || 'br' === e) && (i.y = 'top'),
        i
      );
    },
    _getActionFromCorner: function(t, e, i) {
      if (!e || !t) return 'drag';
      switch (e) {
        case 'mtr':
          return 'rotate';
        case 'ml':
        case 'mr':
          return i[this.altActionKey] ? 'skewY' : 'scaleX';
        case 'mt':
        case 'mb':
          return i[this.altActionKey] ? 'skewX' : 'scaleY';
        default:
          return 'scale';
      }
    },
    _setupCurrentTransform: function(t, i, n) {
      if (i) {
        var r = this.getPointer(t),
          o = i._findTargetCorner(this.getPointer(t, !0)),
          s = this._getActionFromCorner(n, o, t, i),
          a = this._getOriginFromCorner(i, o);
        (this._currentTransform = {
          target: i,
          action: s,
          corner: o,
          scaleX: i.scaleX,
          scaleY: i.scaleY,
          skewX: i.skewX,
          skewY: i.skewY,
          offsetX: r.x - i.left,
          offsetY: r.y - i.top,
          originX: a.x,
          originY: a.y,
          ex: r.x,
          ey: r.y,
          lastX: r.x,
          lastY: r.y,
          theta: e(i.angle),
          width: i.width * i.scaleX,
          mouseXSign: 1,
          mouseYSign: 1,
          shiftKey: t.shiftKey,
          altKey: t[this.centeredKey],
          original: fabric.util.saveObjectTransform(i)
        }),
          (this._currentTransform.original.originX = a.x),
          (this._currentTransform.original.originY = a.y),
          this._resetCurrentTransform(),
          this._beforeTransform(t);
      }
    },
    _translateObject: function(t, e) {
      var i = this._currentTransform,
        n = i.target,
        r = t - i.offsetX,
        o = e - i.offsetY,
        s = !n.get('lockMovementX') && n.left !== r,
        a = !n.get('lockMovementY') && n.top !== o;
      return s && n.set('left', r), a && n.set('top', o), s || a;
    },
    _changeSkewTransformOrigin: function(t, e, i) {
      var n = 'originX',
        r = { 0: 'center' },
        o = e.target.skewX,
        s = 'left',
        a = 'right',
        c = 'mt' === e.corner || 'ml' === e.corner ? 1 : -1,
        l = 1;
      (t = t > 0 ? 1 : -1),
        'y' === i && ((o = e.target.skewY), (s = 'top'), (a = 'bottom'), (n = 'originY')),
        (r[-1] = s),
        (r[1] = a),
        e.target.flipX && (l *= -1),
        e.target.flipY && (l *= -1),
        0 === o
          ? ((e.skewSign = -c * t * l), (e[n] = r[-t]))
          : ((o = o > 0 ? 1 : -1), (e.skewSign = o), (e[n] = r[o * c * l]));
    },
    _skewObject: function(t, e, i) {
      var n = this._currentTransform,
        r = n.target,
        o = !1,
        s = r.get('lockSkewingX'),
        a = r.get('lockSkewingY');
      if ((s && 'x' === i) || (a && 'y' === i)) return !1;
      var c,
        l,
        u = r.getCenterPoint(),
        h = r.toLocalPoint(new fabric.Point(t, e), 'center', 'center')[i],
        f = r.toLocalPoint(new fabric.Point(n.lastX, n.lastY), 'center', 'center')[i],
        d = r._getTransformedDimensions();
      return (
        this._changeSkewTransformOrigin(h - f, n, i),
        (c = r.toLocalPoint(new fabric.Point(t, e), n.originX, n.originY)[i]),
        (l = r.translateToOriginPoint(u, n.originX, n.originY)),
        (o = this._setObjectSkew(c, n, i, d)),
        (n.lastX = t),
        (n.lastY = e),
        r.setPositionByOrigin(l, n.originX, n.originY),
        o
      );
    },
    _setObjectSkew: function(t, e, i, n) {
      var r,
        o,
        s,
        a,
        c,
        l,
        u,
        h,
        f,
        d = e.target,
        g = !1,
        v = e.skewSign;
      return (
        'x' === i
          ? ((a = 'y'), (c = 'Y'), (l = 'X'), (h = 0), (f = d.skewY))
          : ((a = 'x'), (c = 'X'), (l = 'Y'), (h = d.skewX), (f = 0)),
        (s = d._getTransformedDimensions(h, f)),
        (u = 2 * Math.abs(t) - s[i]),
        2 >= u
          ? (r = 0)
          : ((r = v * Math.atan(u / d['scale' + l] / (s[a] / d['scale' + c]))), (r = fabric.util.radiansToDegrees(r))),
        (g = d['skew' + l] !== r),
        d.set('skew' + l, r),
        0 !== d['skew' + c] &&
          ((o = d._getTransformedDimensions()), (r = (n[a] / o[a]) * d['scale' + c]), d.set('scale' + c, r)),
        g
      );
    },
    _scaleObject: function(t, e, i) {
      var n = this._currentTransform,
        r = n.target,
        o = r.lockScalingX,
        s = r.lockScalingY,
        a = r.lockScalingFlip;
      if (o && s) return !1;
      var c = r.translateToOriginPoint(r.getCenterPoint(), n.originX, n.originY),
        l = r.toLocalPoint(new fabric.Point(t, e), n.originX, n.originY),
        u = r._getTransformedDimensions(),
        h = !1;
      return (
        this._setLocalMouse(l, n),
        (h = this._setObjectScale(l, n, o, s, i, a, u)),
        r.setPositionByOrigin(c, n.originX, n.originY),
        h
      );
    },
    _setObjectScale: function(t, e, i, n, r, o, s) {
      var a = e.target,
        c = !1,
        l = !1,
        u = !1,
        h = (t.x * a.scaleX) / s.x,
        f = (t.y * a.scaleY) / s.y,
        d = a.scaleX !== h,
        g = a.scaleY !== f;
      if (((e.newScaleX = h), (e.newScaleY = f), 'x' === r && a instanceof fabric.Textbox)) {
        var v = a.width * (t.x / s.x);
        return v >= a.getMinWidth() ? ((u = v !== a.width), a.set('width', v), u) : !1;
      }
      return (
        o && 0 >= h && h < a.scaleX && ((c = !0), (t.x = 0)),
        o && 0 >= f && f < a.scaleY && ((l = !0), (t.y = 0)),
        'equally' !== r || i || n
          ? r
            ? 'x' !== r || a.get('lockUniScaling')
              ? 'y' !== r || a.get('lockUniScaling') || l || n || (a.set('scaleY', f) && (u = g))
              : c || i || (a.set('scaleX', h) && (u = d))
            : (c || i || (a.set('scaleX', h) && (u = u || d)), l || n || (a.set('scaleY', f) && (u = u || g)))
          : (u = this._scaleObjectEqually(t, a, e, s)),
        c || l || this._flipObject(e, r),
        u
      );
    },
    _scaleObjectEqually: function(t, e, i, n) {
      var r,
        o,
        s,
        a = t.y + t.x,
        c = (n.y * i.original.scaleY) / e.scaleY + (n.x * i.original.scaleX) / e.scaleX,
        l = t.x < 0 ? -1 : 1,
        u = t.y < 0 ? -1 : 1;
      return (
        (o = l * Math.abs((i.original.scaleX * a) / c)),
        (s = u * Math.abs((i.original.scaleY * a) / c)),
        (r = o !== e.scaleX || s !== e.scaleY),
        e.set('scaleX', o),
        e.set('scaleY', s),
        r
      );
    },
    _flipObject: function(t, e) {
      t.newScaleX < 0 &&
        'y' !== e &&
        ('left' === t.originX ? (t.originX = 'right') : 'right' === t.originX && (t.originX = 'left')),
        t.newScaleY < 0 &&
          'x' !== e &&
          ('top' === t.originY ? (t.originY = 'bottom') : 'bottom' === t.originY && (t.originY = 'top'));
    },
    _setLocalMouse: function(t, e) {
      var i = e.target,
        n = this.getZoom(),
        o = i.padding / n;
      'right' === e.originX
        ? (t.x *= -1)
        : 'center' === e.originX && ((t.x *= 2 * e.mouseXSign), t.x < 0 && (e.mouseXSign = -e.mouseXSign)),
        'bottom' === e.originY
          ? (t.y *= -1)
          : 'center' === e.originY && ((t.y *= 2 * e.mouseYSign), t.y < 0 && (e.mouseYSign = -e.mouseYSign)),
        r(t.x) > o ? (t.x < 0 ? (t.x += o) : (t.x -= o)) : (t.x = 0),
        r(t.y) > o ? (t.y < 0 ? (t.y += o) : (t.y -= o)) : (t.y = 0);
    },
    _rotateObject: function(t, e) {
      var r,
        o = this._currentTransform,
        s = o.target,
        r = s.translateToOriginPoint(s.getCenterPoint(), o.originX, o.originY);
      if (s.lockRotation) return !1;
      var a = n(o.ey - r.y, o.ex - r.x),
        c = n(e - r.y, t - r.x),
        l = i(c - a + o.theta),
        u = !0;
      if (s.snapAngle > 0) {
        var h = s.snapAngle,
          f = s.snapThreshold || h,
          d = Math.ceil(l / h) * h,
          g = Math.floor(l / h) * h;
        Math.abs(l - g) < f ? (l = g) : Math.abs(l - d) < f && (l = d);
      }
      return (
        0 > l && (l = 360 + l),
        (l %= 360),
        s.angle === l ? (u = !1) : ((s.angle = l), s.setPositionByOrigin(r, o.originX, o.originY)),
        u
      );
    },
    setCursor: function(t) {
      this.upperCanvasEl.style.cursor = t;
    },
    _drawSelection: function(t) {
      var e = this._groupSelector,
        i = e.left,
        n = e.top,
        a = r(i),
        c = r(n);
      if (
        (this.selectionColor &&
          ((t.fillStyle = this.selectionColor), t.fillRect(e.ex - (i > 0 ? 0 : -i), e.ey - (n > 0 ? 0 : -n), a, c)),
        this.selectionLineWidth && this.selectionBorderColor)
      )
        if (
          ((t.lineWidth = this.selectionLineWidth),
          (t.strokeStyle = this.selectionBorderColor),
          this.selectionDashArray.length > 1 && !o)
        ) {
          var l = e.ex + s - (i > 0 ? 0 : a),
            u = e.ey + s - (n > 0 ? 0 : c);
          t.beginPath(),
            fabric.util.drawDashedLine(t, l, u, l + a, u, this.selectionDashArray),
            fabric.util.drawDashedLine(t, l, u + c - 1, l + a, u + c - 1, this.selectionDashArray),
            fabric.util.drawDashedLine(t, l, u, l, u + c, this.selectionDashArray),
            fabric.util.drawDashedLine(t, l + a - 1, u, l + a - 1, u + c, this.selectionDashArray),
            t.closePath(),
            t.stroke();
        } else
          fabric.Object.prototype._setLineDash.call(this, t, this.selectionDashArray),
            t.strokeRect(e.ex + s - (i > 0 ? 0 : a), e.ey + s - (n > 0 ? 0 : c), a, c);
    },
    findTarget: function(t, e) {
      if (!this.skipTargetFind) {
        var i,
          n,
          r = !0,
          o = this.getPointer(t, r),
          s = this._activeObject,
          a = this.getActiveObjects();
        if (((this.targets = []), a.length > 1 && !e && s === this._searchPossibleTargets([s], o))) return s;
        if (1 === a.length && s._findTargetCorner(o)) return s;
        if (1 === a.length && s === this._searchPossibleTargets([s], o)) {
          if (!this.preserveObjectStacking) return s;
          (i = s), (n = this.targets), (this.targets = []);
        }
        var c = this._searchPossibleTargets(this._objects, o);
        return t[this.altSelectionKey] && c && i && c !== i && ((c = i), (this.targets = n)), c;
      }
    },
    _checkTarget: function(t, e, i) {
      if (e && e.visible && e.evented && this.containsPoint(null, e, t)) {
        if ((!this.perPixelTargetFind && !e.perPixelTargetFind) || e.isEditing) return !0;
        var n = this.isTargetTransparent(e, i.x, i.y);
        if (!n) return !0;
      }
    },
    _searchPossibleTargets: function(t, e) {
      for (var i, n, r = t.length; r--; ) {
        var o = t[r],
          s = o.group && 'activeSelection' !== o.group.type ? this._normalizePointer(o.group, e) : e;
        if (this._checkTarget(s, o, e)) {
          (i = t[r]),
            i.subTargetCheck &&
              i instanceof fabric.Group &&
              ((n = this._searchPossibleTargets(i._objects, e)), n && this.targets.push(n));
          break;
        }
      }
      return i;
    },
    restorePointerVpt: function(t) {
      return fabric.util.transformPoint(t, fabric.util.invertTransform(this.viewportTransform));
    },
    getPointer: function(e, i) {
      if (this._absolutePointer && !i) return this._absolutePointer;
      if (this._pointer && i) return this._pointer;
      var n,
        r = t(e),
        o = this.upperCanvasEl,
        s = o.getBoundingClientRect(),
        a = s.width || 0,
        c = s.height || 0;
      return (
        (a && c) ||
          ('top' in s && 'bottom' in s && (c = Math.abs(s.top - s.bottom)),
          'right' in s && 'left' in s && (a = Math.abs(s.right - s.left))),
        this.calcOffset(),
        (r.x = r.x - this._offset.left),
        (r.y = r.y - this._offset.top),
        i || (r = this.restorePointerVpt(r)),
        (n = 0 === a || 0 === c ? { width: 1, height: 1 } : { width: o.width / a, height: o.height / c }),
        { x: r.x * n.width, y: r.y * n.height }
      );
    },
    _createUpperCanvas: function() {
      var t = this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/, '');
      this.upperCanvasEl ? (this.upperCanvasEl.className = '') : (this.upperCanvasEl = this._createCanvasElement()),
        fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + t),
        this.wrapperEl.appendChild(this.upperCanvasEl),
        this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl),
        this._applyCanvasStyle(this.upperCanvasEl),
        (this.contextTop = this.upperCanvasEl.getContext('2d'));
    },
    _createCacheCanvas: function() {
      (this.cacheCanvasEl = this._createCanvasElement()),
        this.cacheCanvasEl.setAttribute('width', this.width),
        this.cacheCanvasEl.setAttribute('height', this.height),
        (this.contextCache = this.cacheCanvasEl.getContext('2d'));
    },
    _initWrapperElement: function() {
      (this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', { class: this.containerClass })),
        fabric.util.setStyle(this.wrapperEl, {
          width: this.width + 'px',
          height: this.height + 'px',
          position: 'relative'
        }),
        fabric.util.makeElementUnselectable(this.wrapperEl);
    },
    _applyCanvasStyle: function(t) {
      var e = this.width || t.width,
        i = this.height || t.height;
      fabric.util.setStyle(t, {
        position: 'absolute',
        width: e + 'px',
        height: i + 'px',
        left: 0,
        top: 0,
        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none',
        '-ms-touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'
      }),
        (t.width = e),
        (t.height = i),
        fabric.util.makeElementUnselectable(t);
    },
    _copyCanvasStyle: function(t, e) {
      e.style.cssText = t.style.cssText;
    },
    getSelectionContext: function() {
      return this.contextTop;
    },
    getSelectionElement: function() {
      return this.upperCanvasEl;
    },
    getActiveObject: function() {
      return this._activeObject;
    },
    getActiveObjects: function() {
      var t = this._activeObject;
      return t ? ('activeSelection' === t.type && t._objects ? t._objects.slice(0) : [t]) : [];
    },
    _onObjectRemoved: function(t) {
      t === this._activeObject &&
        (this.fire('before:selection:cleared', { target: t }),
        this._discardActiveObject(),
        this.fire('selection:cleared', { target: t }),
        t.fire('deselected')),
        this._hoveredTarget === t && (this._hoveredTarget = null),
        this.callSuper('_onObjectRemoved', t);
    },
    _fireSelectionEvents: function(t, e) {
      var i = !1,
        n = this.getActiveObjects(),
        r = [],
        o = [],
        s = { e: e };
      t.forEach(function(t) {
        -1 === n.indexOf(t) && ((i = !0), t.fire('deselected', s), o.push(t));
      }),
        n.forEach(function(e) {
          -1 === t.indexOf(e) && ((i = !0), e.fire('selected', s), r.push(e));
        }),
        t.length > 0 && n.length > 0
          ? ((s.selected = r),
            (s.deselected = o),
            (s.updated = r[0] || o[0]),
            (s.target = this._activeObject),
            i && this.fire('selection:updated', s))
          : n.length > 0
          ? (1 === n.length && ((s.target = r[0]), this.fire('object:selected', s)),
            (s.selected = r),
            (s.target = this._activeObject),
            this.fire('selection:created', s))
          : t.length > 0 && ((s.deselected = o), this.fire('selection:cleared', s));
    },
    setActiveObject: function(t, e) {
      var i = this.getActiveObjects();
      return this._setActiveObject(t, e), this._fireSelectionEvents(i, e), this;
    },
    _setActiveObject: function(t, e) {
      return this._activeObject === t
        ? !1
        : this._discardActiveObject(e, t)
        ? t.onSelect({ e: e })
          ? !1
          : ((this._activeObject = t), !0)
        : !1;
    },
    _discardActiveObject: function(t, e) {
      var i = this._activeObject;
      if (i) {
        if (i.onDeselect({ e: t, object: e })) return !1;
        this._activeObject = null;
      }
      return !0;
    },
    discardActiveObject: function(t) {
      var e = this.getActiveObjects(),
        i = this.getActiveObject();
      return (
        e.length && this.fire('before:selection:cleared', { target: i, e: t }),
        this._discardActiveObject(t),
        this._fireSelectionEvents(e, t),
        this
      );
    },
    dispose: function() {
      var t = this.wrapperEl;
      return (
        this.removeListeners(),
        t.removeChild(this.upperCanvasEl),
        t.removeChild(this.lowerCanvasEl),
        (this.contextCache = null),
        (this.contextTop = null),
        ['upperCanvasEl', 'cacheCanvasEl'].forEach(
          function(t) {
            fabric.util.cleanUpJsdomNode(this[t]), (this[t] = void 0);
          }.bind(this)
        ),
        t.parentNode && t.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl),
        delete this.wrapperEl,
        fabric.StaticCanvas.prototype.dispose.call(this),
        this
      );
    },
    clear: function() {
      return this.discardActiveObject(), this.clearContext(this.contextTop), this.callSuper('clear');
    },
    drawControls: function(t) {
      var e = this._activeObject;
      e && e._renderControls(t);
    },
    _toObject: function(t, e, i) {
      var n = this._realizeGroupTransformOnObject(t),
        r = this.callSuper('_toObject', t, e, i);
      return this._unwindGroupTransformOnObject(t, n), r;
    },
    _realizeGroupTransformOnObject: function(t) {
      if (t.group && 'activeSelection' === t.group.type && this._activeObject === t.group) {
        var e = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'],
          i = {};
        return (
          e.forEach(function(e) {
            i[e] = t[e];
          }),
          this._activeObject.realizeTransform(t),
          i
        );
      }
      return null;
    },
    _unwindGroupTransformOnObject: function(t, e) {
      e && t.set(e);
    },
    _setSVGObject: function(t, e, i) {
      var n = this._realizeGroupTransformOnObject(e);
      this.callSuper('_setSVGObject', t, e, i), this._unwindGroupTransformOnObject(e, n);
    },
    setViewportTransform: function(t) {
      this.renderOnAddRemove &&
        this._activeObject &&
        this._activeObject.isEditing &&
        this._activeObject.clearContextTop(),
        fabric.StaticCanvas.prototype.setViewportTransform.call(this, t);
    }
  });
  for (var a in fabric.StaticCanvas) 'prototype' !== a && (fabric.Canvas[a] = fabric.StaticCanvas[a]);
})();
!(function() {
  function t(t, e) {
    return t.button && t.button === e - 1;
  }
  var e = { mt: 0, tr: 1, mr: 2, br: 3, mb: 4, bl: 5, ml: 6, tl: 7 },
    i = fabric.util.addListener,
    n = fabric.util.removeListener,
    r = 3,
    o = 2,
    s = 1,
    a = { passive: !1 };
  fabric.util.object.extend(fabric.Canvas.prototype, {
    cursorMap: ['n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize', 'nw-resize'],
    mainTouchId: null,
    _initEventListeners: function() {
      this.removeListeners(), this._bindEvents(), this.addOrRemove(i, 'add');
    },
    _getEventPrefix: function() {
      return this.enablePointerEvents ? 'pointer' : 'mouse';
    },
    addOrRemove: function(t, e) {
      var i = this.upperCanvasEl,
        n = this._getEventPrefix();
      t(fabric.window, 'resize', this._onResize),
        t(i, n + 'down', this._onMouseDown),
        t(i, n + 'move', this._onMouseMove, a),
        t(i, n + 'out', this._onMouseOut),
        t(i, n + 'enter', this._onMouseEnter),
        t(i, 'wheel', this._onMouseWheel),
        t(i, 'contextmenu', this._onContextMenu),
        t(i, 'dblclick', this._onDoubleClick),
        t(i, 'dragover', this._onDragOver),
        t(i, 'dragenter', this._onDragEnter),
        t(i, 'dragleave', this._onDragLeave),
        t(i, 'drop', this._onDrop),
        this.enablePointerEvents || t(i, 'touchstart', this._onTouchStart, a),
        'undefined' != typeof eventjs &&
          e in eventjs &&
          (eventjs[e](i, 'gesture', this._onGesture),
          eventjs[e](i, 'drag', this._onDrag),
          eventjs[e](i, 'orientation', this._onOrientationChange),
          eventjs[e](i, 'shake', this._onShake),
          eventjs[e](i, 'longpress', this._onLongPress));
    },
    removeListeners: function() {
      this.addOrRemove(n, 'remove');
      var t = this._getEventPrefix();
      n(fabric.document, t + 'up', this._onMouseUp),
        n(fabric.document, 'touchend', this._onTouchEnd, a),
        n(fabric.document, t + 'move', this._onMouseMove, a),
        n(fabric.document, 'touchmove', this._onMouseMove, a);
    },
    _bindEvents: function() {
      this.eventsBound ||
        ((this._onMouseDown = this._onMouseDown.bind(this)),
        (this._onTouchStart = this._onTouchStart.bind(this)),
        (this._onMouseMove = this._onMouseMove.bind(this)),
        (this._onMouseUp = this._onMouseUp.bind(this)),
        (this._onTouchEnd = this._onTouchEnd.bind(this)),
        (this._onResize = this._onResize.bind(this)),
        (this._onGesture = this._onGesture.bind(this)),
        (this._onDrag = this._onDrag.bind(this)),
        (this._onShake = this._onShake.bind(this)),
        (this._onLongPress = this._onLongPress.bind(this)),
        (this._onOrientationChange = this._onOrientationChange.bind(this)),
        (this._onMouseWheel = this._onMouseWheel.bind(this)),
        (this._onMouseOut = this._onMouseOut.bind(this)),
        (this._onMouseEnter = this._onMouseEnter.bind(this)),
        (this._onContextMenu = this._onContextMenu.bind(this)),
        (this._onDoubleClick = this._onDoubleClick.bind(this)),
        (this._onDragOver = this._onDragOver.bind(this)),
        (this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter')),
        (this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave')),
        (this._onDrop = this._simpleEventHandler.bind(this, 'drop')),
        (this.eventsBound = !0));
    },
    _onGesture: function(t, e) {
      this.__onTransformGesture && this.__onTransformGesture(t, e);
    },
    _onDrag: function(t, e) {
      this.__onDrag && this.__onDrag(t, e);
    },
    _onMouseWheel: function(t) {
      this.__onMouseWheel(t);
    },
    _onMouseOut: function(t) {
      var e = this._hoveredTarget;
      this.fire('mouse:out', { target: e, e: t }),
        (this._hoveredTarget = null),
        e && e.fire('mouseout', { e: t }),
        this._iTextInstances &&
          this._iTextInstances.forEach(function(t) {
            t.isEditing && t.hiddenTextarea.focus();
          });
    },
    _onMouseEnter: function(t) {
      this.currentTransform ||
        this.findTarget(t) ||
        (this.fire('mouse:over', { target: null, e: t }), (this._hoveredTarget = null));
    },
    _onOrientationChange: function(t, e) {
      this.__onOrientationChange && this.__onOrientationChange(t, e);
    },
    _onShake: function(t, e) {
      this.__onShake && this.__onShake(t, e);
    },
    _onLongPress: function(t, e) {
      this.__onLongPress && this.__onLongPress(t, e);
    },
    _onDragOver: function(t) {
      t.preventDefault();
      var e = this._simpleEventHandler('dragover', t);
      this._fireEnterLeaveEvents(e, t);
    },
    _onContextMenu: function(t) {
      return this.stopContextMenu && (t.stopPropagation(), t.preventDefault()), !1;
    },
    _onDoubleClick: function(t) {
      this._cacheTransformEventData(t), this._handleEvent(t, 'dblclick'), this._resetTransformEventData(t);
    },
    getPointerId: function(t) {
      var e = t.changedTouches;
      return e ? e[0] && e[0].identifier : this.enablePointerEvents ? t.pointerId : -1;
    },
    _isMainEvent: function(t) {
      return t.isPrimary === !0
        ? !0
        : t.isPrimary === !1
        ? !1
        : 'touchend' === t.type && 0 === t.touches.length
        ? !0
        : t.changedTouches
        ? t.changedTouches[0].identifier === this.mainTouchId
        : !0;
    },
    _onTouchStart: function(t) {
      t.preventDefault(),
        null === this.mainTouchId && (this.mainTouchId = this.getPointerId(t)),
        this.__onMouseDown(t),
        this._resetTransformEventData();
      var e = this.upperCanvasEl,
        r = this._getEventPrefix();
      i(fabric.document, 'touchend', this._onTouchEnd, a),
        i(fabric.document, 'touchmove', this._onMouseMove, a),
        n(e, r + 'down', this._onMouseDown);
    },
    _onMouseDown: function(t) {
      this.__onMouseDown(t), this._resetTransformEventData();
      var e = this.upperCanvasEl,
        r = this._getEventPrefix();
      n(e, r + 'move', this._onMouseMove, a),
        i(fabric.document, r + 'up', this._onMouseUp),
        i(fabric.document, r + 'move', this._onMouseMove, a);
    },
    _onTouchEnd: function(t) {
      if (!(t.touches.length > 0)) {
        this.__onMouseUp(t), this._resetTransformEventData(), (this.mainTouchId = null);
        var e = this._getEventPrefix();
        n(fabric.document, 'touchend', this._onTouchEnd, a), n(fabric.document, 'touchmove', this._onMouseMove, a);
        var r = this;
        this._willAddMouseDown && clearTimeout(this._willAddMouseDown),
          (this._willAddMouseDown = setTimeout(function() {
            i(r.upperCanvasEl, e + 'down', r._onMouseDown), (r._willAddMouseDown = 0);
          }, 400));
      }
    },
    _onMouseUp: function(t) {
      this.__onMouseUp(t), this._resetTransformEventData();
      var e = this.upperCanvasEl,
        r = this._getEventPrefix();
      this._isMainEvent(t) &&
        (n(fabric.document, r + 'up', this._onMouseUp),
        n(fabric.document, r + 'move', this._onMouseMove, a),
        i(e, r + 'move', this._onMouseMove, a));
    },
    _onMouseMove: function(t) {
      !this.allowTouchScrolling && t.preventDefault && t.preventDefault(), this.__onMouseMove(t);
    },
    _onResize: function() {
      this.calcOffset();
    },
    _shouldRender: function(t) {
      var e = this._activeObject;
      return !!e != !!t || (e && t && e !== t) ? !0 : e && e.isEditing ? !1 : !1;
    },
    __onMouseUp: function(e) {
      var i,
        n = this._currentTransform,
        a = this._groupSelector,
        c = !1,
        l = !a || (0 === a.left && 0 === a.top);
      return (
        this._cacheTransformEventData(e),
        (i = this._target),
        this._handleEvent(e, 'up:before'),
        t(e, r)
          ? void (this.fireRightClick && this._handleEvent(e, 'up', r, l))
          : t(e, o)
          ? (this.fireMiddleClick && this._handleEvent(e, 'up', o, l), void this._resetTransformEventData())
          : this.isDrawingMode && this._isCurrentlyDrawing
          ? void this._onMouseUpInDrawingMode(e)
          : void (
              this._isMainEvent(e) &&
              (n && (this._finalizeCurrentTransform(e), (c = n.actionPerformed)),
              l || (this._maybeGroupObjects(e), c || (c = this._shouldRender(i))),
              i && (i.isMoving = !1),
              this._setCursorFromEvent(e, i),
              this._handleEvent(e, 'up', s, l),
              (this._groupSelector = null),
              (this._currentTransform = null),
              i && (i.__corner = 0),
              c ? this.requestRenderAll() : l || this.renderTop())
            )
      );
    },
    _simpleEventHandler: function(t, e) {
      var i = this.findTarget(e),
        n = this.targets,
        r = { e: e, target: i, subTargets: n };
      if ((this.fire(t, r), i && i.fire(t, r), !n)) return i;
      for (var o = 0; o < n.length; o++) n[o].fire(t, r);
      return i;
    },
    _handleEvent: function(t, e, i, n) {
      var r = this._target,
        o = this.targets || [],
        a = {
          e: t,
          target: r,
          subTargets: o,
          button: i || s,
          isClick: n || !1,
          pointer: this._pointer,
          absolutePointer: this._absolutePointer,
          transform: this._currentTransform
        };
      this.fire('mouse:' + e, a), r && r.fire('mouse' + e, a);
      for (var c = 0; c < o.length; c++) o[c].fire('mouse' + e, a);
    },
    _finalizeCurrentTransform: function(t) {
      var e,
        i = this._currentTransform,
        n = i.target,
        r = { e: t, target: n, transform: i };
      n._scaling && (n._scaling = !1),
        n.setCoords(),
        (i.actionPerformed || (this.stateful && n.hasStateChanged())) &&
          (i.actionPerformed && ((e = this._addEventOptions(r, i)), this._fire(e, r)), this._fire('modified', r));
    },
    _addEventOptions: function(t, e) {
      var i, n;
      switch (e.action) {
        case 'scaleX':
          (i = 'scaled'), (n = 'x');
          break;
        case 'scaleY':
          (i = 'scaled'), (n = 'y');
          break;
        case 'skewX':
          (i = 'skewed'), (n = 'x');
          break;
        case 'skewY':
          (i = 'skewed'), (n = 'y');
          break;
        case 'scale':
          (i = 'scaled'), (n = 'equally');
          break;
        case 'rotate':
          i = 'rotated';
          break;
        case 'drag':
          i = 'moved';
      }
      return (t.by = n), i;
    },
    _onMouseDownInDrawingMode: function(t) {
      (this._isCurrentlyDrawing = !0),
        this.getActiveObject() && this.discardActiveObject(t).requestRenderAll(),
        this.clipTo && fabric.util.clipContext(this, this.contextTop);
      var e = this.getPointer(t);
      this.freeDrawingBrush.onMouseDown(e, { e: t, pointer: e }), this._handleEvent(t, 'down');
    },
    _onMouseMoveInDrawingMode: function(t) {
      if (this._isCurrentlyDrawing) {
        var e = this.getPointer(t);
        this.freeDrawingBrush.onMouseMove(e, { e: t, pointer: e });
      }
      this.setCursor(this.freeDrawingCursor), this._handleEvent(t, 'move');
    },
    _onMouseUpInDrawingMode: function(t) {
      this.clipTo && this.contextTop.restore();
      var e = this.getPointer(t);
      (this._isCurrentlyDrawing = this.freeDrawingBrush.onMouseUp({ e: t, pointer: e })), this._handleEvent(t, 'up');
    },
    __onMouseDown: function(e) {
      this._cacheTransformEventData(e), this._handleEvent(e, 'down:before');
      var i = this._target;
      if (t(e, r)) return void (this.fireRightClick && this._handleEvent(e, 'down', r));
      if (t(e, o)) return void (this.fireMiddleClick && this._handleEvent(e, 'down', o));
      if (this.isDrawingMode) return void this._onMouseDownInDrawingMode(e);
      if (this._isMainEvent(e) && !this._currentTransform) {
        var n = this._pointer;
        this._previousPointer = n;
        var s = this._shouldRender(i),
          a = this._shouldGroup(e, i);
        if (
          (this._shouldClearSelection(e, i)
            ? this.discardActiveObject(e)
            : a && (this._handleGrouping(e, i), (i = this._activeObject)),
          !this.selection ||
            (i && (i.selectable || i.isEditing || i === this._activeObject)) ||
            (this._groupSelector = { ex: n.x, ey: n.y, top: 0, left: 0 }),
          i)
        ) {
          var c = i === this._activeObject;
          i.selectable && this.setActiveObject(i, e),
            i !== this._activeObject || (!i.__corner && a) || this._setupCurrentTransform(e, i, c);
        }
        this._handleEvent(e, 'down'), (s || a) && this.requestRenderAll();
      }
    },
    _resetTransformEventData: function() {
      (this._target = null), (this._pointer = null), (this._absolutePointer = null);
    },
    _cacheTransformEventData: function(t) {
      this._resetTransformEventData(),
        (this._pointer = this.getPointer(t, !0)),
        (this._absolutePointer = this.restorePointerVpt(this._pointer)),
        (this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(t) || null);
    },
    _beforeTransform: function(t) {
      var e = this._currentTransform;
      this.stateful && e.target.saveState(),
        this.fire('before:transform', { e: t, transform: e }),
        e.corner && this.onBeforeScaleRotate(e.target);
    },
    __onMouseMove: function(t) {
      this._handleEvent(t, 'move:before'), this._cacheTransformEventData(t);
      var e, i;
      if (this.isDrawingMode) return void this._onMouseMoveInDrawingMode(t);
      if (this._isMainEvent(t)) {
        var n = this._groupSelector;
        n
          ? ((i = this._pointer), (n.left = i.x - n.ex), (n.top = i.y - n.ey), this.renderTop())
          : this._currentTransform
          ? this._transformObject(t)
          : ((e = this.findTarget(t) || null), this._setCursorFromEvent(t, e), this._fireOverOutEvents(e, t)),
          this._handleEvent(t, 'move'),
          this._resetTransformEventData();
      }
    },
    _fireOverOutEvents: function(t, e) {
      this.fireSyntheticInOutEvents(t, e, {
        targetName: '_hoveredTarget',
        canvasEvtOut: 'mouse:out',
        evtOut: 'mouseout',
        canvasEvtIn: 'mouse:over',
        evtIn: 'mouseover'
      });
    },
    _fireEnterLeaveEvents: function(t, e) {
      this.fireSyntheticInOutEvents(t, e, {
        targetName: '_draggedoverTarget',
        evtOut: 'dragleave',
        evtIn: 'dragenter'
      });
    },
    fireSyntheticInOutEvents: function(t, e, i) {
      var n,
        r,
        o,
        s,
        a = this[i.targetName],
        c = a !== t,
        l = i.canvasEvtIn,
        h = i.canvasEvtOut;
      c &&
        ((n = { e: e, target: t, previousTarget: a }),
        (r = { e: e, target: a, nextTarget: t }),
        (this[i.targetName] = t)),
        (s = t && c),
        (o = a && c),
        o && (h && this.fire(h, r), a.fire(i.evtOut, r)),
        s && (l && this.fire(l, n), t.fire(i.evtIn, n));
    },
    __onMouseWheel: function(t) {
      this._cacheTransformEventData(t), this._handleEvent(t, 'wheel'), this._resetTransformEventData();
    },
    _transformObject: function(t) {
      var e = this.getPointer(t),
        i = this._currentTransform;
      (i.reset = !1),
        (i.target.isMoving = !0),
        (i.shiftKey = t.shiftKey),
        (i.altKey = t[this.centeredKey]),
        this._beforeScaleTransform(t, i),
        this._performTransformAction(t, i, e),
        i.actionPerformed && this.requestRenderAll();
    },
    _performTransformAction: function(t, e, i) {
      var n = i.x,
        r = i.y,
        o = e.action,
        s = !1,
        a = { target: e.target, e: t, transform: e, pointer: i };
      'rotate' === o
        ? (s = this._rotateObject(n, r)) && this._fire('rotating', a)
        : 'scale' === o
        ? (s = this._onScale(t, e, n, r)) && this._fire('scaling', a)
        : 'scaleX' === o
        ? (s = this._scaleObject(n, r, 'x')) && this._fire('scaling', a)
        : 'scaleY' === o
        ? (s = this._scaleObject(n, r, 'y')) && this._fire('scaling', a)
        : 'skewX' === o
        ? (s = this._skewObject(n, r, 'x')) && this._fire('skewing', a)
        : 'skewY' === o
        ? (s = this._skewObject(n, r, 'y')) && this._fire('skewing', a)
        : ((s = this._translateObject(n, r)),
          s && (this._fire('moving', a), this.setCursor(a.target.moveCursor || this.moveCursor))),
        (e.actionPerformed = e.actionPerformed || s);
    },
    _fire: function(t, e) {
      this.fire('object:' + t, e), e.target.fire(t, e);
    },
    _beforeScaleTransform: function(t, e) {
      if ('scale' === e.action || 'scaleX' === e.action || 'scaleY' === e.action) {
        var i = this._shouldCenterTransform(e.target);
        ((i && ('center' !== e.originX || 'center' !== e.originY)) ||
          (!i && 'center' === e.originX && 'center' === e.originY)) &&
          (this._resetCurrentTransform(), (e.reset = !0));
      }
    },
    _onScale: function(t, e, i, n) {
      return this._isUniscalePossible(t, e.target)
        ? ((e.currentAction = 'scale'), this._scaleObject(i, n))
        : (e.reset || 'scale' !== e.currentAction || this._resetCurrentTransform(),
          (e.currentAction = 'scaleEqually'),
          this._scaleObject(i, n, 'equally'));
    },
    _isUniscalePossible: function(t, e) {
      return (t[this.uniScaleKey] || this.uniScaleTransform) && !e.get('lockUniScaling');
    },
    _setCursorFromEvent: function(t, e) {
      if (!e) return this.setCursor(this.defaultCursor), !1;
      var i = e.hoverCursor || this.hoverCursor,
        n = this._activeObject && 'activeSelection' === this._activeObject.type ? this._activeObject : null,
        r = (!n || !n.contains(e)) && e._findTargetCorner(this.getPointer(t, !0));
      this.setCursor(r ? this.getCornerCursor(r, e, t) : i);
    },
    getCornerCursor: function(t, i, n) {
      return this.actionIsDisabled(t, i, n)
        ? this.notAllowedCursor
        : t in e
        ? this._getRotatedCornerCursor(t, i, n)
        : 'mtr' === t && i.hasRotatingPoint
        ? this.rotationCursor
        : this.defaultCursor;
    },
    actionIsDisabled: function(t, e, i) {
      return 'mt' === t || 'mb' === t
        ? i[this.altActionKey]
          ? e.lockSkewingX
          : e.lockScalingY
        : 'ml' === t || 'mr' === t
        ? i[this.altActionKey]
          ? e.lockSkewingY
          : e.lockScalingX
        : 'mtr' === t
        ? e.lockRotation
        : this._isUniscalePossible(i, e)
        ? e.lockScalingX && e.lockScalingY
        : e.lockScalingX || e.lockScalingY;
    },
    _getRotatedCornerCursor: function(t, i, n) {
      var r = Math.round((i.angle % 360) / 45);
      return (
        0 > r && (r += 8), (r += e[t]), n[this.altActionKey] && e[t] % 2 === 0 && (r += 2), (r %= 8), this.cursorMap[r]
      );
    }
  });
})();
!(function() {
  var t = Math.min,
    e = Math.max;
  fabric.util.object.extend(fabric.Canvas.prototype, {
    _shouldGroup: function(t, e) {
      var i = this._activeObject;
      return (
        i &&
        this._isSelectionKeyPressed(t) &&
        e &&
        e.selectable &&
        this.selection &&
        (i !== e || 'activeSelection' === i.type) &&
        !e.onSelect({ e: t })
      );
    },
    _handleGrouping: function(t, e) {
      var i = this._activeObject;
      i.__corner ||
        ((e !== i || ((e = this.findTarget(t, !0)), e && e.selectable)) &&
          (i && 'activeSelection' === i.type ? this._updateActiveSelection(e, t) : this._createActiveSelection(e, t)));
    },
    _updateActiveSelection: function(t, e) {
      var i = this._activeObject,
        n = i._objects.slice(0);
      i.contains(t)
        ? (i.removeWithUpdate(t), (this._hoveredTarget = t), 1 === i.size() && this._setActiveObject(i.item(0), e))
        : (i.addWithUpdate(t), (this._hoveredTarget = i)),
        this._fireSelectionEvents(n, e);
    },
    _createActiveSelection: function(t, e) {
      var i = this.getActiveObjects(),
        n = this._createGroup(t);
      (this._hoveredTarget = n), this._setActiveObject(n, e), this._fireSelectionEvents(i, e);
    },
    _createGroup: function(t) {
      var e = this._objects,
        i = e.indexOf(this._activeObject) < e.indexOf(t),
        n = i ? [this._activeObject, t] : [t, this._activeObject];
      return (
        this._activeObject.isEditing && this._activeObject.exitEditing(),
        new fabric.ActiveSelection(n, { canvas: this })
      );
    },
    _groupSelectedObjects: function(t) {
      var e,
        i = this._collectObjects(t);
      1 === i.length
        ? this.setActiveObject(i[0], t)
        : i.length > 1 && ((e = new fabric.ActiveSelection(i.reverse(), { canvas: this })), this.setActiveObject(e, t));
    },
    _collectObjects: function(i) {
      for (
        var n,
          r = [],
          o = this._groupSelector.ex,
          s = this._groupSelector.ey,
          a = o + this._groupSelector.left,
          c = s + this._groupSelector.top,
          l = new fabric.Point(t(o, a), t(s, c)),
          h = new fabric.Point(e(o, a), e(s, c)),
          u = !this.selectionFullyContained,
          f = o === a && s === c,
          d = this._objects.length;
        d-- &&
        ((n = this._objects[d]),
        !(
          n &&
          n.selectable &&
          n.visible &&
          ((u && n.intersectsWithRect(l, h)) ||
            n.isContainedWithinRect(l, h) ||
            (u && n.containsPoint(l)) ||
            (u && n.containsPoint(h))) &&
          (r.push(n), f)
        ));

      );
      return (
        r.length > 1 &&
          (r = r.filter(function(t) {
            return !t.onSelect({ e: i });
          })),
        r
      );
    },
    _maybeGroupObjects: function(t) {
      this.selection && this._groupSelector && this._groupSelectedObjects(t),
        this.setCursor(this.defaultCursor),
        (this._groupSelector = null);
    }
  });
})();
!(function() {
  fabric.util.object.extend(fabric.StaticCanvas.prototype, {
    toDataURL: function(t) {
      t || (t = {});
      var e = t.format || 'png',
        i = t.quality || 1,
        n = (t.multiplier || 1) * (t.enableRetinaScaling ? this.getRetinaScaling() : 1),
        r = this.toCanvasElement(n, t);
      return fabric.util.toDataURL(r, e, i);
    },
    toCanvasElement: function(t, e) {
      (t = t || 1), (e = e || {});
      var i = (e.width || this.width) * t,
        n = (e.height || this.height) * t,
        r = this.getZoom(),
        o = this.width,
        s = this.height,
        a = r * t,
        c = this.viewportTransform,
        l = (c[4] - (e.left || 0)) * t,
        h = (c[5] - (e.top || 0)) * t,
        u = this.interactive,
        f = [a, 0, 0, a, l, h],
        d = this.enableRetinaScaling,
        g = fabric.util.createCanvasElement(),
        v = this.contextTop;
      return (
        (g.width = i),
        (g.height = n),
        (this.contextTop = null),
        (this.enableRetinaScaling = !1),
        (this.interactive = !1),
        (this.viewportTransform = f),
        (this.width = i),
        (this.height = n),
        this.calcViewportBoundaries(),
        this.renderCanvas(g.getContext('2d'), this._objects),
        (this.viewportTransform = c),
        (this.width = o),
        (this.height = s),
        this.calcViewportBoundaries(),
        (this.interactive = u),
        (this.enableRetinaScaling = d),
        (this.contextTop = v),
        g
      );
    }
  });
})();
!(function() {
  var t = fabric.util.degreesToRadians,
    e = fabric.util.radiansToDegrees;
  fabric.util.object.extend(fabric.Canvas.prototype, {
    __onTransformGesture: function(t, e) {
      if (!this.isDrawingMode && t.touches && 2 === t.touches.length && 'gesture' === e.gesture) {
        var i = this.findTarget(t);
        'undefined' != typeof i && ((this.__gesturesParams = { e: t, self: e, target: i }), this.__gesturesRenderer()),
          this.fire('touch:gesture', { target: i, e: t, self: e });
      }
    },
    __gesturesParams: null,
    __gesturesRenderer: function() {
      if (null !== this.__gesturesParams && null !== this._currentTransform) {
        var t = this.__gesturesParams.self,
          e = this._currentTransform,
          i = this.__gesturesParams.e;
        (e.action = 'scale'),
          (e.originX = e.originY = 'center'),
          this._scaleObjectBy(t.scale, i),
          0 !== t.rotation && ((e.action = 'rotate'), this._rotateObjectByAngle(t.rotation, i)),
          this.requestRenderAll(),
          (e.action = 'drag');
      }
    },
    __onDrag: function(t, e) {
      this.fire('touch:drag', { e: t, self: e });
    },
    __onOrientationChange: function(t, e) {
      this.fire('touch:orientation', { e: t, self: e });
    },
    __onShake: function(t, e) {
      this.fire('touch:shake', { e: t, self: e });
    },
    __onLongPress: function(t, e) {
      this.fire('touch:longpress', { e: t, self: e });
    },
    _scaleObjectBy: function(t, e) {
      var i = this._currentTransform,
        n = i.target,
        r = n.get('lockScalingX'),
        o = n.get('lockScalingY');
      if (!r || !o) {
        n._scaling = !0;
        var s = n.translateToOriginPoint(n.getCenterPoint(), i.originX, i.originY),
          a = n._getTransformedDimensions();
        this._setObjectScale(
          new fabric.Point((i.scaleX * a.x * t) / n.scaleX, (i.scaleY * a.y * t) / n.scaleY),
          i,
          r,
          o,
          null,
          n.get('lockScalingFlip'),
          a
        ),
          n.setPositionByOrigin(s, i.originX, i.originY),
          this._fire('scaling', { target: n, e: e, transform: i });
      }
    },
    _rotateObjectByAngle: function(i, n) {
      var r = this._currentTransform;
      r.target.get('lockRotation') ||
        (r.target.rotate(e(t(i) + r.theta)), this._fire('rotating', { target: r.target, e: n, transform: r }));
    }
  });
})();
!(function(t) {
  'use strict';
  var e = t.fabric || (t.fabric = {}),
    i = e.util.object.extend,
    n = e.util.object.clone,
    r = e.util.toFixed,
    s = e.util.string.capitalize,
    o = e.util.degreesToRadians,
    a = e.StaticCanvas.supports('setLineDash'),
    c = !e.isLikelyNode,
    l = 2;
  e.Object ||
    ((e.Object = e.util.createClass(e.CommonMethods, {
      type: 'object',
      originX: 'left',
      originY: 'top',
      top: 0,
      left: 0,
      width: 0,
      height: 0,
      scaleX: 1,
      scaleY: 1,
      flipX: !1,
      flipY: !1,
      opacity: 1,
      angle: 0,
      skewX: 0,
      skewY: 0,
      cornerSize: 13,
      transparentCorners: !0,
      hoverCursor: null,
      moveCursor: null,
      padding: 0,
      borderColor: 'rgba(102,153,255,0.75)',
      borderDashArray: null,
      cornerColor: 'rgba(102,153,255,0.5)',
      cornerStrokeColor: null,
      cornerStyle: 'rect',
      cornerDashArray: null,
      centeredScaling: !1,
      centeredRotation: !0,
      fill: 'rgb(0,0,0)',
      fillRule: 'nonzero',
      globalCompositeOperation: 'source-over',
      backgroundColor: '',
      selectionBackgroundColor: '',
      stroke: null,
      strokeWidth: 1,
      strokeDashArray: null,
      strokeDashOffset: 0,
      strokeLineCap: 'butt',
      strokeLineJoin: 'miter',
      strokeMiterLimit: 4,
      shadow: null,
      borderOpacityWhenMoving: 0.4,
      borderScaleFactor: 1,
      transformMatrix: null,
      minScaleLimit: 0,
      selectable: !0,
      evented: !0,
      visible: !0,
      hasControls: !0,
      hasBorders: !0,
      hasRotatingPoint: !0,
      rotatingPointOffset: 40,
      perPixelTargetFind: !1,
      includeDefaultValues: !0,
      clipTo: null,
      lockMovementX: !1,
      lockMovementY: !1,
      lockRotation: !1,
      lockScalingX: !1,
      lockScalingY: !1,
      lockUniScaling: !1,
      lockSkewingX: !1,
      lockSkewingY: !1,
      lockScalingFlip: !1,
      excludeFromExport: !1,
      objectCaching: c,
      statefullCache: !1,
      noScaleCache: !0,
      strokeUniform: !1,
      dirty: !0,
      __corner: 0,
      paintFirst: 'fill',
      stateProperties: 'top left width height scaleX scaleY flipX flipY originX originY transformMatrix stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor skewX skewY fillRule paintFirst clipPath strokeUniform'.split(
        ' '
      ),
      cacheProperties: 'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'.split(
        ' '
      ),
      clipPath: void 0,
      inverted: !1,
      absolutePositioned: !1,
      initialize: function(t) {
        t && this.setOptions(t);
      },
      _createCacheCanvas: function() {
        (this._cacheProperties = {}),
          (this._cacheCanvas = e.util.createCanvasElement()),
          (this._cacheContext = this._cacheCanvas.getContext('2d')),
          this._updateCacheCanvas(),
          (this.dirty = !0);
      },
      _limitCacheSize: function(t) {
        var i = e.perfLimitSizeTotal,
          n = t.width,
          r = t.height,
          s = e.maxCacheSideLimit,
          o = e.minCacheSideLimit;
        if (s >= n && s >= r && i >= n * r) return o > n && (t.width = o), o > r && (t.height = o), t;
        var a = n / r,
          c = e.util.limitDimsByArea(a, i),
          l = e.util.capValue,
          h = l(o, c.x, s),
          u = l(o, c.y, s);
        return (
          n > h && ((t.zoomX /= n / h), (t.width = h), (t.capped = !0)),
          r > u && ((t.zoomY /= r / u), (t.height = u), (t.capped = !0)),
          t
        );
      },
      _getCacheCanvasDimensions: function() {
        var t = this.getTotalObjectScaling(),
          e = this._getTransformedDimensions(0, 0),
          i = (e.x * t.scaleX) / this.scaleX,
          n = (e.y * t.scaleY) / this.scaleY;
        return { width: i + l, height: n + l, zoomX: t.scaleX, zoomY: t.scaleY, x: i, y: n };
      },
      _updateCacheCanvas: function() {
        var t = this.canvas;
        if (this.noScaleCache && t && t._currentTransform) {
          var i = t._currentTransform.target,
            n = t._currentTransform.action;
          if (this === i && n.slice && 'scale' === n.slice(0, 5)) return !1;
        }
        var r,
          s,
          o = this._cacheCanvas,
          a = this._limitCacheSize(this._getCacheCanvasDimensions()),
          c = e.minCacheSideLimit,
          l = a.width,
          h = a.height,
          u = a.zoomX,
          f = a.zoomY,
          d = l !== this.cacheWidth || h !== this.cacheHeight,
          g = this.zoomX !== u || this.zoomY !== f,
          v = d || g,
          p = 0,
          m = 0,
          b = !1;
        if (d) {
          var y = this._cacheCanvas.width,
            _ = this._cacheCanvas.height,
            w = l > y || h > _,
            C = (0.9 * y > l || 0.9 * _ > h) && y > c && _ > c;
          (b = w || C), w && !a.capped && (l > c || h > c) && ((p = 0.1 * l), (m = 0.1 * h));
        }
        return v
          ? (b
              ? ((o.width = Math.ceil(l + p)), (o.height = Math.ceil(h + m)))
              : (this._cacheContext.setTransform(1, 0, 0, 1, 0, 0),
                this._cacheContext.clearRect(0, 0, o.width, o.height)),
            (r = a.x / 2),
            (s = a.y / 2),
            (this.cacheTranslationX = Math.round(o.width / 2 - r) + r),
            (this.cacheTranslationY = Math.round(o.height / 2 - s) + s),
            (this.cacheWidth = l),
            (this.cacheHeight = h),
            this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY),
            this._cacheContext.scale(u, f),
            (this.zoomX = u),
            (this.zoomY = f),
            !0)
          : !1;
      },
      setOptions: function(t) {
        this._setOptions(t),
          this._initGradient(t.fill, 'fill'),
          this._initGradient(t.stroke, 'stroke'),
          this._initClipping(t),
          this._initPattern(t.fill, 'fill'),
          this._initPattern(t.stroke, 'stroke');
      },
      transform: function(t) {
        var e;
        (e = this.group && !this.group._transformDone ? this.calcTransformMatrix() : this.calcOwnMatrix()),
          t.transform(e[0], e[1], e[2], e[3], e[4], e[5]);
      },
      toObject: function(t) {
        var i = e.Object.NUM_FRACTION_DIGITS,
          n = {
            type: this.type,
            version: e.version,
            originX: this.originX,
            originY: this.originY,
            left: r(this.left, i),
            top: r(this.top, i),
            width: r(this.width, i),
            height: r(this.height, i),
            fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,
            stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,
            strokeWidth: r(this.strokeWidth, i),
            strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,
            strokeLineCap: this.strokeLineCap,
            strokeDashOffset: this.strokeDashOffset,
            strokeLineJoin: this.strokeLineJoin,
            strokeMiterLimit: r(this.strokeMiterLimit, i),
            scaleX: r(this.scaleX, i),
            scaleY: r(this.scaleY, i),
            angle: r(this.angle, i),
            flipX: this.flipX,
            flipY: this.flipY,
            opacity: r(this.opacity, i),
            shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,
            visible: this.visible,
            clipTo: this.clipTo && String(this.clipTo),
            backgroundColor: this.backgroundColor,
            fillRule: this.fillRule,
            paintFirst: this.paintFirst,
            globalCompositeOperation: this.globalCompositeOperation,
            transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : null,
            skewX: r(this.skewX, i),
            skewY: r(this.skewY, i)
          };
        return (
          this.clipPath &&
            ((n.clipPath = this.clipPath.toObject(t)),
            (n.clipPath.inverted = this.clipPath.inverted),
            (n.clipPath.absolutePositioned = this.clipPath.absolutePositioned)),
          e.util.populateWithProperties(this, n, t),
          this.includeDefaultValues || (n = this._removeDefaultValues(n)),
          n
        );
      },
      toDatalessObject: function(t) {
        return this.toObject(t);
      },
      _removeDefaultValues: function(t) {
        var i = e.util.getKlass(t.type).prototype,
          n = i.stateProperties;
        return (
          n.forEach(function(e) {
            if ('left' !== e && 'top' !== e) {
              t[e] === i[e] && delete t[e];
              var n =
                '[object Array]' === Object.prototype.toString.call(t[e]) &&
                '[object Array]' === Object.prototype.toString.call(i[e]);
              n && 0 === t[e].length && 0 === i[e].length && delete t[e];
            }
          }),
          t
        );
      },
      toString: function() {
        return '#<fabric.' + s(this.type) + '>';
      },
      getObjectScaling: function() {
        var t = this.scaleX,
          e = this.scaleY;
        if (this.group) {
          var i = this.group.getObjectScaling();
          (t *= i.scaleX), (e *= i.scaleY);
        }
        return { scaleX: t, scaleY: e };
      },
      getTotalObjectScaling: function() {
        var t = this.getObjectScaling(),
          e = t.scaleX,
          i = t.scaleY;
        if (this.canvas) {
          var n = this.canvas.getZoom(),
            r = this.canvas.getRetinaScaling();
          (e *= n * r), (i *= n * r);
        }
        return { scaleX: e, scaleY: i };
      },
      getObjectOpacity: function() {
        var t = this.opacity;
        return this.group && (t *= this.group.getObjectOpacity()), t;
      },
      _set: function(t, i) {
        var n = 'scaleX' === t || 'scaleY' === t,
          r = this[t] !== i,
          s = !1;
        return (
          n && (i = this._constrainScale(i)),
          'scaleX' === t && 0 > i
            ? ((this.flipX = !this.flipX), (i *= -1))
            : 'scaleY' === t && 0 > i
            ? ((this.flipY = !this.flipY), (i *= -1))
            : 'shadow' !== t || !i || i instanceof e.Shadow
            ? 'dirty' === t && this.group && this.group.set('dirty', i)
            : (i = new e.Shadow(i)),
          (this[t] = i),
          r &&
            ((s = this.group && this.group.isOnACache()),
            this.cacheProperties.indexOf(t) > -1
              ? ((this.dirty = !0), s && this.group.set('dirty', !0))
              : s && this.stateProperties.indexOf(t) > -1 && this.group.set('dirty', !0)),
          this
        );
      },
      setOnGroup: function() {},
      getViewportTransform: function() {
        return this.canvas && this.canvas.viewportTransform ? this.canvas.viewportTransform : e.iMatrix.concat();
      },
      isNotVisible: function() {
        return 0 === this.opacity || (0 === this.width && 0 === this.height && 0 === this.strokeWidth) || !this.visible;
      },
      render: function(t) {
        this.isNotVisible() ||
          ((!this.canvas || !this.canvas.skipOffscreen || this.group || this.isOnScreen()) &&
            (t.save(),
            this._setupCompositeOperation(t),
            this.drawSelectionBackground(t),
            this.transform(t),
            this._setOpacity(t),
            this._setShadow(t, this),
            this.transformMatrix && t.transform.apply(t, this.transformMatrix),
            this.clipTo && e.util.clipContext(this, t),
            this.shouldCache()
              ? (this.renderCache(), this.drawCacheOnCanvas(t))
              : (this._removeCacheCanvas(),
                (this.dirty = !1),
                this.drawObject(t),
                this.objectCaching && this.statefullCache && this.saveState({ propertySet: 'cacheProperties' })),
            this.clipTo && t.restore(),
            t.restore()));
      },
      renderCache: function(t) {
        (t = t || {}),
          this._cacheCanvas || this._createCacheCanvas(),
          this.isCacheDirty() &&
            (this.statefullCache && this.saveState({ propertySet: 'cacheProperties' }),
            this.drawObject(this._cacheContext, t.forClipping),
            (this.dirty = !1));
      },
      _removeCacheCanvas: function() {
        (this._cacheCanvas = null), (this.cacheWidth = 0), (this.cacheHeight = 0);
      },
      hasStroke: function() {
        return this.stroke && 'transparent' !== this.stroke && 0 !== this.strokeWidth;
      },
      hasFill: function() {
        return this.fill && 'transparent' !== this.fill;
      },
      needsItsOwnCache: function() {
        return 'stroke' === this.paintFirst && this.hasFill() && this.hasStroke() && 'object' == typeof this.shadow
          ? !0
          : this.clipPath
          ? !0
          : !1;
      },
      shouldCache: function() {
        return (
          (this.ownCaching =
            this.needsItsOwnCache() || (this.objectCaching && (!this.group || !this.group.isOnACache()))),
          this.ownCaching
        );
      },
      willDrawShadow: function() {
        return !!this.shadow && (0 !== this.shadow.offsetX || 0 !== this.shadow.offsetY);
      },
      drawClipPathOnCache: function(t) {
        var i = this.clipPath;
        if (
          (t.save(),
          (t.globalCompositeOperation = i.inverted ? 'destination-out' : 'destination-in'),
          i.absolutePositioned)
        ) {
          var n = e.util.invertTransform(this.calcTransformMatrix());
          t.transform(n[0], n[1], n[2], n[3], n[4], n[5]);
        }
        i.transform(t),
          t.scale(1 / i.zoomX, 1 / i.zoomY),
          t.drawImage(i._cacheCanvas, -i.cacheTranslationX, -i.cacheTranslationY),
          t.restore();
      },
      drawObject: function(t, e) {
        var i = this.fill,
          n = this.stroke;
        e
          ? ((this.fill = 'black'), (this.stroke = ''), this._setClippingProperties(t))
          : (this._renderBackground(t), this._setStrokeStyles(t, this), this._setFillStyles(t, this)),
          this._render(t),
          this._drawClipPath(t),
          (this.fill = i),
          (this.stroke = n);
      },
      _drawClipPath: function(t) {
        var e = this.clipPath;
        e &&
          ((e.canvas = this.canvas),
          e.shouldCache(),
          (e._transformDone = !0),
          e.renderCache({ forClipping: !0 }),
          this.drawClipPathOnCache(t));
      },
      drawCacheOnCanvas: function(t) {
        t.scale(1 / this.zoomX, 1 / this.zoomY),
          t.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);
      },
      isCacheDirty: function(t) {
        if (this.isNotVisible()) return !1;
        if (this._cacheCanvas && !t && this._updateCacheCanvas()) return !0;
        if (
          this.dirty ||
          (this.clipPath && this.clipPath.absolutePositioned) ||
          (this.statefullCache && this.hasStateChanged('cacheProperties'))
        ) {
          if (this._cacheCanvas && !t) {
            var e = this.cacheWidth / this.zoomX,
              i = this.cacheHeight / this.zoomY;
            this._cacheContext.clearRect(-e / 2, -i / 2, e, i);
          }
          return !0;
        }
        return !1;
      },
      _renderBackground: function(t) {
        if (this.backgroundColor) {
          var e = this._getNonTransformedDimensions();
          (t.fillStyle = this.backgroundColor), t.fillRect(-e.x / 2, -e.y / 2, e.x, e.y), this._removeShadow(t);
        }
      },
      _setOpacity: function(t) {
        this.group && !this.group._transformDone
          ? (t.globalAlpha = this.getObjectOpacity())
          : (t.globalAlpha *= this.opacity);
      },
      _setStrokeStyles: function(t, e) {
        e.stroke &&
          ((t.lineWidth = e.strokeWidth),
          (t.lineCap = e.strokeLineCap),
          (t.lineDashOffset = e.strokeDashOffset),
          (t.lineJoin = e.strokeLineJoin),
          (t.miterLimit = e.strokeMiterLimit),
          (t.strokeStyle = e.stroke.toLive ? e.stroke.toLive(t, this) : e.stroke));
      },
      _setFillStyles: function(t, e) {
        e.fill && (t.fillStyle = e.fill.toLive ? e.fill.toLive(t, this) : e.fill);
      },
      _setClippingProperties: function(t) {
        (t.globalAlpha = 1), (t.strokeStyle = 'transparent'), (t.fillStyle = '#000000');
      },
      _setLineDash: function(t, e, i) {
        e &&
          (1 & e.length && e.push.apply(e, e),
          a ? t.setLineDash(e) : i && i(t),
          this.strokeUniform &&
            t.setLineDash(
              t.getLineDash().map(function(e) {
                return e * t.lineWidth;
              })
            ));
      },
      _renderControls: function(t, i) {
        var n,
          r,
          s,
          a = this.getViewportTransform(),
          c = this.calcTransformMatrix();
        (i = i || {}),
          (r = 'undefined' != typeof i.hasBorders ? i.hasBorders : this.hasBorders),
          (s = 'undefined' != typeof i.hasControls ? i.hasControls : this.hasControls),
          (c = e.util.multiplyTransformMatrices(a, c)),
          (n = e.util.qrDecompose(c)),
          t.save(),
          t.translate(n.translateX, n.translateY),
          (t.lineWidth = 1 * this.borderScaleFactor),
          this.group || (t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1),
          i.forActiveSelection
            ? (t.rotate(o(n.angle)), r && this.drawBordersInGroup(t, n, i))
            : (t.rotate(o(this.angle)), r && this.drawBorders(t, i)),
          s && this.drawControls(t, i),
          t.restore();
      },
      _setShadow: function(t) {
        if (this.shadow) {
          var i,
            n = this.shadow,
            r = this.canvas,
            s = (r && r.viewportTransform[0]) || 1,
            o = (r && r.viewportTransform[3]) || 1;
          (i = n.nonScaling ? { scaleX: 1, scaleY: 1 } : this.getObjectScaling()),
            r && r._isRetinaScaling() && ((s *= e.devicePixelRatio), (o *= e.devicePixelRatio)),
            (t.shadowColor = n.color),
            (t.shadowBlur = (n.blur * e.browserShadowBlurConstant * (s + o) * (i.scaleX + i.scaleY)) / 4),
            (t.shadowOffsetX = n.offsetX * s * i.scaleX),
            (t.shadowOffsetY = n.offsetY * o * i.scaleY);
        }
      },
      _removeShadow: function(t) {
        this.shadow && ((t.shadowColor = ''), (t.shadowBlur = t.shadowOffsetX = t.shadowOffsetY = 0));
      },
      _applyPatternGradientTransform: function(t, e) {
        if (!e || !e.toLive) return { offsetX: 0, offsetY: 0 };
        var i = e.gradientTransform || e.patternTransform,
          n = -this.width / 2 + e.offsetX || 0,
          r = -this.height / 2 + e.offsetY || 0;
        return (
          'percentage' === e.gradientUnits
            ? t.transform(this.width, 0, 0, this.height, n, r)
            : t.transform(1, 0, 0, 1, n, r),
          i && t.transform(i[0], i[1], i[2], i[3], i[4], i[5]),
          { offsetX: n, offsetY: r }
        );
      },
      _renderPaintInOrder: function(t) {
        'stroke' === this.paintFirst
          ? (this._renderStroke(t), this._renderFill(t))
          : (this._renderFill(t), this._renderStroke(t));
      },
      _render: function() {},
      _renderFill: function(t) {
        this.fill &&
          (t.save(),
          this._applyPatternGradientTransform(t, this.fill),
          'evenodd' === this.fillRule ? t.fill('evenodd') : t.fill(),
          t.restore());
      },
      _renderStroke: function(t) {
        this.stroke &&
          0 !== this.strokeWidth &&
          (this.shadow && !this.shadow.affectStroke && this._removeShadow(t),
          t.save(),
          this.strokeUniform && t.scale(1 / this.scaleX, 1 / this.scaleY),
          this._setLineDash(t, this.strokeDashArray, this._renderDashedStroke),
          this.stroke.toLive && 'percentage' === this.stroke.gradientUnits
            ? this._applyPatternForTransformedGradient(t, this.stroke)
            : this._applyPatternGradientTransform(t, this.stroke),
          t.stroke(),
          t.restore());
      },
      _applyPatternForTransformedGradient: function(t, i) {
        var n,
          r = this._limitCacheSize(this._getCacheCanvasDimensions()),
          s = e.util.createCanvasElement(),
          o = this.canvas.getRetinaScaling(),
          a = r.x / this.scaleX / o,
          c = r.y / this.scaleY / o;
        (s.width = a),
          (s.height = c),
          (n = s.getContext('2d')),
          n.beginPath(),
          n.moveTo(0, 0),
          n.lineTo(a, 0),
          n.lineTo(a, c),
          n.lineTo(0, c),
          n.closePath(),
          n.translate(a / 2, c / 2),
          n.scale(r.zoomX / this.scaleX / o, r.zoomY / this.scaleY / o),
          this._applyPatternGradientTransform(n, i),
          (n.fillStyle = i.toLive(t)),
          n.fill(),
          t.translate(-this.width / 2 - this.strokeWidth / 2, -this.height / 2 - this.strokeWidth / 2),
          t.scale((o * this.scaleX) / r.zoomX, (o * this.scaleY) / r.zoomY),
          (t.strokeStyle = n.createPattern(s, 'no-repeat'));
      },
      _findCenterFromElement: function() {
        return { x: this.left + this.width / 2, y: this.top + this.height / 2 };
      },
      _assignTransformMatrixProps: function() {
        if (this.transformMatrix) {
          var t = e.util.qrDecompose(this.transformMatrix);
          (this.flipX = !1),
            (this.flipY = !1),
            this.set('scaleX', t.scaleX),
            this.set('scaleY', t.scaleY),
            (this.angle = t.angle),
            (this.skewX = t.skewX),
            (this.skewY = 0);
        }
      },
      _removeTransformMatrix: function(t) {
        var i = this._findCenterFromElement();
        this.transformMatrix &&
          (this._assignTransformMatrixProps(), (i = e.util.transformPoint(i, this.transformMatrix))),
          (this.transformMatrix = null),
          t &&
            ((this.scaleX *= t.scaleX),
            (this.scaleY *= t.scaleY),
            (this.cropX = t.cropX),
            (this.cropY = t.cropY),
            (i.x += t.offsetLeft),
            (i.y += t.offsetTop),
            (this.width = t.width),
            (this.height = t.height)),
          this.setPositionByOrigin(i, 'center', 'center');
      },
      clone: function(t, i) {
        var n = this.toObject(i);
        this.constructor.fromObject ? this.constructor.fromObject(n, t) : e.Object._fromObject('Object', n, t);
      },
      cloneAsImage: function(t, i) {
        var n = this.toCanvasElement(i);
        return t && t(new e.Image(n)), this;
      },
      toCanvasElement: function(t) {
        t || (t = {});
        var i = e.util,
          n = i.saveObjectTransform(this),
          r = this.shadow,
          s = Math.abs,
          o = (t.multiplier || 1) * (t.enableRetinaScaling ? e.devicePixelRatio : 1);
        t.withoutTransform && i.resetObjectTransform(this), t.withoutShadow && (this.shadow = null);
        var a,
          c,
          l = e.util.createCanvasElement(),
          h = this.getBoundingRect(!0, !0),
          u = this.shadow,
          f = { x: 0, y: 0 };
        u &&
          ((c = u.blur),
          (a = u.nonScaling ? { scaleX: 1, scaleY: 1 } : this.getObjectScaling()),
          (f.x = 2 * Math.round(s(u.offsetX) + c) * s(a.scaleX)),
          (f.y = 2 * Math.round(s(u.offsetY) + c) * s(a.scaleY))),
          (l.width = h.width + f.x),
          (l.height = h.height + f.y),
          (l.width += l.width % 2 ? 2 - (l.width % 2) : 0),
          (l.height += l.height % 2 ? 2 - (l.height % 2) : 0);
        var d = new e.StaticCanvas(l, { enableRetinaScaling: !1, renderOnAddRemove: !1, skipOffscreen: !1 });
        'jpeg' === t.format && (d.backgroundColor = '#fff'),
          this.setPositionByOrigin(new e.Point(d.width / 2, d.height / 2), 'center', 'center');
        var g = this.canvas;
        d.add(this);
        var v = d.toCanvasElement(o || 1, t);
        return (
          (this.shadow = r), (this.canvas = g), this.set(n).setCoords(), (d._objects = []), d.dispose(), (d = null), v
        );
      },
      toDataURL: function(t) {
        return t || (t = {}), e.util.toDataURL(this.toCanvasElement(t), t.format || 'png', t.quality || 1);
      },
      isType: function(t) {
        return this.type === t;
      },
      complexity: function() {
        return 1;
      },
      toJSON: function(t) {
        return this.toObject(t);
      },
      setGradient: function(t, i) {
        i || (i = {});
        var n = { colorStops: [] };
        return (
          (n.type = i.type || (i.r1 || i.r2 ? 'radial' : 'linear')),
          (n.coords = { x1: i.x1, y1: i.y1, x2: i.x2, y2: i.y2 }),
          (n.gradientUnits = i.gradientUnits || 'pixels'),
          (i.r1 || i.r2) && ((n.coords.r1 = i.r1), (n.coords.r2 = i.r2)),
          (n.gradientTransform = i.gradientTransform),
          e.Gradient.prototype.addColorStop.call(n, i.colorStops),
          this.set(t, e.Gradient.forObject(this, n))
        );
      },
      setPatternFill: function(t, i) {
        return this.set('fill', new e.Pattern(t, i));
      },
      setShadow: function(t) {
        return this.set('shadow', t ? new e.Shadow(t) : null);
      },
      setColor: function(t) {
        return this.set('fill', t), this;
      },
      rotate: function(t) {
        var e = ('center' !== this.originX || 'center' !== this.originY) && this.centeredRotation;
        return e && this._setOriginToCenter(), this.set('angle', t), e && this._resetOrigin(), this;
      },
      centerH: function() {
        return this.canvas && this.canvas.centerObjectH(this), this;
      },
      viewportCenterH: function() {
        return this.canvas && this.canvas.viewportCenterObjectH(this), this;
      },
      centerV: function() {
        return this.canvas && this.canvas.centerObjectV(this), this;
      },
      viewportCenterV: function() {
        return this.canvas && this.canvas.viewportCenterObjectV(this), this;
      },
      center: function() {
        return this.canvas && this.canvas.centerObject(this), this;
      },
      viewportCenter: function() {
        return this.canvas && this.canvas.viewportCenterObject(this), this;
      },
      getLocalPointer: function(t, i) {
        i = i || this.canvas.getPointer(t);
        var n = new e.Point(i.x, i.y),
          r = this._getLeftTopCoords();
        return this.angle && (n = e.util.rotatePoint(n, r, o(-this.angle))), { x: n.x - r.x, y: n.y - r.y };
      },
      _setupCompositeOperation: function(t) {
        this.globalCompositeOperation && (t.globalCompositeOperation = this.globalCompositeOperation);
      }
    })),
    e.util.createAccessors && e.util.createAccessors(e.Object),
    i(e.Object.prototype, e.Observable),
    (e.Object.NUM_FRACTION_DIGITS = 2),
    (e.Object._fromObject = function(t, i, r, s) {
      var o = e[t];
      (i = n(i, !0)),
        e.util.enlivenPatterns([i.fill, i.stroke], function(t) {
          'undefined' != typeof t[0] && (i.fill = t[0]),
            'undefined' != typeof t[1] && (i.stroke = t[1]),
            e.util.enlivenObjects([i.clipPath], function(t) {
              i.clipPath = t[0];
              var e = s ? new o(i[s], i) : new o(i);
              r && r(e);
            });
        });
    }),
    (e.Object.__uid = 0));
})('undefined' != typeof exports ? exports : this);
!(function() {
  var t = fabric.util.degreesToRadians,
    e = { left: -0.5, center: 0, right: 0.5 },
    i = { top: -0.5, center: 0, bottom: 0.5 };
  fabric.util.object.extend(fabric.Object.prototype, {
    translateToGivenOrigin: function(t, n, r, o, s) {
      var a,
        c,
        l,
        h = t.x,
        u = t.y;
      return (
        'string' == typeof n ? (n = e[n]) : (n -= 0.5),
        'string' == typeof o ? (o = e[o]) : (o -= 0.5),
        (a = o - n),
        'string' == typeof r ? (r = i[r]) : (r -= 0.5),
        'string' == typeof s ? (s = i[s]) : (s -= 0.5),
        (c = s - r),
        (a || c) && ((l = this._getTransformedDimensions()), (h = t.x + a * l.x), (u = t.y + c * l.y)),
        new fabric.Point(h, u)
      );
    },
    translateToCenterPoint: function(e, i, n) {
      var r = this.translateToGivenOrigin(e, i, n, 'center', 'center');
      return this.angle ? fabric.util.rotatePoint(r, e, t(this.angle)) : r;
    },
    translateToOriginPoint: function(e, i, n) {
      var r = this.translateToGivenOrigin(e, 'center', 'center', i, n);
      return this.angle ? fabric.util.rotatePoint(r, e, t(this.angle)) : r;
    },
    getCenterPoint: function() {
      var t = new fabric.Point(this.left, this.top);
      return this.translateToCenterPoint(t, this.originX, this.originY);
    },
    getPointByOrigin: function(t, e) {
      var i = this.getCenterPoint();
      return this.translateToOriginPoint(i, t, e);
    },
    toLocalPoint: function(e, i, n) {
      var r,
        o,
        s = this.getCenterPoint();
      return (
        (r =
          'undefined' != typeof i && 'undefined' != typeof n
            ? this.translateToGivenOrigin(s, 'center', 'center', i, n)
            : new fabric.Point(this.left, this.top)),
        (o = new fabric.Point(e.x, e.y)),
        this.angle && (o = fabric.util.rotatePoint(o, s, -t(this.angle))),
        o.subtractEquals(r)
      );
    },
    setPositionByOrigin: function(t, e, i) {
      var n = this.translateToCenterPoint(t, e, i),
        r = this.translateToOriginPoint(n, this.originX, this.originY);
      this.set('left', r.x), this.set('top', r.y);
    },
    adjustPosition: function(i) {
      var n,
        r,
        o = t(this.angle),
        s = this.getScaledWidth(),
        a = fabric.util.cos(o) * s,
        c = fabric.util.sin(o) * s;
      (n = 'string' == typeof this.originX ? e[this.originX] : this.originX - 0.5),
        (r = 'string' == typeof i ? e[i] : i - 0.5),
        (this.left += a * (r - n)),
        (this.top += c * (r - n)),
        this.setCoords(),
        (this.originX = i);
    },
    _setOriginToCenter: function() {
      (this._originalOriginX = this.originX), (this._originalOriginY = this.originY);
      var t = this.getCenterPoint();
      (this.originX = 'center'), (this.originY = 'center'), (this.left = t.x), (this.top = t.y);
    },
    _resetOrigin: function() {
      var t = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);
      (this.originX = this._originalOriginX),
        (this.originY = this._originalOriginY),
        (this.left = t.x),
        (this.top = t.y),
        (this._originalOriginX = null),
        (this._originalOriginY = null);
    },
    _getLeftTopCoords: function() {
      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');
    }
  });
})();
!(function() {
  function t(t) {
    return [
      new fabric.Point(t.tl.x, t.tl.y),
      new fabric.Point(t.tr.x, t.tr.y),
      new fabric.Point(t.br.x, t.br.y),
      new fabric.Point(t.bl.x, t.bl.y)
    ];
  }
  var e = fabric.util.degreesToRadians,
    i = fabric.util.multiplyTransformMatrices,
    n = fabric.util.transformPoint;
  fabric.util.object.extend(fabric.Object.prototype, {
    oCoords: null,
    aCoords: null,
    ownMatrixCache: null,
    matrixCache: null,
    getCoords: function(e, i) {
      this.oCoords || this.setCoords();
      var n = e ? this.aCoords : this.oCoords;
      return t(i ? this.calcCoords(e) : n);
    },
    intersectsWithRect: function(t, e, i, n) {
      var r = this.getCoords(i, n),
        s = fabric.Intersection.intersectPolygonRectangle(r, t, e);
      return 'Intersection' === s.status;
    },
    intersectsWithObject: function(t, e, i) {
      var n = fabric.Intersection.intersectPolygonPolygon(this.getCoords(e, i), t.getCoords(e, i));
      return (
        'Intersection' === n.status || t.isContainedWithinObject(this, e, i) || this.isContainedWithinObject(t, e, i)
      );
    },
    isContainedWithinObject: function(t, e, i) {
      for (
        var n = this.getCoords(e, i), r = 0, s = t._getImageLines(i ? t.calcCoords(e) : e ? t.aCoords : t.oCoords);
        4 > r;
        r++
      )
        if (!t.containsPoint(n[r], s)) return !1;
      return !0;
    },
    isContainedWithinRect: function(t, e, i, n) {
      var r = this.getBoundingRect(i, n);
      return r.left >= t.x && r.left + r.width <= e.x && r.top >= t.y && r.top + r.height <= e.y;
    },
    containsPoint: function(t, e, i, n) {
      var e = e || this._getImageLines(n ? this.calcCoords(i) : i ? this.aCoords : this.oCoords),
        r = this._findCrossPoints(t, e);
      return 0 !== r && r % 2 === 1;
    },
    isOnScreen: function(t) {
      if (!this.canvas) return !1;
      for (
        var e, i = this.canvas.vptCoords.tl, n = this.canvas.vptCoords.br, r = this.getCoords(!0, t), s = 0;
        4 > s;
        s++
      )
        if (((e = r[s]), e.x <= n.x && e.x >= i.x && e.y <= n.y && e.y >= i.y)) return !0;
      return this.intersectsWithRect(i, n, !0, t) ? !0 : this._containsCenterOfCanvas(i, n, t);
    },
    _containsCenterOfCanvas: function(t, e, i) {
      var n = { x: (t.x + e.x) / 2, y: (t.y + e.y) / 2 };
      return this.containsPoint(n, null, !0, i) ? !0 : !1;
    },
    isPartiallyOnScreen: function(t) {
      if (!this.canvas) return !1;
      var e = this.canvas.vptCoords.tl,
        i = this.canvas.vptCoords.br;
      return this.intersectsWithRect(e, i, !0, t) ? !0 : this._containsCenterOfCanvas(e, i, t);
    },
    _getImageLines: function(t) {
      return {
        topline: { o: t.tl, d: t.tr },
        rightline: { o: t.tr, d: t.br },
        bottomline: { o: t.br, d: t.bl },
        leftline: { o: t.bl, d: t.tl }
      };
    },
    _findCrossPoints: function(t, e) {
      var i,
        n,
        r,
        s,
        o,
        a,
        c = 0;
      for (var l in e)
        if (
          ((a = e[l]),
          !(
            (a.o.y < t.y && a.d.y < t.y) ||
            (a.o.y >= t.y && a.d.y >= t.y) ||
            (a.o.x === a.d.x && a.o.x >= t.x
              ? (o = a.o.x)
              : ((i = 0),
                (n = (a.d.y - a.o.y) / (a.d.x - a.o.x)),
                (r = t.y - i * t.x),
                (s = a.o.y - n * a.o.x),
                (o = -(r - s) / (i - n))),
            o >= t.x && (c += 1),
            2 !== c)
          ))
        )
          break;
      return c;
    },
    getBoundingRect: function(t, e) {
      var i = this.getCoords(t, e);
      return fabric.util.makeBoundingBoxFromPoints(i);
    },
    getScaledWidth: function() {
      return this._getTransformedDimensions().x;
    },
    getScaledHeight: function() {
      return this._getTransformedDimensions().y;
    },
    _constrainScale: function(t) {
      return Math.abs(t) < this.minScaleLimit ? (0 > t ? -this.minScaleLimit : this.minScaleLimit) : 0 === t ? 1e-4 : t;
    },
    scale: function(t) {
      return this._set('scaleX', t), this._set('scaleY', t), this.setCoords();
    },
    scaleToWidth: function(t, e) {
      var i = this.getBoundingRect(e).width / this.getScaledWidth();
      return this.scale(t / this.width / i);
    },
    scaleToHeight: function(t, e) {
      var i = this.getBoundingRect(e).height / this.getScaledHeight();
      return this.scale(t / this.height / i);
    },
    calcCoords: function(t) {
      var r = this._calcRotateMatrix(),
        s = this._calcTranslateMatrix(),
        o = i(s, r),
        a = this.getViewportTransform(),
        c = t ? o : i(a, o),
        l = this._getTransformedDimensions(),
        h = l.x / 2,
        u = l.y / 2,
        f = n({ x: -h, y: -u }, c),
        d = n({ x: h, y: -u }, c),
        g = n({ x: -h, y: u }, c),
        v = n({ x: h, y: u }, c);
      if (!t) {
        var p = this.padding,
          m = e(this.angle),
          b = fabric.util.cos(m),
          y = fabric.util.sin(m),
          _ = b * p,
          w = y * p,
          C = _ + w,
          x = _ - w;
        p && ((f.x -= x), (f.y -= C), (d.x += C), (d.y -= x), (g.x -= C), (g.y += x), (v.x += x), (v.y += C));
        var j = new fabric.Point((f.x + g.x) / 2, (f.y + g.y) / 2),
          O = new fabric.Point((d.x + f.x) / 2, (d.y + f.y) / 2),
          S = new fabric.Point((v.x + d.x) / 2, (v.y + d.y) / 2),
          T = new fabric.Point((v.x + g.x) / 2, (v.y + g.y) / 2),
          P = new fabric.Point(O.x + y * this.rotatingPointOffset, O.y - b * this.rotatingPointOffset);
      }
      var E = { tl: f, tr: d, br: v, bl: g };
      return t || ((E.ml = j), (E.mt = O), (E.mr = S), (E.mb = T), (E.mtr = P)), E;
    },
    setCoords: function(t, e) {
      return (
        (this.oCoords = this.calcCoords(t)),
        e || (this.aCoords = this.calcCoords(!0)),
        t || (this._setCornerCoords && this._setCornerCoords()),
        this
      );
    },
    _calcRotateMatrix: function() {
      return fabric.util.calcRotateMatrix(this);
    },
    _calcTranslateMatrix: function() {
      var t = this.getCenterPoint();
      return [1, 0, 0, 1, t.x, t.y];
    },
    transformMatrixKey: function(t) {
      var e = '_',
        i = '';
      return (
        !t && this.group && (i = this.group.transformMatrixKey(t) + e),
        i +
          this.top +
          e +
          this.left +
          e +
          this.scaleX +
          e +
          this.scaleY +
          e +
          this.skewX +
          e +
          this.skewY +
          e +
          this.angle +
          e +
          this.originX +
          e +
          this.originY +
          e +
          this.width +
          e +
          this.height +
          e +
          this.strokeWidth +
          this.flipX +
          this.flipY
      );
    },
    calcTransformMatrix: function(t) {
      if (t) return this.calcOwnMatrix();
      var e = this.transformMatrixKey(),
        n = this.matrixCache || (this.matrixCache = {});
      if (n.key === e) return n.value;
      var r = this.calcOwnMatrix();
      return this.group && (r = i(this.group.calcTransformMatrix(), r)), (n.key = e), (n.value = r), r;
    },
    calcOwnMatrix: function() {
      var t = this.transformMatrixKey(!0),
        e = this.ownMatrixCache || (this.ownMatrixCache = {});
      if (e.key === t) return e.value;
      var i = this._calcTranslateMatrix();
      return (
        (this.translateX = i[4]),
        (this.translateY = i[5]),
        (e.key = t),
        (e.value = fabric.util.composeMatrix(this)),
        e.value
      );
    },
    _calcDimensionsTransformMatrix: function(t, e, i) {
      return fabric.util.calcDimensionsMatrix({
        skewX: t,
        skewY: e,
        scaleX: this.scaleX * (i && this.flipX ? -1 : 1),
        scaleY: this.scaleY * (i && this.flipY ? -1 : 1)
      });
    },
    _getNonTransformedDimensions: function() {
      var t = this.strokeWidth,
        e = this.width + t,
        i = this.height + t;
      return { x: e, y: i };
    },
    _getTransformedDimensions: function(t, e) {
      'undefined' == typeof t && (t = this.skewX), 'undefined' == typeof e && (e = this.skewY);
      var i,
        n,
        r = this._getNonTransformedDimensions(),
        s = 0 === t && 0 === e;
      if ((this.strokeUniform ? ((i = this.width), (n = this.height)) : ((i = r.x), (n = r.y)), s))
        return this._finalizeDimensions(i * this.scaleX, n * this.scaleY);
      (i /= 2), (n /= 2);
      var o = [{ x: -i, y: -n }, { x: i, y: -n }, { x: -i, y: n }, { x: i, y: n }],
        a = fabric.util.calcDimensionsMatrix({
          scaleX: this.scaleX,
          scaleY: this.scaleY,
          skewX: this.skewX,
          skewY: this.skewY
        }),
        c = fabric.util.makeBoundingBoxFromPoints(o, a);
      return this._finalizeDimensions(c.width, c.height);
    },
    _finalizeDimensions: function(t, e) {
      return this.strokeUniform ? { x: t + this.strokeWidth, y: e + this.strokeWidth } : { x: t, y: e };
    },
    _calculateCurrentDimensions: function() {
      var t = this.getViewportTransform(),
        e = this._getTransformedDimensions(),
        i = fabric.util.transformPoint(e, t, !0);
      return i.scalarAdd(2 * this.padding);
    }
  });
})();
fabric.util.object.extend(fabric.Object.prototype, {
  sendToBack: function() {
    return (
      this.group ? fabric.StaticCanvas.prototype.sendToBack.call(this.group, this) : this.canvas.sendToBack(this), this
    );
  },
  bringToFront: function() {
    return (
      this.group ? fabric.StaticCanvas.prototype.bringToFront.call(this.group, this) : this.canvas.bringToFront(this),
      this
    );
  },
  sendBackwards: function(t) {
    return (
      this.group
        ? fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, t)
        : this.canvas.sendBackwards(this, t),
      this
    );
  },
  bringForward: function(t) {
    return (
      this.group
        ? fabric.StaticCanvas.prototype.bringForward.call(this.group, this, t)
        : this.canvas.bringForward(this, t),
      this
    );
  },
  moveTo: function(t) {
    return (
      this.group && 'activeSelection' !== this.group.type
        ? fabric.StaticCanvas.prototype.moveTo.call(this.group, this, t)
        : this.canvas.moveTo(this, t),
      this
    );
  }
});
!(function() {
  function t(t, e, n) {
    var r = {},
      s = !0;
    n.forEach(function(e) {
      r[e] = t[e];
    }),
      i(t[e], r, s);
  }
  function e(t, i, n) {
    if (t === i) return !0;
    if (Array.isArray(t)) {
      if (!Array.isArray(i) || t.length !== i.length) return !1;
      for (var r = 0, s = t.length; s > r; r++) if (!e(t[r], i[r])) return !1;
      return !0;
    }
    if (t && 'object' == typeof t) {
      var o,
        a = Object.keys(t);
      if (!i || 'object' != typeof i || (!n && a.length !== Object.keys(i).length)) return !1;
      for (var r = 0, s = a.length; s > r; r++) if (((o = a[r]), 'canvas' !== o && !e(t[o], i[o]))) return !1;
      return !0;
    }
  }
  var i = fabric.util.object.extend,
    n = 'stateProperties';
  fabric.util.object.extend(fabric.Object.prototype, {
    hasStateChanged: function(t) {
      t = t || n;
      var i = '_' + t;
      return Object.keys(this[i]).length < this[t].length ? !0 : !e(this[i], this, !0);
    },
    saveState: function(e) {
      var i = (e && e.propertySet) || n,
        r = '_' + i;
      return this[r]
        ? (t(this, r, this[i]), e && e.stateProperties && t(this, r, e.stateProperties), this)
        : this.setupState(e);
    },
    setupState: function(t) {
      t = t || {};
      var e = t.propertySet || n;
      return (t.propertySet = e), (this['_' + e] = {}), this.saveState(t), this;
    }
  });
})();
!(function() {
  var t = fabric.util.degreesToRadians;
  fabric.util.object.extend(fabric.Object.prototype, {
    _controlsVisibility: null,
    _findTargetCorner: function(t) {
      if (!this.hasControls || this.group || !this.canvas || this.canvas._activeObject !== this) return !1;
      var e,
        i,
        r = t.x,
        n = t.y;
      this.__corner = 0;
      for (var s in this.oCoords)
        if (
          this.isControlVisible(s) &&
          ('mtr' !== s || this.hasRotatingPoint) &&
          (!this.get('lockUniScaling') || ('mt' !== s && 'mr' !== s && 'mb' !== s && 'ml' !== s)) &&
          ((i = this._getImageLines(this.oCoords[s].corner)),
          (e = this._findCrossPoints({ x: r, y: n }, i)),
          0 !== e && e % 2 === 1)
        )
          return (this.__corner = s), s;
      return !1;
    },
    _setCornerCoords: function() {
      var e,
        i,
        r = this.oCoords,
        n = t(45 - this.angle),
        s = 0.707106 * this.cornerSize,
        o = s * fabric.util.cos(n),
        a = s * fabric.util.sin(n);
      for (var c in r)
        (e = r[c].x),
          (i = r[c].y),
          (r[c].corner = {
            tl: { x: e - a, y: i - o },
            tr: { x: e + o, y: i - a },
            bl: { x: e - o, y: i + a },
            br: { x: e + a, y: i + o }
          });
    },
    drawSelectionBackground: function(e) {
      if (
        !this.selectionBackgroundColor ||
        (this.canvas && !this.canvas.interactive) ||
        (this.canvas && this.canvas._activeObject !== this)
      )
        return this;
      e.save();
      var i = this.getCenterPoint(),
        r = this._calculateCurrentDimensions(),
        n = this.canvas.viewportTransform;
      return (
        e.translate(i.x, i.y),
        e.scale(1 / n[0], 1 / n[3]),
        e.rotate(t(this.angle)),
        (e.fillStyle = this.selectionBackgroundColor),
        e.fillRect(-r.x / 2, -r.y / 2, r.x, r.y),
        e.restore(),
        this
      );
    },
    drawBorders: function(t, e) {
      e = e || {};
      var i = this._calculateCurrentDimensions(),
        r = 1 / this.borderScaleFactor,
        n = i.x + r,
        s = i.y + r,
        o = 'undefined' != typeof e.hasRotatingPoint ? e.hasRotatingPoint : this.hasRotatingPoint,
        a = 'undefined' != typeof e.hasControls ? e.hasControls : this.hasControls,
        c = 'undefined' != typeof e.rotatingPointOffset ? e.rotatingPointOffset : this.rotatingPointOffset;
      if (
        (t.save(),
        (t.strokeStyle = e.borderColor || this.borderColor),
        this._setLineDash(t, e.borderDashArray || this.borderDashArray, null),
        t.strokeRect(-n / 2, -s / 2, n, s),
        o && this.isControlVisible('mtr') && a)
      ) {
        var l = -s / 2;
        t.beginPath(), t.moveTo(0, l), t.lineTo(0, l - c), t.stroke();
      }
      return t.restore(), this;
    },
    drawBordersInGroup: function(t, e, i) {
      i = i || {};
      var r = this._getNonTransformedDimensions(),
        n = fabric.util.composeMatrix({ scaleX: e.scaleX, scaleY: e.scaleY, skewX: e.skewX }),
        s = fabric.util.transformPoint(r, n),
        o = 1 / this.borderScaleFactor,
        a = s.x + o,
        c = s.y + o;
      return (
        t.save(),
        this._setLineDash(t, i.borderDashArray || this.borderDashArray, null),
        (t.strokeStyle = i.borderColor || this.borderColor),
        t.strokeRect(-a / 2, -c / 2, a, c),
        t.restore(),
        this
      );
    },
    drawControls: function(t, e) {
      e = e || {};
      var i = this._calculateCurrentDimensions(),
        r = i.x,
        n = i.y,
        s = e.cornerSize || this.cornerSize,
        o = -(r + s) / 2,
        a = -(n + s) / 2,
        c = 'undefined' != typeof e.transparentCorners ? e.transparentCorners : this.transparentCorners,
        l = 'undefined' != typeof e.hasRotatingPoint ? e.hasRotatingPoint : this.hasRotatingPoint,
        h = c ? 'stroke' : 'fill';
      return (
        t.save(),
        (t.strokeStyle = t.fillStyle = e.cornerColor || this.cornerColor),
        this.transparentCorners || (t.strokeStyle = e.cornerStrokeColor || this.cornerStrokeColor),
        this._setLineDash(t, e.cornerDashArray || this.cornerDashArray, null),
        this._drawControl('tl', t, h, o, a, e),
        this._drawControl('tr', t, h, o + r, a, e),
        this._drawControl('bl', t, h, o, a + n, e),
        this._drawControl('br', t, h, o + r, a + n, e),
        this.get('lockUniScaling') ||
          (this._drawControl('mt', t, h, o + r / 2, a, e),
          this._drawControl('mb', t, h, o + r / 2, a + n, e),
          this._drawControl('mr', t, h, o + r, a + n / 2, e),
          this._drawControl('ml', t, h, o, a + n / 2, e)),
        l && this._drawControl('mtr', t, h, o + r / 2, a - this.rotatingPointOffset, e),
        t.restore(),
        this
      );
    },
    _drawControl: function(t, e, i, r, n, s) {
      if (((s = s || {}), this.isControlVisible(t))) {
        var o = this.cornerSize,
          a = !this.transparentCorners && this.cornerStrokeColor;
        switch (s.cornerStyle || this.cornerStyle) {
          case 'circle':
            e.beginPath(), e.arc(r + o / 2, n + o / 2, o / 2, 0, 2 * Math.PI, !1), e[i](), a && e.stroke();
            break;
          default:
            this.transparentCorners || e.clearRect(r, n, o, o),
              e[i + 'Rect'](r, n, o, o),
              a && e.strokeRect(r, n, o, o);
        }
      }
    },
    isControlVisible: function(t) {
      return this._getControlsVisibility()[t];
    },
    setControlVisible: function(t, e) {
      return (this._getControlsVisibility()[t] = e), this;
    },
    setControlsVisibility: function(t) {
      t || (t = {});
      for (var e in t) this.setControlVisible(e, t[e]);
      return this;
    },
    _getControlsVisibility: function() {
      return (
        this._controlsVisibility ||
          (this._controlsVisibility = { tl: !0, tr: !0, br: !0, bl: !0, ml: !0, mt: !0, mr: !0, mb: !0, mtr: !0 }),
        this._controlsVisibility
      );
    },
    onDeselect: function() {},
    onSelect: function() {}
  });
})();
fabric.util.object.extend(fabric.StaticCanvas.prototype, {
  FX_DURATION: 500,
  fxCenterObjectH: function(t, e) {
    e = e || {};
    var i = function() {},
      n = e.onComplete || i,
      r = e.onChange || i,
      s = this;
    return (
      fabric.util.animate({
        startValue: t.left,
        endValue: this.getCenter().left,
        duration: this.FX_DURATION,
        onChange: function(e) {
          t.set('left', e), s.requestRenderAll(), r();
        },
        onComplete: function() {
          t.setCoords(), n();
        }
      }),
      this
    );
  },
  fxCenterObjectV: function(t, e) {
    e = e || {};
    var i = function() {},
      n = e.onComplete || i,
      r = e.onChange || i,
      s = this;
    return (
      fabric.util.animate({
        startValue: t.top,
        endValue: this.getCenter().top,
        duration: this.FX_DURATION,
        onChange: function(e) {
          t.set('top', e), s.requestRenderAll(), r();
        },
        onComplete: function() {
          t.setCoords(), n();
        }
      }),
      this
    );
  },
  fxRemove: function(t, e) {
    e = e || {};
    var i = function() {},
      n = e.onComplete || i,
      r = e.onChange || i,
      s = this;
    return (
      fabric.util.animate({
        startValue: t.opacity,
        endValue: 0,
        duration: this.FX_DURATION,
        onChange: function(e) {
          t.set('opacity', e), s.requestRenderAll(), r();
        },
        onComplete: function() {
          s.remove(t), n();
        }
      }),
      this
    );
  }
}),
  fabric.util.object.extend(fabric.Object.prototype, {
    animate: function() {
      if (arguments[0] && 'object' == typeof arguments[0]) {
        var t,
          e,
          i = [];
        for (t in arguments[0]) i.push(t);
        for (var n = 0, r = i.length; r > n; n++)
          (t = i[n]), (e = n !== r - 1), this._animate(t, arguments[0][t], arguments[1], e);
      } else this._animate.apply(this, arguments);
      return this;
    },
    _animate: function(t, e, i, n) {
      var r,
        s = this;
      (e = e.toString()), (i = i ? fabric.util.object.clone(i) : {}), ~t.indexOf('.') && (r = t.split('.'));
      var o = r ? this.get(r[0])[r[1]] : this.get(t);
      'from' in i || (i.from = o),
        (e = ~e.indexOf('=') ? o + parseFloat(e.replace('=', '')) : parseFloat(e)),
        fabric.util.animate({
          startValue: i.from,
          endValue: e,
          byValue: i.by,
          easing: i.easing,
          duration: i.duration,
          abort:
            i.abort &&
            function() {
              return i.abort.call(s);
            },
          onChange: function(e, o, a) {
            r ? (s[r[0]][r[1]] = e) : s.set(t, e), n || (i.onChange && i.onChange(e, o, a));
          },
          onComplete: function(t, e, r) {
            n || (s.setCoords(), i.onComplete && i.onComplete(t, e, r));
          }
        });
    }
  });
!(function(t) {
  'use strict';
  {
    var e = t.fabric || (t.fabric = {});
    e.util.object.extend;
  }
  return e.Rect
    ? void e.warn('fabric.Rect is already defined')
    : ((e.Rect = e.util.createClass(e.Object, {
        stateProperties: e.Object.prototype.stateProperties.concat('rx', 'ry'),
        type: 'rect',
        rx: 0,
        ry: 0,
        cacheProperties: e.Object.prototype.cacheProperties.concat('rx', 'ry'),
        initialize: function(t) {
          this.callSuper('initialize', t), this._initRxRy();
        },
        _initRxRy: function() {
          this.rx && !this.ry ? (this.ry = this.rx) : this.ry && !this.rx && (this.rx = this.ry);
        },
        _render: function(t) {
          var e = this.rx ? Math.min(this.rx, this.width / 2) : 0,
            i = this.ry ? Math.min(this.ry, this.height / 2) : 0,
            r = this.width,
            n = this.height,
            s = -this.width / 2,
            o = -this.height / 2,
            a = 0 !== e || 0 !== i,
            c = 0.4477152502;
          t.beginPath(),
            t.moveTo(s + e, o),
            t.lineTo(s + r - e, o),
            a && t.bezierCurveTo(s + r - c * e, o, s + r, o + c * i, s + r, o + i),
            t.lineTo(s + r, o + n - i),
            a && t.bezierCurveTo(s + r, o + n - c * i, s + r - c * e, o + n, s + r - e, o + n),
            t.lineTo(s + e, o + n),
            a && t.bezierCurveTo(s + c * e, o + n, s, o + n - c * i, s, o + n - i),
            t.lineTo(s, o + i),
            a && t.bezierCurveTo(s, o + c * i, s + c * e, o, s + e, o),
            t.closePath(),
            this._renderPaintInOrder(t);
        },
        _renderDashedStroke: function(t) {
          var i = -this.width / 2,
            r = -this.height / 2,
            n = this.width,
            s = this.height;
          t.beginPath(),
            e.util.drawDashedLine(t, i, r, i + n, r, this.strokeDashArray),
            e.util.drawDashedLine(t, i + n, r, i + n, r + s, this.strokeDashArray),
            e.util.drawDashedLine(t, i + n, r + s, i, r + s, this.strokeDashArray),
            e.util.drawDashedLine(t, i, r + s, i, r, this.strokeDashArray),
            t.closePath();
        },
        toObject: function(t) {
          return this.callSuper('toObject', ['rx', 'ry'].concat(t));
        }
      })),
      void (e.Rect.fromObject = function(t, i) {
        return e.Object._fromObject('Rect', t, i);
      }));
})('undefined' != typeof exports ? exports : this);
!(function(t) {
  'use strict';
  var e = t.fabric || (t.fabric = {}),
    i = e.util.array.min,
    r = e.util.array.max;
  e.Group ||
    ((e.Group = e.util.createClass(e.Object, e.Collection, {
      type: 'group',
      strokeWidth: 0,
      subTargetCheck: !1,
      cacheProperties: [],
      useSetOnGroup: !1,
      initialize: function(t, e, i) {
        (e = e || {}), (this._objects = []), i && this.callSuper('initialize', e), (this._objects = t || []);
        for (var r = this._objects.length; r--; ) this._objects[r].group = this;
        if (i) this._updateObjectsACoords();
        else {
          var n = e && e.centerPoint;
          void 0 !== e.originX && (this.originX = e.originX),
            void 0 !== e.originY && (this.originY = e.originY),
            n || this._calcBounds(),
            this._updateObjectsCoords(n),
            delete e.centerPoint,
            this.callSuper('initialize', e);
        }
        this.setCoords();
      },
      _updateObjectsACoords: function() {
        for (var t = !0, e = !0, i = this._objects.length; i--; ) this._objects[i].setCoords(t, e);
      },
      _updateObjectsCoords: function(t) {
        for (var t = t || this.getCenterPoint(), e = this._objects.length; e--; )
          this._updateObjectCoords(this._objects[e], t);
      },
      _updateObjectCoords: function(t, e) {
        var i = t.left,
          r = t.top,
          n = !0,
          s = !0;
        t.set({ left: i - e.x, top: r - e.y }), (t.group = this), t.setCoords(n, s);
      },
      toString: function() {
        return '#<fabric.Group: (' + this.complexity() + ')>';
      },
      addWithUpdate: function(t) {
        return (
          this._restoreObjectsState(),
          e.util.resetObjectTransform(this),
          t && (this._objects.push(t), (t.group = this), t._set('canvas', this.canvas)),
          this._calcBounds(),
          this._updateObjectsCoords(),
          this.setCoords(),
          (this.dirty = !0),
          this
        );
      },
      removeWithUpdate: function(t) {
        return (
          this._restoreObjectsState(),
          e.util.resetObjectTransform(this),
          this.remove(t),
          this._calcBounds(),
          this._updateObjectsCoords(),
          this.setCoords(),
          (this.dirty = !0),
          this
        );
      },
      _onObjectAdded: function(t) {
        (this.dirty = !0), (t.group = this), t._set('canvas', this.canvas);
      },
      _onObjectRemoved: function(t) {
        (this.dirty = !0), delete t.group;
      },
      _set: function(t, i) {
        var r = this._objects.length;
        if (this.useSetOnGroup) for (; r--; ) this._objects[r].setOnGroup(t, i);
        if ('canvas' === t) for (; r--; ) this._objects[r]._set(t, i);
        e.Object.prototype._set.call(this, t, i);
      },
      toObject: function(t) {
        var i = this.includeDefaultValues,
          r = this._objects.map(function(e) {
            var r = e.includeDefaultValues;
            e.includeDefaultValues = i;
            var n = e.toObject(t);
            return (e.includeDefaultValues = r), n;
          }),
          n = e.Object.prototype.toObject.call(this, t);
        return (n.objects = r), n;
      },
      toDatalessObject: function(t) {
        var i,
          r = this.sourcePath;
        if (r) i = r;
        else {
          var n = this.includeDefaultValues;
          i = this._objects.map(function(e) {
            var i = e.includeDefaultValues;
            e.includeDefaultValues = n;
            var r = e.toDatalessObject(t);
            return (e.includeDefaultValues = i), r;
          });
        }
        var s = e.Object.prototype.toDatalessObject.call(this, t);
        return (s.objects = i), s;
      },
      render: function(t) {
        (this._transformDone = !0), this.callSuper('render', t), (this._transformDone = !1);
      },
      shouldCache: function() {
        var t = e.Object.prototype.shouldCache.call(this);
        if (t)
          for (var i = 0, r = this._objects.length; r > i; i++)
            if (this._objects[i].willDrawShadow()) return (this.ownCaching = !1), !1;
        return t;
      },
      willDrawShadow: function() {
        if (this.shadow) return e.Object.prototype.willDrawShadow.call(this);
        for (var t = 0, i = this._objects.length; i > t; t++) if (this._objects[t].willDrawShadow()) return !0;
        return !1;
      },
      isOnACache: function() {
        return this.ownCaching || (this.group && this.group.isOnACache());
      },
      drawObject: function(t) {
        for (var e = 0, i = this._objects.length; i > e; e++) this._objects[e].render(t);
        this._drawClipPath(t);
      },
      isCacheDirty: function(t) {
        if (this.callSuper('isCacheDirty', t)) return !0;
        if (!this.statefullCache) return !1;
        for (var e = 0, i = this._objects.length; i > e; e++)
          if (this._objects[e].isCacheDirty(!0)) {
            if (this._cacheCanvas) {
              var r = this.cacheWidth / this.zoomX,
                n = this.cacheHeight / this.zoomY;
              this._cacheContext.clearRect(-r / 2, -n / 2, r, n);
            }
            return !0;
          }
        return !1;
      },
      _restoreObjectsState: function() {
        return this._objects.forEach(this._restoreObjectState, this), this;
      },
      realizeTransform: function(t) {
        var i = t.calcTransformMatrix(),
          r = e.util.qrDecompose(i),
          n = new e.Point(r.translateX, r.translateY);
        return (
          (t.flipX = !1),
          (t.flipY = !1),
          t.set('scaleX', r.scaleX),
          t.set('scaleY', r.scaleY),
          (t.skewX = r.skewX),
          (t.skewY = r.skewY),
          (t.angle = r.angle),
          t.setPositionByOrigin(n, 'center', 'center'),
          t
        );
      },
      _restoreObjectState: function(t) {
        return this.realizeTransform(t), t.setCoords(), delete t.group, this;
      },
      destroy: function() {
        return (
          this._objects.forEach(function(t) {
            t.set('dirty', !0);
          }),
          this._restoreObjectsState()
        );
      },
      toActiveSelection: function() {
        if (this.canvas) {
          var t = this._objects,
            i = this.canvas;
          this._objects = [];
          var r = this.toObject();
          delete r.objects;
          var n = new e.ActiveSelection([]);
          return (
            n.set(r),
            (n.type = 'activeSelection'),
            i.remove(this),
            t.forEach(function(t) {
              (t.group = n), (t.dirty = !0), i.add(t);
            }),
            (n.canvas = i),
            (n._objects = t),
            (i._activeObject = n),
            n.setCoords(),
            n
          );
        }
      },
      ungroupOnCanvas: function() {
        return this._restoreObjectsState();
      },
      setObjectsCoords: function() {
        var t = !0,
          e = !0;
        return (
          this.forEachObject(function(i) {
            i.setCoords(t, e);
          }),
          this
        );
      },
      _calcBounds: function(t) {
        for (
          var e,
            i,
            r,
            n = [],
            s = [],
            o = ['tr', 'br', 'bl', 'tl'],
            a = 0,
            c = this._objects.length,
            l = o.length,
            h = !0;
          c > a;
          ++a
        )
          for (e = this._objects[a], e.setCoords(h), r = 0; l > r; r++)
            (i = o[r]), n.push(e.oCoords[i].x), s.push(e.oCoords[i].y);
        this._getBounds(n, s, t);
      },
      _getBounds: function(t, n, s) {
        var o = new e.Point(i(t), i(n)),
          a = new e.Point(r(t), r(n)),
          c = o.y || 0,
          l = o.x || 0,
          h = a.x - o.x || 0,
          u = a.y - o.y || 0;
        (this.width = h), (this.height = u), s || this.setPositionByOrigin({ x: l, y: c }, 'left', 'top');
      }
    })),
    (e.Group.fromObject = function(t, i) {
      e.util.enlivenObjects(t.objects, function(r) {
        e.util.enlivenObjects([t.clipPath], function(n) {
          var s = e.util.object.clone(t, !0);
          (s.clipPath = n[0]), delete s.objects, i && i(new e.Group(r, s, !0));
        });
      });
    }));
})('undefined' != typeof exports ? exports : this);
!(function(t) {
  'use strict';
  var e = t.fabric || (t.fabric = {});
  e.ActiveSelection ||
    ((e.ActiveSelection = e.util.createClass(e.Group, {
      type: 'activeSelection',
      initialize: function(t, i) {
        (i = i || {}), (this._objects = t || []);
        for (var r = this._objects.length; r--; ) this._objects[r].group = this;
        i.originX && (this.originX = i.originX),
          i.originY && (this.originY = i.originY),
          this._calcBounds(),
          this._updateObjectsCoords(),
          e.Object.prototype.initialize.call(this, i),
          this.setCoords();
      },
      toGroup: function() {
        var t = this._objects.concat();
        this._objects = [];
        var i = e.Object.prototype.toObject.call(this),
          r = new e.Group([]);
        if (
          (delete i.type,
          r.set(i),
          t.forEach(function(t) {
            t.canvas.remove(t), (t.group = r);
          }),
          (r._objects = t),
          !this.canvas)
        )
          return r;
        var n = this.canvas;
        return n.add(r), (n._activeObject = r), r.setCoords(), r;
      },
      onDeselect: function() {
        return this.destroy(), !1;
      },
      toString: function() {
        return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';
      },
      shouldCache: function() {
        return !1;
      },
      isOnACache: function() {
        return !1;
      },
      _renderControls: function(t, e, i) {
        t.save(),
          (t.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1),
          this.callSuper('_renderControls', t, e),
          (i = i || {}),
          'undefined' == typeof i.hasControls && (i.hasControls = !1),
          'undefined' == typeof i.hasRotatingPoint && (i.hasRotatingPoint = !1),
          (i.forActiveSelection = !0);
        for (var r = 0, n = this._objects.length; n > r; r++) this._objects[r]._renderControls(t, i);
        t.restore();
      }
    })),
    (e.ActiveSelection.fromObject = function(t, i) {
      e.util.enlivenObjects(t.objects, function(r) {
        delete t.objects, i && i(new e.ActiveSelection(r, t, !0));
      });
    }));
})('undefined' != typeof exports ? exports : this);
!(function(t) {
  'use strict';
  var e = fabric.util.object.extend;
  return (
    t.fabric || (t.fabric = {}),
    t.fabric.Image
      ? void fabric.warn('fabric.Image is already defined.')
      : ((fabric.Image = fabric.util.createClass(fabric.Object, {
          type: 'image',
          crossOrigin: '',
          strokeWidth: 0,
          srcFromAttribute: !1,
          _lastScaleX: 1,
          _lastScaleY: 1,
          _filterScalingX: 1,
          _filterScalingY: 1,
          minimumScaleTrigger: 0.5,
          stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),
          cacheKey: '',
          cropX: 0,
          cropY: 0,
          initialize: function(t, e) {
            e || (e = {}),
              (this.filters = []),
              (this.cacheKey = 'texture' + fabric.Object.__uid++),
              this.callSuper('initialize', e),
              this._initElement(t, e);
          },
          getElement: function() {
            return this._element || {};
          },
          setElement: function(t, e) {
            return (
              this.removeTexture(this.cacheKey),
              this.removeTexture(this.cacheKey + '_filtered'),
              (this._element = t),
              (this._originalElement = t),
              this._initConfig(e),
              0 !== this.filters.length && this.applyFilters(),
              this.resizeFilter && this.applyResizeFilters(),
              this
            );
          },
          removeTexture: function(t) {
            var e = fabric.filterBackend;
            e && e.evictCachesForKey && e.evictCachesForKey(t);
          },
          dispose: function() {
            this.removeTexture(this.cacheKey),
              this.removeTexture(this.cacheKey + '_filtered'),
              (this._cacheContext = void 0),
              ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach(
                function(t) {
                  fabric.util.cleanUpJsdomNode(this[t]), (this[t] = void 0);
                }.bind(this)
              );
          },
          setCrossOrigin: function(t) {
            return (this.crossOrigin = t), (this._element.crossOrigin = t), this;
          },
          getOriginalSize: function() {
            var t = this.getElement();
            return { width: t.naturalWidth || t.width, height: t.naturalHeight || t.height };
          },
          _stroke: function(t) {
            if (this.stroke && 0 !== this.strokeWidth) {
              var e = this.width / 2,
                i = this.height / 2;
              t.beginPath(),
                t.moveTo(-e, -i),
                t.lineTo(e, -i),
                t.lineTo(e, i),
                t.lineTo(-e, i),
                t.lineTo(-e, -i),
                t.closePath();
            }
          },
          _renderDashedStroke: function(t) {
            var e = -this.width / 2,
              i = -this.height / 2,
              r = this.width,
              n = this.height;
            t.save(),
              this._setStrokeStyles(t, this),
              t.beginPath(),
              fabric.util.drawDashedLine(t, e, i, e + r, i, this.strokeDashArray),
              fabric.util.drawDashedLine(t, e + r, i, e + r, i + n, this.strokeDashArray),
              fabric.util.drawDashedLine(t, e + r, i + n, e, i + n, this.strokeDashArray),
              fabric.util.drawDashedLine(t, e, i + n, e, i, this.strokeDashArray),
              t.closePath(),
              t.restore();
          },
          toObject: function(t) {
            var i = [];
            this.filters.forEach(function(t) {
              t && i.push(t.toObject());
            });
            var r = e(this.callSuper('toObject', ['crossOrigin', 'cropX', 'cropY'].concat(t)), {
              src: this.getSrc(),
              filters: i
            });
            return this.resizeFilter && (r.resizeFilter = this.resizeFilter.toObject()), r;
          },
          hasCrop: function() {
            return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;
          },
          getSrc: function(t) {
            var e = t ? this._element : this._originalElement;
            return e
              ? e.toDataURL
                ? e.toDataURL()
                : this.srcFromAttribute
                ? e.getAttribute('src')
                : e.src
              : this.src || '';
          },
          setSrc: function(t, e, i) {
            return (
              fabric.util.loadImage(
                t,
                function(t) {
                  this.setElement(t, i), this._setWidthHeight(), e && e(this);
                },
                this,
                i && i.crossOrigin
              ),
              this
            );
          },
          toString: function() {
            return '#<fabric.Image: { src: "' + this.getSrc() + '" }>';
          },
          applyResizeFilters: function() {
            var t = this.resizeFilter,
              e = this.minimumScaleTrigger,
              i = this.getTotalObjectScaling(),
              r = i.scaleX,
              n = i.scaleY,
              s = this._filteredEl || this._originalElement;
            if ((this.group && this.set('dirty', !0), !t || (r > e && n > e)))
              return (
                (this._element = s),
                (this._filterScalingX = 1),
                (this._filterScalingY = 1),
                (this._lastScaleX = r),
                void (this._lastScaleY = n)
              );
            fabric.filterBackend || (fabric.filterBackend = fabric.initFilterBackend());
            var o = fabric.util.createCanvasElement(),
              a = this._filteredEl ? this.cacheKey + '_filtered' : this.cacheKey,
              c = s.width,
              l = s.height;
            (o.width = c),
              (o.height = l),
              (this._element = o),
              (this._lastScaleX = t.scaleX = r),
              (this._lastScaleY = t.scaleY = n),
              fabric.filterBackend.applyFilters([t], s, c, l, this._element, a),
              (this._filterScalingX = o.width / this._originalElement.width),
              (this._filterScalingY = o.height / this._originalElement.height);
          },
          applyFilters: function(t) {
            if (
              ((t = t || this.filters || []),
              (t = t.filter(function(t) {
                return t && !t.isNeutralState();
              })),
              this.set('dirty', !0),
              this.removeTexture(this.cacheKey + '_filtered'),
              0 === t.length)
            )
              return (
                (this._element = this._originalElement),
                (this._filteredEl = null),
                (this._filterScalingX = 1),
                (this._filterScalingY = 1),
                this
              );
            var e = this._originalElement,
              i = e.naturalWidth || e.width,
              r = e.naturalHeight || e.height;
            if (this._element === this._originalElement) {
              var n = fabric.util.createCanvasElement();
              (n.width = i), (n.height = r), (this._element = n), (this._filteredEl = n);
            } else
              (this._element = this._filteredEl),
                this._filteredEl.getContext('2d').clearRect(0, 0, i, r),
                (this._lastScaleX = 1),
                (this._lastScaleY = 1);
            return (
              fabric.filterBackend || (fabric.filterBackend = fabric.initFilterBackend()),
              fabric.filterBackend.applyFilters(t, this._originalElement, i, r, this._element, this.cacheKey),
              (this._originalElement.width !== this._element.width ||
                this._originalElement.height !== this._element.height) &&
                ((this._filterScalingX = this._element.width / this._originalElement.width),
                (this._filterScalingY = this._element.height / this._originalElement.height)),
              this
            );
          },
          _render: function(t) {
            this.isMoving !== !0 && this.resizeFilter && this._needsResize() && this.applyResizeFilters(),
              this._stroke(t),
              this._renderPaintInOrder(t);
          },
          shouldCache: function() {
            return this.needsItsOwnCache();
          },
          _renderFill: function(t) {
            var e = this._element,
              i = this.width,
              r = this.height,
              n = Math.min(e.naturalWidth || e.width, i * this._filterScalingX),
              s = Math.min(e.naturalHeight || e.height, r * this._filterScalingY),
              o = -i / 2,
              a = -r / 2,
              c = Math.max(0, this.cropX * this._filterScalingX),
              l = Math.max(0, this.cropY * this._filterScalingY);
            e && t.drawImage(e, c, l, n, s, o, a, i, r);
          },
          _needsResize: function() {
            var t = this.getTotalObjectScaling();
            return t.scaleX !== this._lastScaleX || t.scaleY !== this._lastScaleY;
          },
          _resetWidthHeight: function() {
            this.set(this.getOriginalSize());
          },
          _initElement: function(t, e) {
            this.setElement(fabric.util.getById(t), e),
              fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);
          },
          _initConfig: function(t) {
            t || (t = {}),
              this.setOptions(t),
              this._setWidthHeight(t),
              this._element && this.crossOrigin && (this._element.crossOrigin = this.crossOrigin);
          },
          _initFilters: function(t, e) {
            t && t.length
              ? fabric.util.enlivenObjects(
                  t,
                  function(t) {
                    e && e(t);
                  },
                  'fabric.Image.filters'
                )
              : e && e();
          },
          _setWidthHeight: function(t) {
            t || (t = {});
            var e = this.getElement();
            (this.width = t.width || e.naturalWidth || e.width || 0),
              (this.height = t.height || e.naturalHeight || e.height || 0);
          },
          parsePreserveAspectRatioAttribute: function() {
            var t,
              e = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),
              i = this._element.width,
              r = this._element.height,
              n = 1,
              s = 1,
              o = 0,
              a = 0,
              c = 0,
              l = 0,
              h = this.width,
              u = this.height,
              f = { width: h, height: u };
            return (
              !e || ('none' === e.alignX && 'none' === e.alignY)
                ? ((n = h / i), (s = u / r))
                : ('meet' === e.meetOrSlice &&
                    ((n = s = fabric.util.findScaleToFit(this._element, f)),
                    (t = (h - i * n) / 2),
                    'Min' === e.alignX && (o = -t),
                    'Max' === e.alignX && (o = t),
                    (t = (u - r * s) / 2),
                    'Min' === e.alignY && (a = -t),
                    'Max' === e.alignY && (a = t)),
                  'slice' === e.meetOrSlice &&
                    ((n = s = fabric.util.findScaleToCover(this._element, f)),
                    (t = i - h / n),
                    'Mid' === e.alignX && (c = t / 2),
                    'Max' === e.alignX && (c = t),
                    (t = r - u / s),
                    'Mid' === e.alignY && (l = t / 2),
                    'Max' === e.alignY && (l = t),
                    (i = h / n),
                    (r = u / s))),
              { width: i, height: r, scaleX: n, scaleY: s, offsetLeft: o, offsetTop: a, cropX: c, cropY: l }
            );
          }
        })),
        (fabric.Image.CSS_CANVAS = 'canvas-img'),
        (fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc),
        (fabric.Image.fromObject = function(t, e) {
          var i = fabric.util.object.clone(t);
          fabric.util.loadImage(
            i.src,
            function(t, r) {
              return r
                ? void (e && e(null, r))
                : void fabric.Image.prototype._initFilters.call(i, i.filters, function(r) {
                    (i.filters = r || []),
                      fabric.Image.prototype._initFilters.call(i, [i.resizeFilter], function(r) {
                        (i.resizeFilter = r[0]),
                          fabric.util.enlivenObjects([i.clipPath], function(r) {
                            i.clipPath = r[0];
                            var n = new fabric.Image(t, i);
                            e(n);
                          });
                      });
                  });
            },
            null,
            i.crossOrigin
          );
        }),
        void (fabric.Image.fromURL = function(t, e, i) {
          fabric.util.loadImage(
            t,
            function(t) {
              e && e(new fabric.Image(t, i));
            },
            null,
            i && i.crossOrigin
          );
        }))
  );
})('undefined' != typeof exports ? exports : this);
!(function(t) {
  'use strict';
  var e = t.fabric || (t.fabric = {}),
    i = e.util.object.clone;
  return e.Text
    ? void e.warn('fabric.Text is already defined')
    : ((e.Text = e.util.createClass(e.Object, {
        _dimensionAffectingProps: [
          'fontSize',
          'fontWeight',
          'fontFamily',
          'fontStyle',
          'lineHeight',
          'text',
          'charSpacing',
          'textAlign',
          'styles'
        ],
        _reNewline: /\r?\n/,
        _reSpacesAndTabs: /[ \t\r]/g,
        _reSpaceAndTab: /[ \t\r]/,
        _reWords: /\S+/g,
        type: 'text',
        fontSize: 40,
        fontWeight: 'normal',
        fontFamily: 'Times New Roman',
        underline: !1,
        overline: !1,
        linethrough: !1,
        textAlign: 'left',
        fontStyle: 'normal',
        lineHeight: 1.16,
        superscript: { size: 0.6, baseline: -0.35 },
        subscript: { size: 0.6, baseline: 0.11 },
        textBackgroundColor: '',
        stateProperties: e.Object.prototype.stateProperties.concat(
          'fontFamily',
          'fontWeight',
          'fontSize',
          'text',
          'underline',
          'overline',
          'linethrough',
          'textAlign',
          'fontStyle',
          'lineHeight',
          'textBackgroundColor',
          'charSpacing',
          'styles'
        ),
        cacheProperties: e.Object.prototype.cacheProperties.concat(
          'fontFamily',
          'fontWeight',
          'fontSize',
          'text',
          'underline',
          'overline',
          'linethrough',
          'textAlign',
          'fontStyle',
          'lineHeight',
          'textBackgroundColor',
          'charSpacing',
          'styles'
        ),
        stroke: null,
        shadow: null,
        _fontSizeFraction: 0.222,
        offsets: { underline: 0.1, linethrough: -0.315, overline: -0.88 },
        _fontSizeMult: 1.13,
        charSpacing: 0,
        styles: null,
        _measuringContext: null,
        deltaY: 0,
        _styleProperties: [
          'stroke',
          'strokeWidth',
          'fill',
          'fontFamily',
          'fontSize',
          'fontWeight',
          'fontStyle',
          'underline',
          'overline',
          'linethrough',
          'deltaY',
          'textBackgroundColor'
        ],
        __charBounds: [],
        CACHE_FONT_SIZE: 400,
        MIN_TEXT_WIDTH: 2,
        initialize: function(t, e) {
          (this.styles = e ? e.styles || {} : {}),
            (this.text = t),
            (this.__skipDimension = !0),
            this.callSuper('initialize', e),
            (this.__skipDimension = !1),
            this.initDimensions(),
            this.setCoords(),
            this.setupState({ propertySet: '_dimensionAffectingProps' });
        },
        getMeasuringContext: function() {
          return (
            e._measuringContext ||
              (e._measuringContext =
                (this.canvas && this.canvas.contextCache) || e.util.createCanvasElement().getContext('2d')),
            e._measuringContext
          );
        },
        _splitText: function() {
          var t = this._splitTextIntoLines(this.text);
          return (
            (this.textLines = t.lines),
            (this._textLines = t.graphemeLines),
            (this._unwrappedTextLines = t._unwrappedLines),
            (this._text = t.graphemeText),
            t
          );
        },
        initDimensions: function() {
          this.__skipDimension ||
            (this._splitText(),
            this._clearCache(),
            (this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH),
            -1 !== this.textAlign.indexOf('justify') && this.enlargeSpaces(),
            (this.height = this.calcTextHeight()),
            this.saveState({ propertySet: '_dimensionAffectingProps' }));
        },
        enlargeSpaces: function() {
          for (var t, e, i, r, n, s, o, a = 0, c = this._textLines.length; c > a; a++)
            if (
              ('justify' === this.textAlign || (a !== c - 1 && !this.isEndOfWrapping(a))) &&
              ((r = 0),
              (n = this._textLines[a]),
              (e = this.getLineWidth(a)),
              e < this.width && (o = this.textLines[a].match(this._reSpacesAndTabs)))
            ) {
              (i = o.length), (t = (this.width - e) / i);
              for (var h = 0, l = n.length; l >= h; h++)
                (s = this.__charBounds[a][h]),
                  this._reSpaceAndTab.test(n[h])
                    ? ((s.width += t), (s.kernedWidth += t), (s.left += r), (r += t))
                    : (s.left += r);
            }
        },
        isEndOfWrapping: function(t) {
          return t === this._textLines.length - 1;
        },
        missingNewlineOffset: function() {
          return 1;
        },
        toString: function() {
          return (
            '#<fabric.Text (' +
            this.complexity() +
            '): { "text": "' +
            this.text +
            '", "fontFamily": "' +
            this.fontFamily +
            '" }>'
          );
        },
        _getCacheCanvasDimensions: function() {
          var t = this.callSuper('_getCacheCanvasDimensions'),
            e = this.fontSize;
          return (t.width += e * t.zoomX), (t.height += e * t.zoomY), t;
        },
        _render: function(t) {
          this._setTextStyles(t),
            this._renderTextLinesBackground(t),
            this._renderTextDecoration(t, 'underline'),
            this._renderText(t),
            this._renderTextDecoration(t, 'overline'),
            this._renderTextDecoration(t, 'linethrough');
        },
        _renderText: function(t) {
          'stroke' === this.paintFirst
            ? (this._renderTextStroke(t), this._renderTextFill(t))
            : (this._renderTextFill(t), this._renderTextStroke(t));
        },
        _setTextStyles: function(t, e, i) {
          (t.textBaseline = 'alphabetic'), (t.font = this._getFontDeclaration(e, i));
        },
        calcTextWidth: function() {
          for (var t = this.getLineWidth(0), e = 1, i = this._textLines.length; i > e; e++) {
            var r = this.getLineWidth(e);
            r > t && (t = r);
          }
          return t;
        },
        _renderTextLine: function(t, e, i, r, n, s) {
          this._renderChars(t, e, i, r, n, s);
        },
        _renderTextLinesBackground: function(t) {
          if (this.textBackgroundColor || this.styleHas('textBackgroundColor')) {
            for (
              var e,
                i,
                r,
                n,
                s,
                o,
                a = 0,
                c = t.fillStyle,
                h = this._getLeftOffset(),
                l = this._getTopOffset(),
                u = 0,
                f = 0,
                d = 0,
                g = this._textLines.length;
              g > d;
              d++
            )
              if (
                ((e = this.getHeightOfLine(d)), this.textBackgroundColor || this.styleHas('textBackgroundColor', d))
              ) {
                (r = this._textLines[d]),
                  (i = this._getLineLeftOffset(d)),
                  (f = 0),
                  (u = 0),
                  (n = this.getValueOfPropertyAt(d, 0, 'textBackgroundColor'));
                for (var v = 0, p = r.length; p > v; v++)
                  (s = this.__charBounds[d][v]),
                    (o = this.getValueOfPropertyAt(d, v, 'textBackgroundColor')),
                    o !== n
                      ? ((t.fillStyle = n),
                        n && t.fillRect(h + i + u, l + a, f, e / this.lineHeight),
                        (u = s.left),
                        (f = s.width),
                        (n = o))
                      : (f += s.kernedWidth);
                o && ((t.fillStyle = o), t.fillRect(h + i + u, l + a, f, e / this.lineHeight)), (a += e);
              } else a += e;
            (t.fillStyle = c), this._removeShadow(t);
          }
        },
        getFontCache: function(t) {
          var i = t.fontFamily.toLowerCase();
          e.charWidthsCache[i] || (e.charWidthsCache[i] = {});
          var r = e.charWidthsCache[i],
            n = t.fontStyle.toLowerCase() + '_' + (t.fontWeight + '').toLowerCase();
          return r[n] || (r[n] = {}), r[n];
        },
        _applyCharStyles: function(t, e, i, r, n) {
          this._setFillStyles(e, n), this._setStrokeStyles(e, n), (e.font = this._getFontDeclaration(n));
        },
        _measureChar: function(t, e, i, r) {
          var n,
            s,
            o,
            a,
            c = this.getFontCache(e),
            h = this._getFontDeclaration(e),
            l = this._getFontDeclaration(r),
            u = i + t,
            f = h === l,
            d = e.fontSize / this.CACHE_FONT_SIZE;
          if (
            (i && void 0 !== c[i] && (o = c[i]),
            void 0 !== c[t] && (a = n = c[t]),
            f && void 0 !== c[u] && ((s = c[u]), (a = s - o)),
            void 0 === n || void 0 === o || void 0 === s)
          ) {
            var g = this.getMeasuringContext();
            this._setTextStyles(g, e, !0);
          }
          return (
            void 0 === n && ((a = n = g.measureText(t).width), (c[t] = n)),
            void 0 === o && f && i && ((o = g.measureText(i).width), (c[i] = o)),
            f && void 0 === s && ((s = g.measureText(u).width), (c[u] = s), (a = s - o)),
            { width: n * d, kernedWidth: a * d }
          );
        },
        getHeightOfChar: function(t, e) {
          return this.getValueOfPropertyAt(t, e, 'fontSize');
        },
        measureLine: function(t) {
          var e = this._measureLine(t);
          return 0 !== this.charSpacing && (e.width -= this._getWidthOfCharSpacing()), e.width < 0 && (e.width = 0), e;
        },
        _measureLine: function(t) {
          var e,
            i,
            r,
            n,
            s = 0,
            o = this._textLines[t],
            a = 0,
            c = new Array(o.length);
          for (this.__charBounds[t] = c, e = 0; e < o.length; e++)
            (i = o[e]), (n = this._getGraphemeBox(i, t, e, r)), (c[e] = n), (s += n.kernedWidth), (r = i);
          return (
            (c[e] = { left: n ? n.left + n.width : 0, width: 0, kernedWidth: 0, height: this.fontSize }),
            { width: s, numOfSpaces: a }
          );
        },
        _getGraphemeBox: function(t, e, i, r, n) {
          var s,
            o = this.getCompleteStyleDeclaration(e, i),
            a = r ? this.getCompleteStyleDeclaration(e, i - 1) : {},
            c = this._measureChar(t, o, r, a),
            h = c.kernedWidth,
            l = c.width;
          0 !== this.charSpacing && ((s = this._getWidthOfCharSpacing()), (l += s), (h += s));
          var u = { width: l, left: 0, height: o.fontSize, kernedWidth: h, deltaY: o.deltaY };
          if (i > 0 && !n) {
            var f = this.__charBounds[e][i - 1];
            u.left = f.left + f.width + c.kernedWidth - c.width;
          }
          return u;
        },
        getHeightOfLine: function(t) {
          if (this.__lineHeights[t]) return this.__lineHeights[t];
          for (var e = this._textLines[t], i = this.getHeightOfChar(t, 0), r = 1, n = e.length; n > r; r++)
            i = Math.max(this.getHeightOfChar(t, r), i);
          return (this.__lineHeights[t] = i * this.lineHeight * this._fontSizeMult);
        },
        calcTextHeight: function() {
          for (var t, e = 0, i = 0, r = this._textLines.length; r > i; i++)
            (t = this.getHeightOfLine(i)), (e += i === r - 1 ? t / this.lineHeight : t);
          return e;
        },
        _getLeftOffset: function() {
          return -this.width / 2;
        },
        _getTopOffset: function() {
          return -this.height / 2;
        },
        _renderTextCommon: function(t, e) {
          t.save();
          for (
            var i = 0,
              r = this._getLeftOffset(),
              n = this._getTopOffset(),
              s = this._applyPatternGradientTransform(t, 'fillText' === e ? this.fill : this.stroke),
              o = 0,
              a = this._textLines.length;
            a > o;
            o++
          ) {
            var c = this.getHeightOfLine(o),
              h = c / this.lineHeight,
              l = this._getLineLeftOffset(o);
            this._renderTextLine(e, t, this._textLines[o], r + l - s.offsetX, n + i + h - s.offsetY, o), (i += c);
          }
          t.restore();
        },
        _renderTextFill: function(t) {
          (this.fill || this.styleHas('fill')) && this._renderTextCommon(t, 'fillText');
        },
        _renderTextStroke: function(t) {
          ((this.stroke && 0 !== this.strokeWidth) || !this.isEmptyStyles()) &&
            (this.shadow && !this.shadow.affectStroke && this._removeShadow(t),
            t.save(),
            this._setLineDash(t, this.strokeDashArray),
            t.beginPath(),
            this._renderTextCommon(t, 'strokeText'),
            t.closePath(),
            t.restore());
        },
        _renderChars: function(t, e, i, r, n, s) {
          var o,
            a,
            c,
            h,
            l = this.getHeightOfLine(s),
            u = -1 !== this.textAlign.indexOf('justify'),
            f = '',
            d = 0,
            g = !u && 0 === this.charSpacing && this.isEmptyStyles(s);
          if ((e.save(), (n -= (l * this._fontSizeFraction) / this.lineHeight), g))
            return this._renderChar(t, e, s, 0, this.textLines[s], r, n, l), void e.restore();
          for (var v = 0, p = i.length - 1; p >= v; v++)
            (h = v === p || this.charSpacing),
              (f += i[v]),
              (c = this.__charBounds[s][v]),
              0 === d ? ((r += c.kernedWidth - c.width), (d += c.width)) : (d += c.kernedWidth),
              u && !h && this._reSpaceAndTab.test(i[v]) && (h = !0),
              h ||
                ((o = o || this.getCompleteStyleDeclaration(s, v)),
                (a = this.getCompleteStyleDeclaration(s, v + 1)),
                (h = this._hasStyleChanged(o, a))),
              h && (this._renderChar(t, e, s, v, f, r, n, l), (f = ''), (o = a), (r += d), (d = 0));
          e.restore();
        },
        _renderChar: function(t, e, i, r, n, s, o) {
          var a = this._getStyleDeclaration(i, r),
            c = this.getCompleteStyleDeclaration(i, r),
            h = 'fillText' === t && c.fill,
            l = 'strokeText' === t && c.stroke && c.strokeWidth;
          (l || h) &&
            (a && e.save(),
            this._applyCharStyles(t, e, i, r, c),
            a && a.textBackgroundColor && this._removeShadow(e),
            a && a.deltaY && (o += a.deltaY),
            h && e.fillText(n, s, o),
            l && e.strokeText(n, s, o),
            a && e.restore());
        },
        setSuperscript: function(t, e) {
          return this._setScript(t, e, this.superscript);
        },
        setSubscript: function(t, e) {
          return this._setScript(t, e, this.subscript);
        },
        _setScript: function(t, e, i) {
          var r = this.get2DCursorLocation(t, !0),
            n = this.getValueOfPropertyAt(r.lineIndex, r.charIndex, 'fontSize'),
            s = this.getValueOfPropertyAt(r.lineIndex, r.charIndex, 'deltaY'),
            o = { fontSize: n * i.size, deltaY: s + n * i.baseline };
          return this.setSelectionStyles(o, t, e), this;
        },
        _hasStyleChanged: function(t, e) {
          return (
            t.fill !== e.fill ||
            t.stroke !== e.stroke ||
            t.strokeWidth !== e.strokeWidth ||
            t.fontSize !== e.fontSize ||
            t.fontFamily !== e.fontFamily ||
            t.fontWeight !== e.fontWeight ||
            t.fontStyle !== e.fontStyle ||
            t.deltaY !== e.deltaY
          );
        },
        _hasStyleChangedForSvg: function(t, e) {
          return (
            this._hasStyleChanged(t, e) ||
            t.overline !== e.overline ||
            t.underline !== e.underline ||
            t.linethrough !== e.linethrough
          );
        },
        _getLineLeftOffset: function(t) {
          var e = this.getLineWidth(t);
          return 'center' === this.textAlign
            ? (this.width - e) / 2
            : 'right' === this.textAlign
            ? this.width - e
            : 'justify-center' === this.textAlign && this.isEndOfWrapping(t)
            ? (this.width - e) / 2
            : 'justify-right' === this.textAlign && this.isEndOfWrapping(t)
            ? this.width - e
            : 0;
        },
        _clearCache: function() {
          (this.__lineWidths = []), (this.__lineHeights = []), (this.__charBounds = []);
        },
        _shouldClearDimensionCache: function() {
          var t = this._forceClearCache;
          return (
            t || (t = this.hasStateChanged('_dimensionAffectingProps')),
            t && ((this.dirty = !0), (this._forceClearCache = !1)),
            t
          );
        },
        getLineWidth: function(t) {
          if (this.__lineWidths[t]) return this.__lineWidths[t];
          var e,
            i,
            r = this._textLines[t];
          return '' === r ? (e = 0) : ((i = this.measureLine(t)), (e = i.width)), (this.__lineWidths[t] = e), e;
        },
        _getWidthOfCharSpacing: function() {
          return 0 !== this.charSpacing ? (this.fontSize * this.charSpacing) / 1e3 : 0;
        },
        getValueOfPropertyAt: function(t, e, i) {
          var r = this._getStyleDeclaration(t, e);
          return r && 'undefined' != typeof r[i] ? r[i] : this[i];
        },
        _renderTextDecoration: function(t, e) {
          if (this[e] || this.styleHas(e)) {
            for (
              var i,
                r,
                n,
                s,
                o,
                a,
                c,
                h,
                l,
                u,
                f,
                d,
                g,
                v,
                p,
                m,
                b = this._getLeftOffset(),
                y = this._getTopOffset(),
                _ = this._getWidthOfCharSpacing(),
                C = 0,
                w = this._textLines.length;
              w > C;
              C++
            )
              if (((i = this.getHeightOfLine(C)), this[e] || this.styleHas(e, C))) {
                (c = this._textLines[C]),
                  (v = i / this.lineHeight),
                  (s = this._getLineLeftOffset(C)),
                  (u = 0),
                  (f = 0),
                  (h = this.getValueOfPropertyAt(C, 0, e)),
                  (m = this.getValueOfPropertyAt(C, 0, 'fill')),
                  (l = y + v * (1 - this._fontSizeFraction)),
                  (r = this.getHeightOfChar(C, 0)),
                  (o = this.getValueOfPropertyAt(C, 0, 'deltaY'));
                for (var x = 0, j = c.length; j > x; x++)
                  (d = this.__charBounds[C][x]),
                    (g = this.getValueOfPropertyAt(C, x, e)),
                    (p = this.getValueOfPropertyAt(C, x, 'fill')),
                    (n = this.getHeightOfChar(C, x)),
                    (a = this.getValueOfPropertyAt(C, x, 'deltaY')),
                    (g !== h || p !== m || n !== r || a !== o) && f > 0
                      ? ((t.fillStyle = m),
                        h && m && t.fillRect(b + s + u, l + this.offsets[e] * r + o, f, this.fontSize / 15),
                        (u = d.left),
                        (f = d.width),
                        (h = g),
                        (m = p),
                        (r = n),
                        (o = a))
                      : (f += d.kernedWidth);
                (t.fillStyle = p),
                  g && p && t.fillRect(b + s + u, l + this.offsets[e] * r + o, f - _, this.fontSize / 15),
                  (y += i);
              } else y += i;
            this._removeShadow(t);
          }
        },
        _getFontDeclaration: function(t, i) {
          var r = t || this,
            n = this.fontFamily,
            s = e.Text.genericFonts.indexOf(n.toLowerCase()) > -1,
            o =
              void 0 === n || n.indexOf("'") > -1 || n.indexOf(',') > -1 || n.indexOf('"') > -1 || s
                ? r.fontFamily
                : '"' + r.fontFamily + '"';
          return [
            e.isLikelyNode ? r.fontWeight : r.fontStyle,
            e.isLikelyNode ? r.fontStyle : r.fontWeight,
            i ? this.CACHE_FONT_SIZE + 'px' : r.fontSize + 'px',
            o
          ].join(' ');
        },
        render: function(t) {
          this.visible &&
            (!this.canvas || !this.canvas.skipOffscreen || this.group || this.isOnScreen()) &&
            (this._shouldClearDimensionCache() && this.initDimensions(), this.callSuper('render', t));
        },
        _splitTextIntoLines: function(t) {
          for (var i = t.split(this._reNewline), r = new Array(i.length), n = ['\n'], s = [], o = 0; o < i.length; o++)
            (r[o] = e.util.string.graphemeSplit(i[o])), (s = s.concat(r[o], n));
          return s.pop(), { _unwrappedLines: r, lines: i, graphemeText: s, graphemeLines: r };
        },
        toObject: function(t) {
          var e = [
              'text',
              'fontSize',
              'fontWeight',
              'fontFamily',
              'fontStyle',
              'lineHeight',
              'underline',
              'overline',
              'linethrough',
              'textAlign',
              'textBackgroundColor',
              'charSpacing'
            ].concat(t),
            r = this.callSuper('toObject', e);
          return (r.styles = i(this.styles, !0)), r;
        },
        set: function(t, e) {
          this.callSuper('set', t, e);
          var i = !1;
          if ('object' == typeof t) for (var r in t) i = i || -1 !== this._dimensionAffectingProps.indexOf(r);
          else i = -1 !== this._dimensionAffectingProps.indexOf(t);
          return i && (this.initDimensions(), this.setCoords()), this;
        },
        complexity: function() {
          return 1;
        }
      })),
      (e.Text.fromObject = function(t, i) {
        return e.Object._fromObject('Text', t, i, 'text');
      }),
      (e.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace']),
      void (e.util.createAccessors && e.util.createAccessors(e.Text)));
})('undefined' != typeof exports ? exports : this);
!(function() {
  fabric.util.object.extend(fabric.Text.prototype, {
    isEmptyStyles: function(t) {
      if (!this.styles) return !0;
      if ('undefined' != typeof t && !this.styles[t]) return !0;
      var e = 'undefined' == typeof t ? this.styles : { line: this.styles[t] };
      for (var i in e) for (var n in e[i]) for (var r in e[i][n]) return !1;
      return !0;
    },
    styleHas: function(t, e) {
      if (!this.styles || !t || '' === t) return !1;
      if ('undefined' != typeof e && !this.styles[e]) return !1;
      var i = 'undefined' == typeof e ? this.styles : { 0: this.styles[e] };
      for (var n in i) for (var r in i[n]) if ('undefined' != typeof i[n][r][t]) return !0;
      return !1;
    },
    cleanStyle: function(t) {
      if (!this.styles || !t || '' === t) return !1;
      var e,
        i,
        n,
        r = this.styles,
        s = 0,
        o = !0,
        a = 0;
      for (var c in r) {
        e = 0;
        for (var h in r[c]) {
          var n = r[c][h],
            l = n.hasOwnProperty(t);
          s++,
            l ? (i ? n[t] !== i && (o = !1) : (i = n[t]), n[t] === this[t] && delete n[t]) : (o = !1),
            0 !== Object.keys(n).length ? e++ : delete r[c][h];
        }
        0 === e && delete r[c];
      }
      for (var u = 0; u < this._textLines.length; u++) a += this._textLines[u].length;
      o && s === a && ((this[t] = i), this.removeStyle(t));
    },
    removeStyle: function(t) {
      if (this.styles && t && '' !== t) {
        var e,
          i,
          n,
          r = this.styles;
        for (i in r) {
          e = r[i];
          for (n in e) delete e[n][t], 0 === Object.keys(e[n]).length && delete e[n];
          0 === Object.keys(e).length && delete r[i];
        }
      }
    },
    _extendStyles: function(t, e) {
      var i = this.get2DCursorLocation(t);
      this._getLineStyle(i.lineIndex) || this._setLineStyle(i.lineIndex),
        this._getStyleDeclaration(i.lineIndex, i.charIndex) || this._setStyleDeclaration(i.lineIndex, i.charIndex, {}),
        fabric.util.object.extend(this._getStyleDeclaration(i.lineIndex, i.charIndex), e);
    },
    get2DCursorLocation: function(t, e) {
      'undefined' == typeof t && (t = this.selectionStart);
      for (var i = e ? this._unwrappedTextLines : this._textLines, n = i.length, r = 0; n > r; r++) {
        if (t <= i[r].length) return { lineIndex: r, charIndex: t };
        t -= i[r].length + this.missingNewlineOffset(r);
      }
      return { lineIndex: r - 1, charIndex: i[r - 1].length < t ? i[r - 1].length : t };
    },
    getSelectionStyles: function(t, e, i) {
      'undefined' == typeof t && (t = this.selectionStart || 0),
        'undefined' == typeof e && (e = this.selectionEnd || t);
      for (var n = [], r = t; e > r; r++) n.push(this.getStyleAtPosition(r, i));
      return n;
    },
    getStyleAtPosition: function(t, e) {
      var i = this.get2DCursorLocation(t),
        n = e
          ? this.getCompleteStyleDeclaration(i.lineIndex, i.charIndex)
          : this._getStyleDeclaration(i.lineIndex, i.charIndex);
      return n || {};
    },
    setSelectionStyles: function(t, e, i) {
      'undefined' == typeof e && (e = this.selectionStart || 0),
        'undefined' == typeof i && (i = this.selectionEnd || e);
      for (var n = e; i > n; n++) this._extendStyles(n, t);
      return (this._forceClearCache = !0), this;
    },
    _getStyleDeclaration: function(t, e) {
      var i = this.styles && this.styles[t];
      return i ? i[e] : null;
    },
    getCompleteStyleDeclaration: function(t, e) {
      for (var i, n = this._getStyleDeclaration(t, e) || {}, r = {}, s = 0; s < this._styleProperties.length; s++)
        (i = this._styleProperties[s]), (r[i] = 'undefined' == typeof n[i] ? this[i] : n[i]);
      return r;
    },
    _setStyleDeclaration: function(t, e, i) {
      this.styles[t][e] = i;
    },
    _deleteStyleDeclaration: function(t, e) {
      delete this.styles[t][e];
    },
    _getLineStyle: function(t) {
      return !!this.styles[t];
    },
    _setLineStyle: function(t) {
      this.styles[t] = {};
    },
    _deleteLineStyle: function(t) {
      delete this.styles[t];
    }
  });
})();
